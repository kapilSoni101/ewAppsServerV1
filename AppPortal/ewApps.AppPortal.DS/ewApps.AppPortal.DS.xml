<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ewApps.AppPortal.DS</name>
    </assembly>
    <members>
        <member name="T:ewApps.AppPortal.DS.AppPortalAutoMapperProfileConf">
            <summary>
            Mapper class to map entity to model object.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalAutoMapperProfileConf.#ctor">
            <summary>
            Mapping constructor
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppAccess.AccessList(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppAccess.AccessList">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppAccess.CheckAccess(System.Int32,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PlatformEntityAccess">
            <summary>
            This class enables permission relatrd logic for platform entities.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformEntityAccess.AccessList(System.Guid)">
            <summary>
            GEts the permission bits for given entity id.
            </summary>
            <param name="entityId">Entity id to get permission.</param>
            <returns>Permission list array.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.PublisherEntityAccess">
            <summary>
            This class enables permission relatrd logic for platform entities.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherEntityAccess.AccessList(System.Guid)">
            <summary>
            GEts the permission bits for given entity id.
            </summary>
            <param name="entityId">Entity id to get permission.</param>
            <returns>Permission list array.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPlatformAppAccess">
            <summary>
            Manages the platform permission related operations.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPlatformEntityAccess">
            <summary>
            Manages the all platform permission related operations.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusinessAccess">
            <summary>
            Manages the Business permission related operations.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPublisherAccess">
            <summary>
            Manages the Publisher permission related operations.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPublisherEntityAccess">
            <summary>
            Manages the all Publisher permission related operations.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQAppPortalDS.GetShipAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Ship-App branding model
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQAppPortalDS.GetPayAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Pay-App branding model
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQAppPortalDS.GetCustAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Cust-App branding model
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQAppPortalDS.GetVendAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Vend-App branding model
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBACustomerDS.GetCustomerInfoAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer info by business entity customer id.
            </summary>
            <param name="baCustomerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBACustomerDS.GetCustomerInfoByBusinessPartnerIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer info by businessPartnerTenantId.
            </summary>
            <param name="businessPartnerTenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBACustomerDS.GetAppServiceListByAppIdAndTenantAsync(System.Guid,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get app services and attrubute list.
            </summary>
            <param name="appId">Application id.</param>
            <param name="tenantId">Tenant id</param>
            <param name="customerId">customer id</param>
            <param name="includeAttributeAccountDetail"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBACustomerDS.GetBusinessAppServiceAttributeListByServiceIdsAsync(System.Collections.Generic.List{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Get service attribute list by service ids.
            </summary>
            <param name="serviceIdList">List of AppService Id.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBACustomerDS.GetBusinessAppServiceListByAppKeyAndTenantIdAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get app service by appkey and tenantid.
            </summary>
            <param name="appKey"></param>
            <param name="tenantId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBACustomerDS.GetAppServiceListByAppKeyAndTenantAsync(System.String,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get app services and attrubute list.
            </summary>
            <param name="appKey">Application key.</param>
            <param name="tenantId">Tenant id</param>
            <param name="customerId">customer id</param>
            <param name="includeAttributeAccountDetail"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.GetBusinessNameListByPublisherId(System.Guid,ewApps.Core.BaseService.BooleanFilterEnum)">
            <summary>
            Gets the business name list by publisher id and business active state filter.
            </summary>
            <param name="publisherId">The publisher identifier.</param>
            <param name="businessActiveState">Business active state to filter business records.</param>
            <returns>Returns list of business names that matches provided publisher id and business active state filter.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.GetBusinessListAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get filteredbusiness  tenant list.
            </summary>
            <param name="filter">Filter object</param>
            <returns>return list of business of login tenant.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.GetFilterBusinessListAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get filter business list.
            </summary>
            <param name="filter">Filter object contains filter properties.</param>
            <param name="homeAppId">Home application id.</param>
            <param name="tenantId">Filter by tenantid.</param>
            <param name="token"></param>
            <returns>return filter business list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.GetBusinessAppSubscriptionInfoDTOAsync(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get subscribed application list by tenantid.
            </summary>
            <param name="tenantId"></param>
            <param name="publisherTenantId"></param>
            <param name="isdeleted"></param>
            <param name="token"></param>
            <returns>return application list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.GetBusinessConfigurationDetailAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Business Configuration Detail 
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.GetBusinessBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Platform branding model
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.GetAllCustomerUserByBusinessPartnerId(System.Guid,System.Guid)">
            <summary>
            Get list of user for a particular customer along with its application details.
            </summary>
            <param name="businessPartnerTenantId">customer tenantId identifier of the customer.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.CheckUserIsLastAdminUserAsync(System.Guid,System.Int32,System.Guid)">
            <summary>
            
            </summary>
            <param name="tenantId"></param>
            <param name="userType"></param>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessAndUserDS.GetBusinessUserPermissionChangeNotificationGeneralDataAsync(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            Permission changes notification data 
            </summary>
            <param name="tenantUserId"></param>
            <param name="invitedTenantUserId"></param>
            <param name="tenantId"></param>
            <param name="appKey"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQBusinessUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <summary>
            Get the login user session by identityuserId, tenantId and appkey for the platform user.
            </summary>
            <param name="identityUserId">Users identity server linking identifier.</param>
            <param name="tenantId">tenant identifier of the user to get session for the user for a particular tenant.</param>
            <param name="appKey">This parameter indicates application key for the application for which we are geting the user session.</param>
            <returns>Returns platform user session data trasfer object containing user and its tenant and branding related information.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQConfigurationDS.GetConfigurationDetailAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            get configuration details
            </summary>
            <param name="buspartnertenantid"></param>        
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQConfigurationDS.GetVendorConfigurationDetailAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Vendor Configuration Detail
            </summary>
            <param name="buspartnertenantid"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQCustomerAndUserDS.GetCustomerSetupOnBoardDetailByAppAndBusinessAndUserIdAsync(System.String,System.Guid,System.Guid,System.Guid)">
            <summary>
            Customer Setup User OnBoard 
            </summary>
            <param name="appKey"></param>
            <param name="businessTenantId"></param>
            <param name="businessPartnerTenantId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQCustomerAndUserDS.CheckUserIsLastAdminUserAsync(System.Guid,System.Int32,System.Guid)">
            <summary>
            
            </summary>
            <param name="tenantId"></param>
            <param name="userType"></param>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQCustUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <summary>
            Get the login user session by identityuserId, tenantId and appkey for the platform user.
            </summary>
            <param name="identityUserId">Users identity server linking identifier.</param>
            <param name="tenantId">tenant identifier of the user to get session for the user for a particular tenant.</param>
            <param name="appKey">This parameter indicates application key for the application for which we are geting the user session.</param>
            <returns>Returns platform user session data trasfer object containing user and its tenant and branding related information.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQNotesDS.GetBusinessInfoWithQuotationByEntityId(System.Guid,System.Guid,System.Guid,System.Guid,System.Int32)">
            <summary>
            Get Business Information with Quotation 
            </summary>
            <param name="entityId"></param>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="userId"></param>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQNotesDS.GetBusinessInfoWithContractByEntityId(System.Guid,System.Guid,System.Guid,System.Guid,System.Int32)">
            <summary>
            Get Business Information with Contract 
            </summary>
            <param name="entityId"></param>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="userId"></param>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQNotesDS.GetBusinessInfoWithDraftDeliveryByEntityId(System.Guid,System.Guid,System.Guid,System.Guid,System.Int32)">
            <summary>
            Get Business Information With Draft Delivery
            
            </summary>
            <param name="entityId"></param>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="userId"></param>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQNotesDS.GetBusinessInfoWithDeliveryByEntityId(System.Guid,System.Guid,System.Guid,System.Guid,System.Int32)">
            <summary>
            Get Business Information With Delivery
            </summary>
            <param name="entityId"></param>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="userId"></param>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQNotesDS.GetBusinessInfoWithSalesOrderByEntityId(System.Guid,System.Guid,System.Guid,System.Guid,System.Int32)">
            <summary>
            Get Business Information With Sales Order 
            </summary>
            <param name="entityId"></param>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="userId"></param>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IQPlatBusinessDS">
            <summary>
            Provide functionality to write bussiness logic related to business entity by creating an object to this class.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPlatformAndUserDS.GetPlatformBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Platform branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPlatformAndUserDS.GetAppDetailsAsync">
            <summary>
            Method return all the apps with its service count
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPlatformAndUserDS.GetAppDetailsByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the application details by application identifier asynchronous.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPlatformUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <summary>
            Get the login user session by identityuserId, tenantId and appkey for the platform user.
            </summary>
            <param name="identityUserId">Users identity server linking identifier.</param>
            <param name="tenantId">tenant identifier of the user to get session for the user for a particular tenant.</param>
            <param name="appKey">This parameter indicates application key for the application for which we are geting the user session.</param>
            <returns>Returns platform user session data trasfer object containing user and its tenant and branding related information.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPubBusinessSubsPlanAppServiceDS.GetSubscriptionPlanServiceAndAttributeByPlanIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the subscription plan list service and attribute by publisher's business app subscription plan id.
            </summary>
            <param name="pubBusSubsPlanId">The publisher's business app subscription plan.</param>
            <param name="cancellationToken">The cancellation token to cancel async task.</param>
            <returns>Returns service and attribute list that matches given publisher's business app subscription plan id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPubBusinessSubsPlanAppServiceDS.GetPlanServicesByPlanIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get subscribed services by PlanId.
            </summary>
            <param name="pubBusSubsPlanId">PubBusinessSubsPlanId</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Platform branding model
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetConfigurationDetailAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method return configuration model
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetAppDetailsAsyncFromPubAppSettingAppAndTenantIDAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get appdetail bu publisher tenant and appid.
            </summary>
            <param name="appId"></param>
            <param name="pubTenantId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherSubscribedAppSubdomainAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
             Get subscribed application list by a publisher tenant subdomain.
            </summary>
            <param name="subdomainName">Publisher tenant subdomain name</param>
            <param name="includeInactive">Include inactive application also.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherAppServiceByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get application sub services subscribed by a Tenant applications.
            </summary>
            <param name="tenantId">Id of publisher Tenant</param>
            <returns>return application sub services and Application id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetAppSubscriptionAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get publisher created subscription plan or master subscription plan.
            </summary>
            <param name="appId"></param>
            <param name="publisherTenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetSubscriptionPlanListByAppAndPubTenantIdAsync(System.Guid,System.Guid,ewApps.Core.BaseService.BooleanFilterEnum,System.Threading.CancellationToken)">
            <summary>
            Gets the subscription plan list by application identifier and plan state.
            </summary>
            <param name="appId">The application identifier to get application specific subscription plan.</param>
            <param name="publisherTenantId">The publisher tenant id to get publisher's business app subscription plan.</param>
            <param name="planState">The plan state to filter subscription plan.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns subscription plan list that matches the input parameters.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetAppDetailsPublisherAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the application details publisher asynchronous.
            </summary>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetAppDetailsWithServicesPublisherAsync(System.Guid,ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the application details with services asynchronous publisher.
            </summary>
            <param name="pubAppSettingID">The pub application setting identifier.</param>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetAllPublishersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all publishers.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of publishers detail.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherDetailByPublisherIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the publisher detail by publisher identifier.
            </summary>
            <param name="publisherId">The publisher identifier to find publisher detail.</param>
            <param name="cancellationToken">The cancellation token to cnacel async operation.</param>
            <returns>Returns publisher details that matches provided publisher id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetAppsWithServiceAndAttributeAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the applications with service and attribute that matches the given publisher tenant id..
            </summary>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="cancellationToken">A token to cancel async operation task.</param>
            <returns>Returns list of application with corresponding services and attributes.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublishersBusinessSubscriptionPlanListByAppIdsAndPublisherTenantIdAsync(System.Collections.Generic.List{System.Guid},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the publishers business subscription plan list by application ids and publisher tenant identifier asynchronous.
            </summary>
            <param name="appIdList">The application identifier list.</param>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns all saved publisher's business app subscirption plan information that matches provided app id and publisher tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPubAppSettingListByPublisherTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the pub application setting list by publisher tenant identifier asynchronous.
            </summary>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns publisher application setting list that matches given publisher tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherNameByBusinessTenantId(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the publisher name by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherNameByPartnerTenantId(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the publisher name by partner tenant identifier.
            </summary>
            <param name="partnerTenantId">The partner tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherNameByTenantId(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the publisher name by tenant identifier.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherDetailByBusinessIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the publisher detail by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier to find publisher detail.</param>
            <param name="cancellationToken">The cancellation token to cnacel async operation.</param>
            <returns>Returns publisher details that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherAndUserDS.GetPublisherUserPermissionChangeNotificationGeneralDataAsync(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get Publisher User permission change
            </summary>
            <param name="tenantUserId"></param>
            <param name="invitedTenantUserId"></param>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQPublisherUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <summary>
            Get the login user session by identityuserId, tenantId and appkey for the platform user.
            </summary>
            <param name="identityUserId">Users identity server linking identifier.</param>
            <param name="tenantId">tenant identifier of the user to get session for the user for a particular tenant.</param>
            <param name="appKey">This parameter indicates application key for the application for which we are geting the user session.</param>
            <returns>Returns platform user session data trasfer object containing user and its tenant and branding related information.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IQVendUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <summary>
            Get the login user session by identityuserId, tenantId and appkey for the platform user.
            </summary>
            <param name="identityUserId">Users identity server linking identifier.</param>
            <param name="tenantId">tenant identifier of the user to get session for the user for a particular tenant.</param>
            <param name="appKey">This parameter indicates application key for the application for which we are geting the user session.</param>
            <returns>Returns platform user session data trasfer object containing user and its tenant and branding related information.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IAboutUsDS">
            <summary>
            This class implements standard business logic and operations for appUser entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAboutUsDS.GetPlatformAboutUsDetailsAsync">
            <summary>
            Get About us Detail by for platform
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAboutUsDS.GetPublisherAboutUsDetails">
            <summary>
            Get About us Detail on publisher
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAboutUsDS.GetBusinessAboutUsDetails(System.Guid)">
            <summary>
            Get About us Detail on business 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAboutUsDS.GetVendorAboutUsDetails(System.Guid)">
            <summary>
            Get About us Detail on Vendor 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAuthenticationDS.ValidateSubdomainAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Validates the subdomain asynchronous.
            </summary>
            <param name="subDomain">The sub domain.</param>
            <param name="pKey">The p key.</param>
            <param name="uType">Type of the user.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAuthenticationDS.GetTokenInfoByTokenIdAsync(System.Guid,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets the token information by token identifier asynchronous.
            </summary>
            <param name="tokenId">The token identifier.</param>
            <param name="pKey">The p key.</param>
            <param name="IdentityAppClientId">The identity application client identifier.</param>
            <param name="uType">Type of the user.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAuthenticationDS.GetTokenInfoBySubdomainAsync(System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets the token information by subdomain asynchronous.
            </summary>
            <param name="subDomain">The sub domain.</param>
            <param name="pKey">The p key.</param>
            <param name="IdentityAppClientId">The identity application client identifier.</param>
            <param name="uType">Type of the user.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAuthenticationDS.CheckTokenAsync(System.Guid)">
            <summary>
            Check the given token present in the DB.
            </summary>
            <param name="tokenId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAuthenticationDS.DeleteTokenInfoAsync(ewApps.AppPortal.DTO.TokenInfoDTO)">
            <summary>
            Deleted tokeinfo 
            </summary>
            <param name="tokenId"></param>
            <param name="tokenType"></param>
            <param name="identityUserId"></param>
            <param name="appKey"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IAppPortalDS">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.GetShipAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Ship App branding branding details by Tenantid and AppId.
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.UpdateShipAppBrandingAsync(ewApps.AppPortal.DTO.AppPortalBrandingDQ)">
            <summary>
            Update Ship App branding
            </summary>
            <param name="appPortalBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.GetPayAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Pay App branding branding details by Tenantid and AppId.
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.UpdatePayAppBrandingAsync(ewApps.AppPortal.DTO.AppPortalBrandingDQ)">
            <summary>
            Update Pay App branding
            </summary>
            <param name="appPortalBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.GetCustAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Cust App branding branding details by Tenantid and AppId.
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.UpdateCustAppBrandingAsync(ewApps.AppPortal.DTO.AppPortalBrandingDQ)">
            <summary>
            Update Cust App branding
            </summary>
            <param name="appPortalBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.GetVendAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Vend App branding branding details by Tenantid and AppId.
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.UpdateVendAppBrandingAsync(ewApps.AppPortal.DTO.AppPortalBrandingDQ)">
            <summary>
            Update Vend App branding
            </summary>
            <param name="appPortalBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IAppPortalDS.GetThemeNameAndThemeKey">
            <summary>
            Get Theme name theme key 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusCustomerDS.GetCustomerAndPaymentInfoAsync(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get customer info by business entity customer id.
            </summary>
            <param name="baCustomerId">BACustomer unique id</param>
            <param name="appId">Application id</param>
            <param name="includeAccountDetl">Include attribute account detail.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusCustomerDS.GetCustomerInfoByBusinessPartnerAsync(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get customer info by businessPartnerTenantId.
            </summary>
            <param name="businessPartnerTenantId"></param>
            <param name="appId">Application id</param>
            <param name="includeAccountDetl">Include attribute account detail.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusCustomerDS.GetCustomerListByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business update model with all child entities models.
            </summary>
            <param name="tenantId">Unique tenant id of business.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusCustomerDS.GetCustomerAndPaymentAppKeyInfoAsync(System.Guid,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get customer info by business entity customer id.
            </summary>
            <param name="baCustomerId">BACustomer unique id</param>
            <param name="appKey">Application id</param>
            <param name="includeAccountDetl">Include attribute account detail.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusCustomerDS.GetCustomerListByStatusAndTenantIdAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusCustomerDS.DeleteCustomerAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete customer
            </summary>
            <param name="customerId"></param>
            <param name="businessPartnerTenantId"></param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusinessAddressDS">
            <summary>
            Provide supportive method for address entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessAddressDS.GetAddressListByParentEntityIdAndAddressTypeAsync(System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get address detail list by parentEntityid and addressType.
            </summary>
            <param name="tenantId"></param>
            <param name="businessId"></param>
            <param name="addressType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessAddressDS.GetAddressEntityListByParentEntityIdAndAddressTypeAsync(System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get address detail list by parent and entityid.
            </summary>
            <param name="tenantId"></param>
            <param name="parentEntityId"></param>
            <param name="addressType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessAddressDS.AddUpdateBusinessAddressListAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.BusinessAddressModelDTO},System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add/Update business address.
            </summary>
            <param name="addressDTOList"></param>
            <param name="tenantId"></param>
            <param name="businessId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusinessDS">
            <summary>
            Provide functionality to write bussiness logic on business entity by creating an object to this class.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessDS.GetBusinessByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business by tenantid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessDS.GetBusinessTenantDetailModelDTOAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business model by tenant id.
            </summary>
            <param name="tenantId">Unique tenant id.</param>
            <param name="token"></param>
            <returns>return detail business tenant model.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessDS.GetBusinessBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get publisher branding details by Tenantid and AppId.
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessDS.GetThemeNameAndThemeKey">
            <summary>
            Get Theme name theme key 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessDS.UpdateBusinessBranding(ewApps.AppPortal.DTO.BusinessBrandingDQ)">
            <summary>
            Update Business branding
            </summary>
            <param name="businessBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessDS.SyncERPBusiness(ewApps.AppPortal.DTO.BusinessSyncDTO)">
            <summary>
            Update Business From SAP
            </summary>
            <param name="businessSyncDTO"></param>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusinessExtDS">
            <summary>
            A wrapper class contains method to get business and related entities.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessExtDS.GetBusinessUpdateModelAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business update model with all child entities models.
            </summary>
            <param name="tenantId">Unique tenant id of business.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessExtDS.TestConnectionAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Method is used to validate ERP connector connection.
            </summary>
            <param name="request">Request model</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessExtDS.PullERPDataAsync(ewApps.AppPortal.DTO.PullERPDataReqDTO,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="pullERPDataAsync"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessExtDS.SyncTimeLogAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data time log from connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessExtDS.GetBusinessConfigurationDetailAsync(System.Threading.CancellationToken)">
            <summary>
            Get Configuration Detail For Business 
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessExtDS.UpdateBusinessConfigurationDetailAsync(ewApps.AppPortal.DTO.BusConfigurationDTO,System.Threading.CancellationToken)">
            <summary>
            Update Business Configuration 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessExtDS.DeleteBusinessAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete business and its subscription.
            </summary>
            <param name="tenantId">Business tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusinessSignUpDS">
            <summary>
            A business wrapper interface, expose all method related to business/user/tenant.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessSignUpDS.BusinessSignUpAsync(ewApps.AppPortal.DTO.BusinessSignUpRequestDTO,System.Threading.CancellationToken)">
            <summary>
            Method is used to singup business as well as subscribe the application for business.
            </summary>
            <param name="businessRegistrtionDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessSignUpDS.ReInvitePrimaryBusinessUserAsync(System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Update business and chile entities.
            </summary>
            <param name="tenantRegistrtionDTO">Business detail model with all subscribed application object..</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessUpdateDS.UpdateBusinessAsync(ewApps.AppPortal.DTO.UpdateBusinessTenantModelDQ,System.Threading.CancellationToken)">
            <summary>
            Update business and related entities.
            </summary>
            <param name="tenantRegistrtionDTO">Busines tenant object.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusVendorDS.GetBusinessVendorDetail(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get vendor detail.
            </summary>
            <param name="vendorId">Vendor Id</param>
            <param name="tenantId">Tenant Id</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusTenantUserDS">
            <summary>
            This class implements standard business logic and operations for Business TenantUser entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusTenantUserDS.GetUserInfoByIdAsync(System.Guid)">
            <summary>
            this method is used to user profile detail
            </summary>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusTenantUserDS.UpdateTenantUserProfile(ewApps.AppPortal.DTO.TenantUserProfileDTO)">
            <summary>
            Update Tenant User Profile 
            </summary>
            <param name="tenantUserProfileDTO"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ICustomerDS">
            <summary>
             Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to BACustomer entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerDS.AddCustomerAsync(ewApps.AppPortal.DTO.CustomerSignUpReqDTO,System.Threading.CancellationToken)">
            <summary>
            add customer data.
            </summary>
            <param name="token"></param>
            <param name="customerSignupDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerDS.GetConfigurationDetailAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="buspartnertenantid"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerDS.ValidateCreditCardDetailAsync(ewApps.AppPortal.DTO.CustCreditCardRequestDTO,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="custCreditCardRequestDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerDS.UpdatetConfigurationDetailAsync(ewApps.AppPortal.DTO.CustConfigurationUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update Customer Configuration branding
            </summary>
            <param name="custConfigurationUpdateDTO"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerDS.AddCustomerAccountDetail(System.Guid,ewApps.AppPortal.DTO.CustomeAccDetailDTO,System.Threading.CancellationToken)">
            <summary>
            Save account detail.
            </summary>
            <param name="customerId"></param>
            <param name="customeAccDetail"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerDS.GetCustomerDetailByIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the customer all info by id
            </summary>
            <param name="customerId">cust id</param>
            <param name="token">token info</param>
            <returns>customr detai dto</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerDS.GetCustomerByBusinesPartnerIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer by business partner id.
            </summary>
            <param name="busPartnerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ICustomerSignUpDS">
            <summary>
            Contains all required customer SignUp methods.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ewApps.AppPortal.DS.ICustomerSignUpDS.CustomerSignUpAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.CustomerSignUpReqDTO},System.Threading.CancellationToken)" -->
        <member name="M:ewApps.AppPortal.DS.ICustomerSignUpDS.SignUpCustomerAsync(ewApps.AppPortal.DTO.SignUpBACustomerDTO,System.Threading.CancellationToken)">
            <summary>
            Signup customer.
            Method will use in standalone case.
            </summary>
            <param name="signupCustDTO"></param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="T:ewApps.AppPortal.DS.ICustTenantUserDS">
            <summary>
            Cust Tenant User class contains all add/update/delete/get methods for Tenant User On Customer.    
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustTenantUserDS.GetUserInfoByIdAsync(System.Guid)">
            <summary>
            this method is used to user profile detail
            </summary>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustTenantUserDS.UpdateTenantUserProfile(ewApps.AppPortal.DTO.TenantUserProfileDTO)">
            <summary>
            Update Tenant User Profile 
            </summary>
            <param name="tenantUserProfileDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IASNotificationDS.ReadASNotification(System.Guid)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IASNotificationDS.GetUnreadASNotificationList(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="AppId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IFavoriteDS">
            <summary>
            Favorite Add/update/delete
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IFavoriteDS.CheckFavoriteMenu(System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Check item is favorite or not
            </summary>
            <param name="token"></param>
            <param name="appid"></param>
            <param name="menukey"></param>
            <param name="portalkey"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IFavoriteDS.GetFavoriteMenuList(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Get favorite menu item list
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IFavoriteDS.AddFavoriteMenu(ewApps.AppPortal.DTO.FavoriteAddDTO,System.Threading.CancellationToken)">
            <summary>
            Add favorite menu item
            </summary>
            <param name="favoriteAddDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IFavoriteDS.DeleteFavoriteMenu(ewApps.AppPortal.DTO.FavoriteUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            deleted favorite menu item
            </summary>
            <param name="favoriteUpdateDTO"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.INotesDS.AddNotesListAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.NotesAddDTO},System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Add notes.
            </summary>
            <param name="notesList"></param>
            <param name="entityId"></param>
            <param name="entityType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPortalAppLinkingDS">
            <summary>
            This interface define methods to perform any type of operations on <see cref="!:ewApps.Core.Entity.PortalAppLinking"/> entity.
            </summary> 
        </member>
        <member name="T:ewApps.AppPortal.DS.IPortalDS">
            <summary>
            This interface define methods to perform any type of operations on <see cref="!:ewApps.Core.Entity.Portal"/> entity.
            </summary> 
        </member>
        <member name="T:ewApps.AppPortal.DS.IRoleDS">
            <summary>
            Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to Role entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IRoleDS.GetAdminRoleIdByAppIdAndUserTypeAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get admin rol by application id.
            </summary>
            <param name="appId">Unique application id.</param>
            <param name="userType">UserType</param>
            <param name="token">Async token</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IRoleDS.GetOrCreateRoleAsync(System.Int64,System.Guid,System.Int32,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Creates the role if not exists else retuen the existinf roleId.
            </summary>
            <param name="userPermissionbitMask">permission bit mask of the user</param>
            <param name="appId">appliation identitfier of the user</param>
            <param name="userType">User tyep of the user</param>
            <param name="loginTenantUserId">Login user tenantUser id to identitify the user</param>
            <param name="token">canclation token for the async methods</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IRoleDS.GetEntityByAppUserAndAppId">
            <summary>
            Gets the role entity by appid and userid.
            </summary>
            <returns>Role entity.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IRoleLinkingDS">
            <summary>
            Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to RoleLinking entity.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetPlatformPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get platform preference list
            </summary>
            <param name="token"></param>
            <param name="appid"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetPublisherPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get publisher setup preference list
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetBusSetupPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business setup preference list
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetBusCustPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business customer app preference list
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetBusPayPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business payment app preference list.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetBusVendorPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business vendor app preference list.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetCustSetupPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer setup preference list
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetCustCustAppPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer customer app preference list
            </summary>
            <param name="appid"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.GetCustPayAppPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer Payment app preference list
            </summary>
            <param name="appid"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.UpdatePlatformPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update platform preference list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.UpdatePublisherPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update publisher preference list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.UpdateBusSetupPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update business setup preference list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.UpdateBusCustPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update business customer app list 
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.UpdateBusPayPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update business payment app list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.UpdateCustCustPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update customer portal customer app list 
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ITenantUserAppPreferenceDS.UpdateCustPayPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update Customer payment app list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IViewSettingsDS.AddUpdateViewSettings(ewApps.AppPortal.DTO.ViewSettingDTO,System.Threading.CancellationToken)">
            <summary>
            Add Update View Settings
            </summary>
            <param name="viewSettingDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IViewSettingsDS.DeleteViewSettings(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete View Setting If Exist 
            </summary>
            <param name="viewSettingDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IViewSettingsDS.GetViewSettingsListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get View Settings List 
            </summary>
            <param name="id"></param>
            <param name="appkey"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPaymentAndInvoiceDS">
            <summary>
            A wrapper interface contains method to expose invoice/payment method.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetInvoiceListByTenantAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get invoice list by tenant id.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetInvoiceAndCustomerPayInfoByInvoiceIdAndSyncInvoiceAsync(ewApps.AppPortal.DTO.InvoiceCustomerRequestDTO,System.Threading.CancellationToken)">
            <summary>
            Get invoices customer and its payment info.
            </summary>
            <param name="reqDto">invoice list and customerid.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetCancelInvoiceListByTenantAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get cancel invoice list by tenant id. 
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetInvoiceListByCustomerAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get customer invoices by customer partner tenantid and filter by date.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns>retun list of invoices.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetQuickPayInvoicesByTenantAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get quick pay invoice list.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetCustomerPaybleinvoicesByCustomerIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer payble invoices list.
            </summary>
            <param name="customerId">customer id</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetPaymentDTOAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets Payment DTO given its  id and inventoryid.
            </summary>
            <param name="id">  Id, unique key</param>
            <param name="invoiceId">  invoiceId</param>
            <param name="token">Cancellation token</param>
            <returns>Found Payment DTO</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetPaymentDTOAsyncByPaymentIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get payment detail by paymentid.
            </summary>
            <param name="paymentId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetAdvancePaymentDTOAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets advance Payments detail by given Payment id.
            </summary>
            <param name="paymentId">  Id, unique key</param>        
            <param name="token">Cancellation token</param>
            <returns>Found Payment DTO</returns>    
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetInvoicesByPaymentIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get the list of invoices paid in a single transection(payment).
            </summary>  
            <param name="paymentId">PaymentId</param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetFilterTenantPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by tenant and from/todate for a invoice by partnerid.
            </summary>
            <param name="filter">filter for getting tenant payment list.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetCustomerFilterPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by tenant and from/todate for a invoice by partnerid.
            </summary>
            <param name="filter">filter for getting tenant payment list.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetPaymentHistoryByInvoiceAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by invoice.
            </summary>
            <param name="invoiceId">filter by invoice.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetVoidPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by tenant and from/todate for a invoice by partnerid.
            </summary>
            <param name="filter">filter for getting tenant payment list.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetSattledFilterTenantPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by tenant and from/todate for a invoice by partnerid.
            </summary>
            <param name="filter">filter for getting tenant payment list.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetInvoiceAttachmentListByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice attachment list.
            </summary>
            <param name="invoiceId">Unique invoiceId id.</param>
            <param name="token"></param>
            <returns>return attachment list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetPaymentStatusFlowListAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Get payment transection status flow.
            </summary>
            <param name="paymentId">Unique paymentId</param>
            <param name="paymentMode">Mode of payment Vericheck or card</param>
            <param name="token"></param>
            <returns>retun payment status.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetFilterTenantPreAuthPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get preauthorized payment history.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetFilterTenantAdvancePaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get advance payment list by tenantid.
            </summary>
            <param name="filter">Filter object contains filter criteria.</param>
            <param name="token"></param>
            <returns></returns>        
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetCustomerAdvanceFilterPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get customer advance payment list by partnerid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.AuthorizeCardPaymentAsync(ewApps.AppPortal.DTO.AddPreAuthPaymentDTO,System.Threading.CancellationToken)">
            <summary>
            Authorize/Block Amount from Credit card for future use.
            </summary>
            <param name="payments">authorized payment object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.VoidPreAuthPaymentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            UnAuthorize/UnBlock Amount from Credit card for future use.
            </summary>
            <param name="preAuthPaymentId"></param>        
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetInvoiceByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice by id.
            </summary>
            <param name="invoiceId">Unique invoice id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GenerateQuickPaylink(ewApps.AppPortal.DTO.AddDeepLinkDTO,System.Threading.CancellationToken)">
            <summary>
            Generate deeplink of a invoice.
            </summary>
            <param name="deepLinkRequestModel"></param>
            <param name="token">Cancellation token</param>
            <returns>return link url.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.GetInvoiceCustomerPaymentDetailAsyncByQuickPaylink(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get invoice detail by deeplink shorturl.
            </summary>
            <param name="shortUrlKey">Shorturl key</param>
            <param name="machineIPAddress">Machine IP address.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.QuickPaymentsAsync(ewApps.AppPortal.DTO.AddPaymentDTO[],System.String,System.Threading.CancellationToken)">
            <summary>
            Add muliple invoice payment.
            </summary>
            <param name="payments">AddPaymentDTO object</param>
            <param name="shorturl">a key generated for making payment.</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.AddPaymentsAsync(ewApps.AppPortal.DTO.AddPaymentDTO[],System.Threading.CancellationToken)">
            <summary>
            Add muliple invoice payment.
            </summary>
            <param name="payments">AddPaymentDTO object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.AddAdvancePaymentsAsync(ewApps.AppPortal.DTO.AddPaymentDTO,System.Threading.CancellationToken)">
            <summary>
            Pay advance payment.
            </summary>
            <param name="payment">AddPaymentDTO object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.RefundPaymentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Refund payment transaction.
            </summary>
            <param name="paymentId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.VoidPaymentAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Void payment transaction.
            </summary>
            <param name="paymentId"></param>
            <param name="serviceName">Name of service, used for pay invoice.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.AddInvoiceAsync(ewApps.AppPortal.DTO.AddBAARInvoiceDTO,System.Threading.CancellationToken)">
            <summary>
            Add invoice.
            </summary>
            <param name="invoiceDTO">Add invoice object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.AddInvoiceAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add invoice.
            </summary>
            <param name="httpRequest">httpRequest object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.DeleteInvoiceAttachmentByDocumentIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            delete invoice attachment.
            </summary>
            <param name="invoiceId">invoiceId</param>
            <param name="documentId">Unique document id.</param>
            <param name="token"></param>
            <returns>return attachment list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentAndInvoiceDS.CancelInvoiceAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Cancel invoice.
            </summary>
            <param name="invoiceId">invoice id</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="T:ewApps.AppPortal.DS.IPlatformAppDS">
            <summary>
            Provide functionality to write bussiness logic on app entity by creating an object to this class.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformAppDS.GetAppDetailsAsync">
            <summary>
            Method return all the apps with its service count
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformAppDS.UpdateAppAsync(ewApps.AppPortal.DTO.AppAndServiceDTO)">
            <summary>
            Updates the application asynchronous.
            </summary>
            <param name="appAndServiceDTO">The application and service dto.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformAppDS.GetAppDetailsByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the application details by application identifier asynchronous.
            </summary>
            <param name="AppId">The application identifier.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformAppDS.GetAppDetailsWithServicesAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the application details with services asynchronous.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformAppDS.GetPublisherListByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the publisher list by application identifier asynchronous.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformAppDS.GetAppServiceNameAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the application services details asynchronous.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformAppDS.GetBusinessNameByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the business name by application identifier asynchronous.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPlatformDS">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformDS.GetPlatformBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get platform Branding details by tenantId and appId
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformDS.UpdatePlatformBranding(ewApps.AppPortal.DTO.DBQuery.PlatformBrandingDQ)">
            <summary>
            Update platform branding
            </summary>
            <param name="platformBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformDS.GetThemeNameAndThemeKey">
            <summary>
            Get Theme name and theme key
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformDS.GetPlatformConnectorListAsync(System.Threading.CancellationToken)">
            <summary>
            Get Connector list
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPlatformSubscriptionPlanDS">
            <summary>
            This class implement business logic for app user
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformSubscriptionPlanDS.GetSubscriptionPlaninfoByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the subscription plan info by plan id.
            </summary>
            <param name="planId">Planid.</param>
            <param name="cancellationToken">token</param>
            <returns>Returns subscription plan detail info that matches given plan id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformSubscriptionPlanDS.DeleteSubscriptionPlanWithServiceAttributeAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes the subscription plan info by plan id.
            </summary>
            <param name="planId">Planid.</param>
            <param name="cancellationToken">token</param>
            <returns>Returns subscription plan detail info that matches given plan id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPlatTenantUserDS">
            <summary>
            This class implement business logic for app user
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatTenantUserDS.GetUserInfoByIdAsync(System.Guid)">
            <summary>
            this method is used to user profile detail
            </summary>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatTenantUserDS.UpdateTenantUserProfile(ewApps.AppPortal.DTO.TenantUserProfileDTO)">
            <summary>
            Update Tenant User Profile 
            </summary>
            <param name="tenantUserProfileDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatVersionDS.ApplicationVersionAsync">
            <summary>
            Get Applicaition Version 
            </summary>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPubBusinessSubsPlanAppServiceDS">
            <summary>
            Class contains tenant/app service support methods.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPubBusinessSubsPlanAppServiceDS.GetListPubBusinessSubsPlanAppServiceAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the list.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPubBusinessSubsPlanDS">
            <summary>
            This class Contain Business Login of PubBusinessSubsPlan 
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPubBusinessSubsPlanDS.GetByPublisherTenantAndAppAndPlanIdAsync(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the by publisher tenant and application and plan identifier.
            </summary>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="appId">The application identifier.</param>
            <param name="subscriptionPlanId">The subscription plan identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns <see cref="T:ewApps.AppPortal.Entity.PubBusinessSubsPlan"/> that matches given publisher tenant, app id and subscription plan id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPublisherAddressDS">
            <summary>
            Provide supportive method for address entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAddressDS.GetAddressListByPublisherIdAndAddressTypeAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get address detail list by parentEntityid and addressType.
            </summary>
            <param name="tenantId"></param>
            <param name="publisherId"></param>
            <param name="addressType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAddressDS.GetAddressEntityListByParentEntityIdAndAddressTypeAsync(System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get address detail list by parent and entityid.
            </summary>
            <param name="tenantId"></param>
            <param name="publisherId"></param>
            <param name="addressType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAddressDS.AddUpdatePublisherAddressListAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.PublisherAddressDTO},System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add/Update business address.
            </summary>
            <param name="addressDTOList"></param>
            <param name="tenantId"></param>
            <param name="publisherId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPublisherAppDS">
            <summary>
            A wrapper interfcae contain method to add/update/delete/get publisher data.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppDS.GetPublisherAppServicesAndSubscriptionDetailsAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get publisher subscribed application, services.
            </summary>
            <param name="sourcesubdomain"></param>
            <param name="includeInactive"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppDS.GetApplicationListAsync(System.Boolean,System.Int32)">
            <summary>
            Gets the application list that matches input parameters.
            </summary>
            <param name="active">if set to <c>true</c> [active] only active applications will fetch.</param>
            <param name="subscriptionMode">The subscription mode to filter applications.</param>
            <returns>Returns application list that matches given input parameters.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppDS.GetAppDetailsPublisherAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the application details publisher asynchronous.
            </summary>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppDS.GetAppDetailsWithServicesPublisherAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the application details with services publisher asynchronous.
            </summary>
            <param name="publisherAppID">The publisher application identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppDS.UpdateAppAsync(ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <summary>
            Updates the application asynchronous.
            </summary>
            <param name="appAndServiceDTO">The application and service dto.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppDS.GetBusinessNameByAppIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the business list by application identifier asynchronous publisher.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppDS.GetAppServicesNameByAppIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the application services name by application identifier asynchronous.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppDS.GetAppNameListByPublisheIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the business application name list by publisher tenant identifier.
            </summary>
            <param name="publisherTenantId">The publisher tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns business application name list that matches the provided publisher tenant id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPublisherAppSettingDS">
            <summary>
            Class provide supportive methods for publisher.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppSettingDS.UpdatePublisherAppSettingFromAppAsync(ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <summary>
            Updates the publisher application setting from application asynchronous.
            </summary>
            <param name="appAndServiceDTO">The application and service dto.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppSettingDS.UpdateAppAsync(ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <summary>
            Updates the application asynchronous.
            </summary>
            <param name="appAndServiceDTO">The application and service dto.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppSettingDS.GetByAppIdAndPublisherTenantIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the by application identifier and publisher tenant identifier.
            </summary>
            <param name="appId">The application identifier.</param>
            <param name="pubTenantId">The pub tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns PublisherAppSetting record that matches provided app and publisher tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherAppSettingDS.GetAppNameListByPublisherIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the business application name list by publisher identifier.
            </summary>
            <param name="publisherId">The publisher identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns business application name list that matches the provided publisher id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPublisherDS">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherDS.GetPublisherBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get publisher branding details by Tenantid and AppId.
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherDS.UpdatePublisherBranding(ewApps.AppPortal.DTO.DBQuery.PublisherBrandingDQ)">
            <summary>
            Update Publisher branding
            </summary>
            <param name="publisherBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherDS.GetThemeNameAndThemeKey">
            <summary>
            Get Theme name theme key 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherDS.GetConfigurationDetailAsync(System.Threading.CancellationToken)">
            <summary>
            Method return configuration detail
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherDS.UpdateConfigurationDetailAsync(ewApps.AppPortal.DTO.ConfigurationDTO)">
            <summary>
            Update Configuration details
            </summary>
            <param name="configurationDQ"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherDS.GetPublisherByPublisherTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get publisher by publisher tenantid.
            </summary>
            <param name="pubTenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherDS.GetPublisherConnectorListAsync(System.Threading.CancellationToken)">
            <summary>
            Get Connector list
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherDS.SyncTimeLogAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data time log from connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherExtDS.GetPublisherDetailByPublisherIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the publisher detail by publisher identifier.
            </summary>
            <param name="publisherId">The publisher identifier to find publisher detail.</param>
            <param name="cancellationToken">The cancellation token to cnacel async operation.</param>
            <returns>Returns publisher details that matches provided publisher id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPublisherSignUpDS">
            <summary>
            This interface provides method to manage Publisher signup operations.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherSignUpDS.PublisherSignUpAsync(ewApps.AppPortal.DTO.PublisherSignUpRequestDTO,System.Threading.CancellationToken)">
            <summary>
            Add's publisher and primary user realated information.
            </summary>
            <param name="publisherSignUpDTO">The publisher sign up dto.</param>
            <param name="cancellationToken">The async task token to notify about task cancellation.</param>
            <returns>Returns newly signed up publisher tenant and it's primary user information.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherSignUpDS.GetSubscriptionPlanListByAppIdAsync(System.Guid,ewApps.Core.BaseService.BooleanFilterEnum,System.Threading.CancellationToken)">
            <summary>
            Gets the subscription plan list by application identifier and plan state.
            </summary>
            <param name="appId">The application identifier to get application specific subscription.</param>
            <param name="planState">The plan state to filter subscription plan.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns subscription plan list that matches the input parameters.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherSignUpDS.GetServiceAndAttributeDetailByPlanId(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the plan service and attribute list of provided plan id.
            </summary>
            <param name="planId">The plan identifier to get corresponding service and attributes.</param>
            <param name="cancellationToken">The cancellation token to cancel async task.</param>
            <returns>Returns Service and Attributes list corresponding to provided plan id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherSignUpDS.ReInviteTenantUserAsync(ewApps.AppPortal.DTO.TenantUserIdentificationDTO)">
            <summary>
            Reinvites the publisher admin user mail is sent to the user with password set link.
            </summary>
            <param name="tenantUserIdentificationDTO">tenat user identification DTO for users complete identification for tenant and application.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherSignUpDS.ReInvitePrimaryPublisherUserAsync(System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="tenantUserId"></param>
            <param name="bizTenantId"></param>
            <param name="appId"></param>
            <param name="subDomain"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPubSubscriptionPlanDS">
            <summary>
            This class implement business logic for app user
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPubSubscriptionPlanDS.GetSubscriptionServiceNameListBySubscriptionPlanIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the subscription service name list by subscription plan identifier.
            </summary>
            <param name="subsPlanId">The subs plan identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns service name list that matches provided subscription plan id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPubTenantUserDS">
            <summary>
            This class implements standard business logic and operations for TenantUser entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPubTenantUserDS.GetUserInfoByIdAsync(System.Guid)">
            <summary>
            this method is used to user profile detail
            </summary>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPubTenantUserDS.UpdateTenantUserProfile(ewApps.AppPortal.DTO.TenantUserProfileDTO)">
            <summary>
            Update Tenant User Profile 
            </summary>
            <param name="tenantUserProfileDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get purchase order list by TenantId.
            </summary>
            <param name="listDateFilterDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPurchaseOrderDS.GetPurchaseOrderByPurchaseOrderIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice by id.
            </summary>
            <param name="busTenantId">Business tenantid.</param>
            <param name="purchaseorderId">Unique invoice id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPurchaseOrderDS.GetPurchaseOrderAttachmentListByOrderIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order attachment list.
            </summary>
            <param name="purchaseOrderId">Unique purchaseOrder id.</param>
            <param name="token"></param>
            <returns>return attachment list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPurchaseOrderDS.AddPurchaseOrderAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add purchase order.
            </summary>
            <param name="httpRequest">Contains request object</param>
            <param name="request">Contains PruchaseOrder json.</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="T:ewApps.AppPortal.DS.ILevelTransitionHistoryDS">
            <summary>
            Provide functionality to write bussiness logic on level transition by creating an object to this class.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.ISupportCommentDS">
            <summary>
            Provide functionality to write bussiness logic on support comment by creating an object to this class.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportCommentDS.ManageCommentList(System.Guid,System.Collections.Generic.List{ewApps.AppPortal.DTO.SupportCommentDTO},ewApps.AppPortal.Common.SupportLevelEnum,ewApps.Core.BaseService.OperationType)">
            <summary>
            Manages support ticket comment list.
            </summary>
            <param name="supportId">Parent support ticket id.</param>
            <param name="supportCommentDTOList">Support comment list.</param>
            <param name="supportLevel">User's current support level.</param>
            <param name="parentOpType">Parent entity operation type.</param>
            <returns>Returns true if all operatoins performed on comment list is sucessful otherwise return false.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportCommentDS.GetCommentListBySupportId(System.Guid)">
            <summary>
            Gets list of <see cref="T:ewApps.AppPortal.Entity.SupportComment"/> (in form of <see cref="T:ewApps.AppPortal.DTO.SupportCommentDTO"/> that matches given support id.
            </summary>
            <param name="supportId">Support ticket id to find related comments.</param>
            <returns>Returns list of <see cref="T:ewApps.AppPortal.DTO.SupportCommentDTO"/> that matches given support ticket id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ISupportGroupDS">
            <summary>
            Provide functionality to write bussiness logic on support group by creating an object to this class.
            </summary>
            
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportTicketDSNew.AddSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.AppPortal.Common.SupportLevelEnum,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="supportLevel"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportTicketDSNew.UpdateSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.AppPortal.Common.SupportLevelEnum,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="supportLevel"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportTicketDSNew.Delete(System.Guid)">
            <summary>
            
            </summary>
            <param name="supportId"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportTicketDSNew.GetSupportTicketDetailById(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="supportId"></param>
            <param name="includeDeleted"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportTicketDSNew.GetCommentorName(System.Int16,System.Int16,System.String,System.String,System.String)">
            <summary>
            Gets the name of the commentor.
            </summary>
            <param name="commentGenerationLevel">The comment generation level.</param>
            <param name="ticketGenerationLevel">The ticket generation level.</param>
            <param name="ticketCreatedBy">The ticket created by.</param>
            <param name="tenantName">Name of the tenant.</param>
            <param name="publisherName">Name of the publisher.</param>
            <returns>Returns commentor name based on input.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ewApps.AppPortal.DS.IVendorDS" -->
        <member name="M:ewApps.AppPortal.DS.IVendorPaymentInvoiceDS.GetInvoiceListByTenantAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get vendor invoice list by tenant id. 
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendorPaymentInvoiceDS.GetInvoiceByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice by id.
            </summary>
            <param name="invoiceId">Unique invoice id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendorPaymentInvoiceDS.GetInvoiceAttachmentListByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice attachment list.
            </summary>
            <param name="invoiceId">Unique invoiceId id.</param>
            <param name="token"></param>
            <returns>return attachment list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendorPaymentInvoiceDS.GetPaymentHistoryByInvoiceAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by invoice.
            </summary>
            <param name="invoiceId">filter by invoice.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IVendTenantUserDS">
            <summary>
            This class implements standard business logic and operations for Vendor TenantUser entity.
            </summary>  
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendTenantUserDS.GetUserInfoByIdAsync(System.Guid)">
            <summary>
            this method is used to user profile detail
            </summary>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendTenantUserDS.UpdateTenantUserProfile(ewApps.AppPortal.DTO.TenantUserProfileDTO)">
            <summary>
            Update Tenant User Profile 
            </summary>
            <param name="tenantUserProfileDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendTenantUserDS.GetAllVendSetupVendorUsersAsync(System.Guid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="businesspartnertenantid"></param>
            <param name="deleted"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendTenantUserDS.GetTenantUserAndAppDetails(System.Guid,System.Guid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="tenantUserId"></param>
            <param name="businessPartnerTenantId"></param>
            <param name="deleted"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBAPurchaseOrderDS">
            <summary>
            Contains all required sales order methods.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBAPurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the sales order list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns sales order list that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBAPurchaseOrderDS.GetPurchaseOrderDetailByPOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets sales order detail that matches the provided business tenant id and sales order id.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="soId">The sales order identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns <see cref="T:ewApps.AppPortal.DTO.BusBASalesOrderViewDTO"/> that matches provided business tenant and sales order id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBAASNDS.GetASNListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the asn list by business tenant id and provided filter.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="listDateFilterDTO">The list date filter dto.</param>
            <param name="cancellationToken">The cancellation token to cancel async task.</param>
            <returns>Returns list of ASN list that matches provided </returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBAASNDS.GetASNDetailByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the asn detail by asn identifier.
            </summary>
            <param name="asnId">The asn identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns ASN detail with line items that matches provided asn id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBAASNDS.GetVendorASNListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the vendor's asn list by business tenant id and provided filter.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="listDateFilterDTO">The list date filter dto.</param>
            <param name="cancellationToken">The cancellation token to cancel async task.</param>
            <returns>Returns list of ASN list that matches provided </returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBAASNDS.GetVendorASNDetailByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the vendor's asn detail by asn identifier.
            </summary>
            <param name="asnId">The asn identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns ASN detail with line items that matches provided asn id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusBAContractDS">
            <summary>
            This interface defines contract operations for business tenant.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBAContractDS.GetContractListByBusinessIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the contract list by business tenant id.
            </summary>
            <param name="businessTenantId">The business tenant id to filter contract list.</param>
            <param name="listDateFilterDTO">The DTO to filter contract list.</param>
            <param name="cancellationToken">The token to cancel async operation.</param>
            <returns>Returns contract list that matches given tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBAContractDS.GetContractDetailByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusBADeliveryDS">
            <summary>
            This interface defines the business delivery and delivery items methods.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBADeliveryDS.GetDeliveryListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.AppPortal.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBADeliveryDS.GetDeliveryItemNameListByDeliveryIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery item name list by delivery id.
            </summary>
            <param name="deliveryId">The delivery to find delivery items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of delivery item name list that matches provided delivery id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBADeliveryDS.GetDeliveryDetailByDeliveryIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery detail with items by delivery identifier.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="deliveryId">The delivery identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns delivery detail with items that matches provided delivery id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBAItemMasterDS.AddItemMasterByBusinessAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add Item Master
            </summary>
            <param name="httpRequest"></param>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBAItemMasterDS.UpdateItemMasterByBusinessPaymentAppAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update item master
            </summary>
            <param name="httpRequest"></param>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusBASalesOrderDS">
            <summary>
            Contains all required sales order methods.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the sales order list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns sales order list that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBASalesOrderDS.GetSalesOrderDetailBySOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets sales order detail that matches the provided business tenant id and sales order id.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="soId">The sales order identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns <see cref="T:ewApps.AppPortal.DTO.BusBASalesOrderViewDTO"/> that matches provided business tenant and sales order id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBASalesQuotationDS.GetSalesQuotationListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="listDateFilterDTO">The date filter values to filter sales quatation data on Document Date.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.AppPortal.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation  by SalesQuotation id.
            </summary>
            <param name="salesQuotationId">The delivery to find SalesQuotation items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of SalesQuotation item name list that matches provided SalesQuotation id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusUserPreferenceDS.AddPaymentPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the payment preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusUserPreferenceDS.AddBEPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the be preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusUserPreferenceDS.AddAPPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the ap preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="appId">The application identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ICustBAContractDS">
            <summary>
            This interface defines contract operations for business tenant.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustBAContractDS.GetContractListByBusinessIdAsyncForCust(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the contract list by business tenant id.
            </summary>
            <param name="businessTenantId">The business tenant id to filter contract list.</param>
            <param name="listDateFilterDTO">The DTO to filter contract list.</param>
            <param name="cancellationToken">The token to cancel async operation.</param>
            <returns>Returns contract list that matches given tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustBAContractDS.GetContractDetailByContractIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ICustBADeliveryDS">
            <summary>
            This interface defines the business delivery and delivery items methods.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustBADeliveryDS.GetDeliveryListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.AppPortal.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustBADeliveryDS.GetDeliveryDetailByDeliveryIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery detail with items by delivery identifier.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="deliveryId">The delivery identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns delivery detail with items that matches provided delivery id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ICustBASalesOrderDS">
            <summary>
            Contains all required sales order methods.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the sales order list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns sales order list that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustBASalesOrderDS.GetSalesOrderDetailBySOIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets sales order detail that matches the provided business tenant id and sales order id.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="soId">The sales order identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns <see cref="T:ewApps.AppPortal.DTO.BusBASalesOrderViewDTO"/> that matches provided business tenant and sales order id.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ICustBASalesQuotationDS">
            <summary>
            This interface defines <see cref="!:BASalesQuotation"/> entity operations for business.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustBASalesQuotationDS.GetSalesQuotationListByPartnerTenantIdAsyncForCust(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation list by business tenant identifier.
            </summary>
            <param name="businessPartnerTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.AppPortal.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Quatation Detail By Sales Quotation Id 
            </summary>
            <param name="salesQuotationId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustUserPreferenceDS.AddPaymentPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the payment preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustUserPreferenceDS.AddBEPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the be preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustUserPreferenceDS.AddAPPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the ap preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="appId">The application identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendorUserPreferenceDS.AddPaymentPrefValueAsync(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the payment preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendorUserPreferenceDS.AddBEPrefValueAsync(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the be preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IVendorUserPreferenceDS.AddAPPrefValueAsync(System.Guid,System.Guid,System.Guid,System.Guid,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the ap preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="appId">The application identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationHandler.SendBizPaymentUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.BusinessOnBoardNotificationDTO,System.Threading.CancellationToken)">
            <summary>
            business payment user on board notification
            </summary>
            <param name="businessPaymentUserOnBoardNotificationDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationHandler.SendBizCustUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.BusinessOnBoardNotificationDTO,System.Threading.CancellationToken)">
            <summary>
            Business customer user on board notification 
            </summary>
            <param name="businessCustUserOnBoardNotificationDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationHandler.SendBizSetupUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.BusinessOnBoardNotificationDTO,System.Threading.CancellationToken)">
            <summary>
            Business setup user on board notification
            </summary>
            <param name="businessSetupUserOnBoardNotificationDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationHandler.GenerateBusinessNewUserInviteNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationHandler.GenerateBusinessUserAccountStatusChangedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationHandler.SendEmailForContactUs(ewApps.AppPortal.DTO.ContactUsDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.#ctor(ewApps.AppPortal.QData.IQBizNotificationRecipientData,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BizNotificationRecipientDS"/> class.
            </summary>
            <param name="qBizPaymentNotificationRecipientData">The q biz payment notification recipient data.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetBizPaymentUserOnBoardRecipients(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetBizCustUserOnBoardRecipients(System.Guid,System.Guid,System.Guid,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetBizSetupUserOnBoardRecipients(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetAppUserOnBusiness(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetAppUserPermissionOnBusiness(System.Guid,System.Guid,System.Guid,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetBusinessUsersForNotes(System.Guid,System.Guid,System.Guid,System.Guid,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetBusinessCustomerUsersForNotes(System.Guid,System.Guid,System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetCustomerUser(System.Guid,System.Guid,System.Guid,System.Int32,System.Int32,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationRecipientDS.GetInvitedBusinessUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.#ctor(Microsoft.Extensions.Logging.ILogger{ewApps.AppPortal.DS.BizNotificationService},ewApps.Core.EmailService.IEmailService,ewApps.Core.SMSService.ISMSService,ewApps.Core.NotificationService.IASNotificationService,ewApps.AppPortal.DS.IASNotificationDS,ewApps.AppPortal.DS.IBizNotificationRecipientDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},Microsoft.Extensions.Options.IOptions{ewApps.Core.NotificationService.NotificationAppSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BizNotificationService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="emailService">The email service.</param>
            <param name="smsService">The SMS service.</param>
            <param name="asNotificationService">As notification service.</param>
            <param name="asNotificationDS">As notification ds.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.ValidateNotificationData(System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetRecipientList(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetXSLArgumentsForEmail(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetEmailPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetSMSPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetXSLArgumentsForSMS(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetXSLArgumentsForASNotification(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetASNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.AddASNotification(ewApps.Core.NotificationService.ASNotificationDTO,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.SetDeeplinkResultInNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.DeeplinkServices.DeeplinkResultSet)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetBranchKey(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetSupportedNotificationType(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.AddBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GenerateASNotification(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.ASNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetSyncRowId(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BizNotificationService.GetXSLArgumentsForPush(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBizNotificationHandler.SendBizPaymentUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.BusinessOnBoardNotificationDTO,System.Threading.CancellationToken)">
            <summary>
            Business payment user on board notification
            </summary>
            <param name="businessPayUserOnBoardNotificationDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBizNotificationHandler.SendBizCustUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.BusinessOnBoardNotificationDTO,System.Threading.CancellationToken)">
            <summary>
            Business customer user on board notification
            </summary>
            <param name="businessCustUserOnBoardNotificationDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBizNotificationHandler.SendBizSetupUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.BusinessOnBoardNotificationDTO,System.Threading.CancellationToken)">
            <summary>
            Business setup user on board notification
            </summary>
            <param name="businessSetupOnBoardNotificationDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBizNotificationRecipientDS.GetInvitedBusinessUser(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get the invited business users where is is of businesss type.
            </summary>
            <param name="tenantId">tenant identifier for the user</param>
            <param name="tenantUserId"> tenant user identitfier for the tenant user</param>
            <param name="appId">application id for the user to which user belongs</param>
            <returns>Returns invited user as notification recipient.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBizNotificationRecipientDS.GetAppUserPermissionOnBusiness(System.Guid,System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Get User With Email and As Permission 
            </summary>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessNotificationHandler">
            <summary>DataService implementing Support notification service</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.#ctor(ewApps.Core.EmailService.IEmailService,Microsoft.Extensions.Options.IOptions{ewApps.Core.ExceptionService.ExceptionAppSettings},ewApps.AppPortal.DS.IBusinessNotificationService,ewApps.AppPortal.DS.ITokenInfoDS,ewApps.AppPortal.Data.IUnitOfWork)">
            <summary>Initilizing the objects</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.InviteBusinessUser(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.InviteBusinessPartnerUser(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.ForgotPasswordBusiness(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.ForgotPasswordBusinessPartner(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPrimaryUserSetPasswordSucessNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessOnBoardNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessNewUserInviteNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessUserWithExistingEmailIdInviteNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessUserSetPasswordSucessNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessUserOnBoardNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateApplicationAssignedToBusinessUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateApplicationDeAssignedToBusinessUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessUserAccountStatusChangedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPermissionChangedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessUserDeletedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPartnerPrimaryUserNewEmailIdInvitedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPartnerPrimaryUserExistingEmailIdInvitedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPartnerOtherUserNewEmailIdInvitedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPartnerOtherUserExistingEmailIdInvitedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateApplicationDeAssignedToBusinessPartnerUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateApplicationRemovedForCustomerToBusinessPartnerUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateApplicationRemovedForCustomerToBusinessUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPartnerDeletedToCustomerUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPartnerDeletedToBusinessUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateExistingBusinessPartnerUserDeletedToPartnerUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessPartnerUserDeletedToCustomerUserNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.GenerateBusinessForgotPasswordAsync(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationHandler.SendErrorEmail(ewApps.AppPortal.DTO.ErrorLogEmailDTO,ewApps.Core.UserSessionService.UserSession)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService">
            <summary>DataService implementing Business notification receipent service</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.#ctor(ewApps.AppPortal.QData.IQBusinessNotificationRecepientRepository)">
            <summary>
            Initializing the interfaces.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetInvitedUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetInvitedBusinessUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetInvitedDeletedBusinessUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetInvitedBusinessPartnerUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetInvitedBusinessPartnerDeletedUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetAllBusinessUser(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetAllBusinessUserWithPrefence(System.Guid,System.Guid,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetAllBusinessUserWithPermissionsAndPrefernces(System.Guid,System.Guid,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetPublisherUserWithPermissionAndPrefrence(System.Guid,System.Guid,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationReceipentDataService.GetAllBusinessPartnerUserWithPermissionAndPrefrence(System.Guid,System.Guid,System.Guid,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessNotificationService">
            <summary>Support notification service implementing all the abstract methods of base notification service.</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>
            Generates Deeplink payload by the data given in notification payload.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetEmailPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generates Push payload by the data given in notification payload and USerDataRow.
            </summary>
            <param name="notificationPayload">Instance of notification payload to map email payload information.</param>
            <returns>An instance of EmailPayload.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.AddBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <summary></summary>
            <param name="userDataRow"></param>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GenerateASNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.DateTime,System.Int64,System.Int32,System.String)">
            <summary></summary>
            <param name="recepientDataRow"></param>
            <param name="payload"></param>
            <param name="deliveryTime"></param>
            <param name="syncRowId"></param>
            <param name="badgeCount"></param>
            <param name="XMLData"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <summary></summary>
            <param name="userDataRow"></param>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetRecipientList(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>Get recepiant list</summary>
            <param name="payload">Notification payload</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetSyncRowId(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary></summary>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetXSLArgumentsForEmail(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>Get email xml argument based on event identifier</summary>
            <param name="userDataRow"></param>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetXSLArgumentsForPush(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary></summary>
            <param name="userDataRow"></param>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.ValidateNotificationData(System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Validation data about notification</summary>
            <param name="moduleId"></param>
            <param name="eventId"></param>
            <param name="eventInfo"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetBranchKeyTemp(System.Object)">
            <summary>Get branch key on the basis of event type</summary>
            <param name="eventData">Event identitfier</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetBranchKey(System.Object)">
            <summary>Get branch key on the basis of decision parameters.</summary>
            <param name="decisionParameters">Set of information to make decision about branch key, deeplink actions and parameters.</param>
            <returns>Returns a portal wise branch key, deeplink actions and parameters in form of <see cref="!:Dictionary&lt;System.Int32, TValue&gt;"/> Dictionary&lt;int,object&gt;. Key is portal type and value is of type <see cref="!:"/> </returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetEmailXsltFile(ewApps.AppPortal.DS.BusinessNotificationEventEnum,System.String)">
            <summary>Gets the email XSLT file.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="regionLanguage">The region language.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessNotificationService.GetXSLTemplateFileName(ewApps.AppPortal.DS.BusinessNotificationEventEnum)">
            <summary>Gets the email file name .</summary>
            <param name="eventNumber">The event identifier.</param>
            <returns>file name of the xslt file. </returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessNotificationEventEnum">
            <summary>
            All events for which we need to generate notification from business-setup .
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusinessNotificationHandler">
            <summary>Interface exposing business notification service</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationHandler.SendErrorEmail(ewApps.AppPortal.DTO.ErrorLogEmailDTO,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Sends the error email with information provided in input <see cref="T:ewApps.AppPortal.DTO.ErrorLogEmailDTO"/> model.
            </summary>
            <param name="errorlogEmailDTO">The error information DTO to be log in email.</param>
            <param name="userSession">The instance of current user session.</param>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService">
            <summary>Interface exposing business notification receipent service</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetInvitedUser(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get the invited user.
            </summary>
            <param name="appId">Application identifier for whisch user is invited.</param>
            <param name="tenantId">Tenant identifier to which user belongs to.</param>
            <param name="tenantUserId">Teanntuser id of the invited user.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetInvitedBusinessUser(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get the invited business users where is is of businesss type.
            </summary>
            <param name="tenantId">tenant identifier for the user</param>
            <param name="tenantUserId"> tenant user identitfier for the tenant user</param>
            <param name="appId">application id for the user to which user belongs</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetInvitedDeletedBusinessUser(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get the invited business deleted users where is is of businesssPartner type.
            </summary>
            <param name="tenantId">tenant identifier for the user</param>
            <param name="tenantUserId"> tenant user identitfier for the tenant user</param>
            <param name="appId">application id for the user to which user belongs</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetInvitedBusinessPartnerUser(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get the invited business partner users where is is of businesssPartner type.
            </summary>
            <param name="tenantId">tenant identifier for the user</param>
            <param name="tenantUserId"> tenant user identitfier for the tenant user</param>
            <param name="appId">application id for the user to which user belongs</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetInvitedBusinessPartnerDeletedUser(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get the invited business partner deleted users where is is of businesssPartner type.
            </summary>
            <param name="tenantId">tenant identifier for the user</param>
            <param name="tenantUserId"> tenant user identitfier for the tenant user</param>
            <param name="appId">application id for the user to which user belongs</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetPublisherUserWithPermissionAndPrefrence(System.Guid,System.Guid,System.Int64)">
            <summary>
            Get all the publisher users with given permissons  and preference.
            </summary>
            <param name="tenantId">tenant identifier for the user</param>
            <param name="appId">application id for the user to which user belongs</param>
            <param name="eventId">business event for which notification is genratted</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetAllBusinessUser(System.Guid,System.Guid)">
            <summary>
            Get all the business user of the particular tennat.
            </summary>
            <param name="tenantId">tenant identifier</param>
            <param name="appId">business application id to be passed.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetAllBusinessUserWithPrefence(System.Guid,System.Guid,System.Int64)">
            <summary>
            Get all the business user of the particular tennat for particularevent.
            </summary>
            <param name="tenantId">tenant identifier</param>
            <param name="appId">business application id to be passed.</param>
            <param name="eventId">business notification event .</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetAllBusinessUserWithPermissionsAndPrefernces(System.Guid,System.Guid,System.Int64)">
            <summary>
            Get all the business user having particular permission(either first permission or having second permission) and a perticular notification perefence on.
            </summary>
            <param name="tenantId">tenant identifier for the tenantuser</param>
            <param name="appId">application identifier for the tenantuser</param>
            <param name="eventId">emeail preferece bitmask</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService.GetAllBusinessPartnerUserWithPermissionAndPrefrence(System.Guid,System.Guid,System.Guid,System.Int64)">
            <summary>
            Get all the business partner user having particular permission(either first permission or having second permission) and a perticular notification perefence on.
            </summary>
            <param name="tenantId">tenant identifier for the tenantuser</param>
            <param name="appId">application identifier for the tenantuser</param>
            <param name="businessPastnerTenantId">business partner tenant identifier to identify to wich customer the partner belongs</param>
            <param name="eventId">emeail preferece bitmask</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IBusinessNotificationService">
            <summary>Interface exposing Support notification service</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationHandler.SendCustPaymentUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.CustomerOnBoardNotificationDTO)">
            <summary>
             Customer Portal Payment App User On Board
            </summary>
            <param name="customerOnBoardNotificationDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationHandler.SendCustCustomerUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.CustomerOnBoardNotificationDTO)">
            <summary>
            Customer Portal customer app user on board notification
            </summary>
            <param name="customerOnBoardNotificationDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationHandler.SendCustSetupUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.CustomerOnBoardNotificationDTO)">
            <summary>
            Customer Portal customer Setup user on board notification
            </summary>
            <param name="customerOnBoardNotificationDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationHandler.GenerateCustomerForgotPasswordAsync(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationHandler.SendEmailForContactUs(ewApps.AppPortal.DTO.ContactUsDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.#ctor(ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService,Microsoft.Extensions.Options.IOptions{ewApps.Core.NotificationService.NotificationAppSettings},Microsoft.Extensions.Logging.ILogger{ewApps.AppPortal.DS.BizNotificationService},ewApps.Core.EmailService.IEmailService,ewApps.Core.SMSService.ISMSService,ewApps.Core.NotificationService.IASNotificationService,ewApps.AppPortal.DS.IASNotificationDS,ewApps.AppPortal.DS.ICustNotificationRecipientsDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},Microsoft.Extensions.Options.IOptions{ewApps.Core.NotificationService.NotificationAppSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BizNotificationService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="emailService">The email service.</param>
            <param name="smsService">The SMS service.</param>
            <param name="asNotificationService">As notification service.</param>
            <param name="asNotificationDS">As notification ds.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.ValidateNotificationData(System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetRecipientList(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetXSLArgumentsForEmail(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetEmailPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetSMSPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetXSLArgumentsForSMS(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetXSLArgumentsForASNotification(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetASNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.AddASNotification(ewApps.Core.NotificationService.ASNotificationDTO,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.SetDeeplinkResultInNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.DeeplinkServices.DeeplinkResultSet)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetBranchKeyTemp(System.Object)">
            <summary>Get branch key on the basis of event type</summary>
            <param name="eventData">Event identitfier</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetBranchKey(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetSupportedNotificationType(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.AddBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GenerateASNotification(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.ASNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetSyncRowId(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustNotificationService.GetXSLArgumentsForPush(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustNotificationHandler.SendCustSetupUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.CustomerOnBoardNotificationDTO)">
            <summary>
            Customer Setup OnBoard
            </summary>
            <param name="customerOnBoardNotificationDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.NotificationDS.SendErrorEmail(ewApps.AppPortal.DTO.ErrorLogEmailDTO,ewApps.Core.UserSessionService.UserSession)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPlatformNotificationHandler">
            <summary>
            This interface exposes all the publisher related notitfication services.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.SendErrorEmail(ewApps.AppPortal.DTO.ErrorLogEmailDTO,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Sends the error email with information provided in input <see cref="T:ewApps.AppPortal.DTO.ErrorLogEmailDTO"/> model.
            </summary>
            <param name="errorlogEmailDTO">The error information DTO to be log in email.</param>
            <param name="userSession">The instance of current user session.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.SendPlatformUserWithNewEmailInviteAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method impletemented to generate notification for invited platform user with new email.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.SendPlatformUserWithExistingEmailInviteAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method impletemented to generate notification for invited platform user with existing email.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.SendPlatformUserForgotPasswordEmailAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method impletemented to generate notification for user forgot password.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.SendPublisherPrimaryUserWithNewEmailInvitateAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method impletemented to generate notification for invited publisher primary user with new email.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.SendPublisherPrimaryUserWithExistingEmailInvitateAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method impletemented to generate notification for invited publisher primary user with existing email.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.PublisherActiveInActiveNotifyToPublisherAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method impletemented to generate notification for active\inactive publisher notify to publisher users.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.PublisherActiveInActiveNotifyToPlatformAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method impletemented to generate notification for active\inactive publisher notify to platform users.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.PlatformUserSetPasswordSucessfullyAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method genenrate notification for platform user sets password succesfully.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.PlatformUserMarkActiveInActiveAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method genenrate notification for platform user status is chnaged that is when active / inactive.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.PlatformUserPermissionChangedAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method genenrate notification for platform permissions are changed.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.PlatformUserOnBoardAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method genenrate notification for platform user is logind in for the first time.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationHandler.PlatformUserDeletedAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <summary>
            Method genenrate notification for platform user is deleted.
            </summary>
            <param name="platformNotificationDTO">Dto storing the notifiation data.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS">
            <summary>
            This interface exposes all the methods to get platform receipents list.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetInvitedPlatformUser(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get the invited user data generateing mail.
            </summary>
            <param name="appId"></param>
            <param name="tenantId"></param>
            <param name="appUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetPublisherSupportUsersWithTicketStatusPreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetPublisherSupportUsersWithTicketReassingedPreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetPublisherSupportUsersWithTicketPriorityChangePreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetPublisherSupportUsersWithCommentAddedToTicketPreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetPublisherSupportUsersWithAttcahmentAddedToTicketPreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetAllPublisherUsers(System.Guid)">
            <summary>
            Get all the publisher all user.
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetAllPlatformUserWithPrerence(System.Guid,System.Int64)">
            <summary>
            Get all the platform user with preference
            </summary>
            <param name="tenantId"></param>
            <param name="emailPreference"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformNotificationRecipientDS.GetInvitedUserWithPrefrence(System.Guid,System.Guid,System.Guid,System.Int64)">
            <summary>
            Get specefic user with the preference.
            </summary>
            <param name="appId"></param>
            <param name="tenantId"></param>
            <param name="appUserId"></param>
            <param name="emailPreference"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.PlatformNotificationEvents">
            <summary>
            Platform notification events.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PlatformUserWithNewEmailInvite">
            <summary>
            Platform other user  with new email.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PlatformUserExistingEmailInvite">
            <summary>
            Platform other user email.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PlatformUserForgotPassword">
            <summary>
            Platform user forgot password email .
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PublisherPrimaryUserWithNewEmailInvite">
            <summary>
            Publisher primary user with new email.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PublisherPrimaryUserWithExistingEmailInvite">
            <summary>
            Publisher primary user with new email.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PublisherMarkAsActiveInActiveNotifyPublisherUsers">
            <summary>
            Publisher masr as active inactive notify publisher user.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PublisherMarkAsActiveInActiveNotifyPlatformUsers">
            <summary>
            Publisher masr as active inactive notify platform user.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PlatformUserPasswordSetSucess">
            <summary>
            Platform user sets password sucessfully.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PlatformUserMarkAsActiveInActive">
            <summary>
            Publisher mask as active inactive notify publisher user.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PlatformUserPermissionChanged">
            <summary>
            Platform user permissions chnaged.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PlatformUserOnBoard">
            <summary>
            User Joins the platform portal.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PlatformNotificationEvents.PlatformUserDeleted">
            <summary>
            Platform User is deleted.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.PlatformNotificationHandler">
            <summary>
            This class implements all the notification triggered from Platfrom.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.#ctor(ewApps.Core.EmailService.IEmailService,ewApps.AppPortal.DS.IPlatformNotificationService,ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.ITokenInfoDS,Microsoft.Extensions.Options.IOptions{ewApps.Core.ExceptionService.ExceptionAppSettings})">
            <summary>
            Initilizes all the required dependecies and member variables.
            </summary>
            <param name="emailService">An instance of email service to send email notification.</param>
            <param name="platNotificationService"><see cref="T:ewApps.AppPortal.DS.IPlatformNotificationService"/> to send the notification data.</param>
            <param name="unitOfWork">To Track the db changes and save changes in the database.</param>
            <param name="tokenInfoDS">Stores the toekn data to be sent to identity server while processing the deeplink</param>
            <param name="exceptionAppSetting">An instance of <see cref="T:ewApps.Core.ExceptionService.ExceptionAppSettings"/> to get exception setting information.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.SendPlatformUserWithNewEmailInviteAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.SendPlatformUserWithExistingEmailInviteAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.SendPlatformUserForgotPasswordEmailAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.SendPublisherPrimaryUserWithNewEmailInvitateAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.SendPublisherPrimaryUserWithExistingEmailInvitateAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.PublisherActiveInActiveNotifyToPublisherAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.PublisherActiveInActiveNotifyToPlatformAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.PlatformUserSetPasswordSucessfullyAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.PlatformUserMarkActiveInActiveAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.PlatformUserPermissionChangedAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.PlatformUserOnBoardAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.PlatformUserDeletedAsync(ewApps.AppPortal.DTO.PlatformNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationHandler.SendErrorEmail(ewApps.AppPortal.DTO.ErrorLogEmailDTO,ewApps.Core.UserSessionService.UserSession)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetInvitedPlatformUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetInvitedPublihserUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetInvitedUserWithPrefrence(System.Guid,System.Guid,System.Guid,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetAllPublisherUsers(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetAllPlatformUserWithPrerence(System.Guid,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetInvitedBusinessPrimaryUserRecipientList(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetInvitedPublisherUserRecipientList(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetPublisherSupportUsersWithTicketStatusPreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetPublisherSupportUsersWithTicketReassingedPreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetPublisherSupportUsersWithTicketPriorityChangePreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetPublisherSupportUsersWithCommentAddedToTicketPreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationRecipientDS.GetPublisherSupportUsersWithAttcahmentAddedToTicketPreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationService.#ctor(Microsoft.Extensions.Logging.ILogger{ewApps.Core.NotificationService.NotificationService{ewApps.Core.NotificationService.NotificationRecipient}},ewApps.Core.EmailService.IEmailService,ewApps.Core.SMSService.ISMSService,ewApps.AppPortal.DS.IPlatformNotificationRecipientDS,ewApps.AppPortal.DS.IASNotificationDS,Microsoft.Extensions.Options.IOptions{ewApps.Core.NotificationService.NotificationAppSettings},AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.PlatformNotificationService"/> class.
            </summary>
            <param name="loggerService">The logger service.</param>
            <param name="emailService">The email service.</param>
            <param name="smsService">The SMS service.</param>
            <param name="notificationRecipientDS">The notification recipient ds.</param>
            <param name="appSettingsOption">The application settings option.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationService.ValidateNotificationData(System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Validates the given parameters to generate the notification like module and event id.
            </summary>
            <param name="moduleId">The module identifier.</param>
            <param name="eventId">The event identifier.</param>
            <param name="eventInfo">The event information.</param>
            <returns>
            Returns true if all notification related required information is available.
            </returns>
            <exception cref="T:System.InvalidOperationException">Invalid notification arguments.</exception>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationService.GetRecipientList(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>
            Gets notification recipient list based on input nofication payload.
            </summary>
            <param name="payload">Instance of notification payload use to get nofication recipients.</param>
            <returns>
            Returns list of notification recipient list.
            </returns>
            <exception cref="T:ewApps.Core.ExceptionService.EwpInvalidOperationException">Invalid Notification Event No.</exception>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationService.GetDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>
            Generates Deeplink payload by the data given in notification payload.
            </summary>
            <param name="notificationPayload"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationService.GetBranchKey(System.Object)">
            <summary>
            Returns branch api key to be use in deeplink generation based on Platform module's unique event id.
            </summary>
            <param name="eventId">A unique event id (<see cref="T:ewApps.AppPortal.DS.PlatformNotificationEvents"/>) defined in Platform module.</param>
            <returns>
            Returns branch Api key.
            </returns>
            <seealso cref="T:ewApps.AppPortal.DS.PlatformNotificationEvents"/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationService.GetEmailPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generates Push payload by the data given in notification payload and USerDataRow.
            </summary>
            <param name="notificationPayload">Instance of notification payload to map email payload information.</param>
            <returns>An instance of EmailPayload.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformNotificationService.GetXSLArgumentsForASNotification(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ewApps.AppPortal.DS.PlatformNotificationService.GetEmailXsltFile(ewApps.AppPortal.DS.PlatformNotificationEvents,System.String)" -->
        <member name="T:ewApps.AppPortal.DS.PublisherNotificationHandler">
            <summary>
            This class implements all the notification triggered from publiser.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.#ctor(ewApps.Core.EmailService.IEmailService,ewApps.AppPortal.DS.IPublisherNotificationService,ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.ITokenInfoDS,Microsoft.Extensions.Options.IOptions{ewApps.Core.ExceptionService.ExceptionAppSettings},ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings})">
            <summary>
            Initilizes all the required dependecies and member variables.
            </summary>
            <param name="pubNotificationService"><see cref="T:ewApps.AppPortal.DS.IPublisherNotificationService"/> to send the notification data.</param>
            <param name="unitOfWork">To Track the db changes and save changes in the database.</param>
            <param name="tokenInfoDS">Stores the toekn data to be sent to identity server while processing the deeplink</param>
            <param name="exceptionAppSetting">An instance of <see cref="T:ewApps.Core.ExceptionService.ExceptionAppSettings"/> to get exception setting information.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.SendPublisherUserNewEmailInvite(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.SendPublisherUserExistingEmailInvite(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.SendPublisherForgotPasswordEmail(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.SendBusinessPrimaryUserWithNewEmailInvite(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.SendBusinessPrimaryUserWithExistingEmailInvite(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.NewPublisherOnboard(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.BusinessMarkAsActiveInactiveToPublisher(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.BusinessDeletedToBusinessPartnerUser(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.BusinessDeletedToPublisherUser(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.PublisherUserPermissionChanged(ewApps.AppPortal.DTO.PublisherPermissionNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.NewPublisherUserOnBoard(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.PublisherUserDeleted(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.PublisherApplicationStatusChangedToBusinessPartnerUser(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.PublisherApplicationStatusChangedToPublisherUser(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.SendEmailForContactUs(ewApps.AppPortal.DTO.ContactUsDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationHandler.SendErrorEmail(ewApps.AppPortal.DTO.ErrorLogEmailDTO,ewApps.Core.UserSessionService.UserSession)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetInvitedUser(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetInvitedUserWithPrefrence(System.Guid,System.Guid,System.Int64,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPlatformUsersWithApplicationPermissionAndPrefrence(System.Guid,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetBusinessUserWithApplicationAccess(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetAllBusinessUsers(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetAllBusinessPartnerUsers(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetBusinessPartnerUserWithApplicationAccess(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPublisherUserWithApplicationPermission(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPublisherUsersWithTenantPermissionAndPrefrence(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPublisherSupportUsers">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPublisherSupportUsersWithTicketStatusPreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPublisherSupportUsersWithTicketReassingedPreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPublisherSupportUsersWithTicketPriorityChangePreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPublisherSupportUsersWithCommentAddedToTicketPreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationRecipientDS.GetPublisherSupportUsersWithAttcahmentAddedToTicketPreference">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationService.GetBranchKey(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationService.GetDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>
            Generates Deeplink payload by the data given in notification payload.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationService.GetPrimaryBusinessUserNewEmailInviteDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},System.Int64)">
            <summary>
            Generates deeplinks for business user invite event from notification data.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationService.GetPrimaryBusinessUserExistingEmailInviteDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},System.Int64)">
            <summary>
            Generates deeplinks for business user invite event from notification data.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationService.GetEmailPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generates email payload by the data given in notification payload and USerDataRow.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationService.GetXSLArgumentsForASNotification(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationService.AddASNotification(ewApps.Core.NotificationService.ASNotificationDTO,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherNotificationService.GetASNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PublisherNotificationEvent">
            <summary>
            Publisher Notification events.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.InvitePublisherUserWithNewEmail">
            <summary>
            Publisher user invitation with new email.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.InvitePublisherUserWithExistingEmail">
            <summary>
            Publisher user invitation with existing email.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.PublisherUserForgotPassword">
            <summary>
            Publisher user forgot password.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.InviteBusinessPrimaryUserWithNewEmail">
            <summary>
            Business primary user with new email invite.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.InviteBusinessPrimaryUserWithExistingEmail">
            <summary>
            Business primary user with existing email invite.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.BusinessStatusChangedToPubUser">
            <summary>
             Business Active Inactive To Publisher User.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.PublisherUserPermissionChanged">
            <summary>
            Publisher user permission is changed.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.PublisherUserOnBoard">
            <summary>
            User Joins the platform portal.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PublisherNotificationEvent.PublisherUserDeleted">
            <summary>
            Publisher User is deleted.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.IPublisherNotificationHandler">
            <summary>
            This interface exposes all the publisher related notitfication services.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationHandler.SendErrorEmail(ewApps.AppPortal.DTO.ErrorLogEmailDTO,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Sends the error email with information provided in input <see cref="T:ewApps.AppPortal.DTO.ErrorLogEmailDTO"/> model.
            </summary>
            <param name="errorlogEmailDTO">The error information DTO to be log in email.</param>
            <param name="userSession">The instance of current user session.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationHandler.SendPublisherUserNewEmailInvite(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <summary>
            Method impletemented to generate notification for invited publisher user with new email.
            </summary>
            <param name="publisherNotificationDTO">Dto storing the notifiation data.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationHandler.SendPublisherUserExistingEmailInvite(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <summary>
            Method impletemented to generate notification for invited publisher user with new email.
            </summary>
            <param name="publisherNotificationDTO">Dto storing the notifiation data.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationHandler.SendPublisherForgotPasswordEmail(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <summary>
            Method impletemented to generate notification for forgot password publisher user.
            </summary>
            <param name="publisherNotificationDTO">Dto storing the notifiation data.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationHandler.SendBusinessPrimaryUserWithNewEmailInvite(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <summary>
            Method impletemented to generate notification for new business user invite.
            </summary>
            <param name="publisherNotificationDTO">Dto storing the notifiation data.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationHandler.SendBusinessPrimaryUserWithExistingEmailInvite(ewApps.AppPortal.DTO.PublisherNotificationDTO)">
            <summary>
            Method impletemented to generate notification for existing business user invite.
            </summary>
            <param name="publisherNotificationDTO">Dto storing the notifiation data.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationRecipientDS.GetInvitedUser(System.Guid,System.Guid,System.Guid)">
            <summary>
            Get the invited user.
            </summary>
            <param name="appId">application identifier</param>
            <param name="tenantId">tenant identifier</param>
            <param name="appUserId">user tenant identifier</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationRecipientDS.GetPublisherSupportUsersWithTicketStatusPreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationRecipientDS.GetPublisherSupportUsersWithTicketReassingedPreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationRecipientDS.GetPublisherSupportUsersWithTicketPriorityChangePreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationRecipientDS.GetPublisherSupportUsersWithCommentAddedToTicketPreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPublisherNotificationRecipientDS.GetPublisherSupportUsersWithAttcahmentAddedToTicketPreference">
            <summary>
            Get publisher support users with preference
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationHandler.GenerateNewVendorNewEmailIdInvitedNotification(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationHandler.SendVendorSetupUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.VendorOnBoardNotificationDTO)">
            <summary>
            Vendor User Vendor Portal-Setup OnBoard.
            </summary>
            <param name="vendorOnBoardNotificationDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationHandler.SendVendorSetupUserOnBoardNotificationAsync(ewApps.AppPortal.DTO.VendorOnBoardNotificationDTO,System.Threading.CancellationToken)">
            <summary>
            Customer Portal customer Setup user on board notification
            </summary>
            <param name="vendorOnBoardNotificationDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationHandler.GenerateVendorUserForgotPasswordAsync(ewApps.AppPortal.DTO.BusinessAccountNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationRecipientDS.GetVendorUserAppOnboardRecipients(System.Guid,System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.#ctor(Microsoft.Extensions.Logging.ILogger{ewApps.AppPortal.DS.VendorNotificationService},ewApps.Core.EmailService.IEmailService,ewApps.Core.SMSService.ISMSService,ewApps.Core.NotificationService.IASNotificationService,ewApps.AppPortal.DS.IASNotificationDS,ewApps.AppPortal.DS.IVendorNotificationRecipientDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},Microsoft.Extensions.Options.IOptions{ewApps.Core.NotificationService.NotificationAppSettings},ewApps.AppPortal.DS.IBusinessNotificationReceipentDataService)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.VendorNotificationService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="emailService">The email service.</param>
            <param name="smsService">The SMS service.</param>
            <param name="asNotificationService">As notification service.</param>
            <param name="asNotificationDS">As notification DataService.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.ValidateNotificationData(System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetRecipientList(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetBranchKeyTemp(System.Object)">
            <summary>Get branch key on the basis of event type</summary>
            <param name="eventData">Event identitfier</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetBranchKey(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.SetDeeplinkResultInNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.DeeplinkServices.DeeplinkResultSet)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetEmailPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetXSLArgumentsForEmail(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetSMSPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetXSLArgumentsForSMS(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetXSLArgumentsForPush(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetASNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.AddBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorNotificationService.GetSyncRowId(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QAppPortalDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.QData.IQAppPortalRepository)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QAppPortalDS.GetShipAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Ship-App branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBranding Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QAppPortalDS.GetPayAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Pay-App branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBranding Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QAppPortalDS.GetCustAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Cust-App branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBranding Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QAppPortalDS.GetVendAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Vend-App branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBranding Model</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.QBACustomerDS">
            <summary>
            A wrapper class, contains BACustomer/Customer and its service info.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.#ctor(ewApps.AppPortal.QData.IQBACustomerRepository)">
            <summary>
            Initlize local variables.
            </summary>
            <param name="qBACustomerRepository"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.GetAppServiceListByAppKeyAndTenantAsync(System.String,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get app services and attrubute list.
            </summary>
            <param name="appKey">Application key.</param>
            <param name="tenantId">Tenant id</param>
            <param name="customerId">customer id</param>
            <param name="includeAttributeAccountDetail"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.GetAppServiceListByAppIdAndTenantAsync(System.Guid,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get app services and attrubute list.
            </summary>
            <param name="appId">Application id.</param>
            <param name="tenantId">Tenant id</param>
            <param name="customerId">customer id</param>
            <param name="includeAttributeAccountDetail"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.GetBusinessServiceAttributeListAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.BusAppServiceDTO},System.Guid,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get business app service attribute list.
            </summary>
            <param name="appServiceDTOList">Collection of services.</param>      
            <param name="appId">Application id</param>
            <param name="tenantId">tenantid</param>
            <param name="customerId">customer uniqueid.</param>
            <param name="includeAccountDetail">Include saved account detail.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.GetCustomerInfoAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer info by business entity customer id.
            </summary>
            <param name="baCustomerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.GetCustomerInfoByBusinessPartnerIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer info by businessPartnerTenantId.
            </summary>
            <param name="businessPartnerTenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.GetBusinessAppServiceListByAppKeyAndTenantIdAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get app service by appkey and tenantid.
            </summary>
            <param name="appKey"></param>
            <param name="tenantId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.GetBusinessAppServiceListByAppIdsAndTenantIdAsync(System.Collections.Generic.List{System.Guid},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business app service list by application and tenant id.
            </summary>
            <param name="appIdList">Application id list.</param>
            <param name="tenantId">Tenantid.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBACustomerDS.GetBusinessAppServiceAttributeListByServiceIdsAsync(System.Collections.Generic.List{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Get service attribute list by service ids.
            </summary>
            <param name="serviceIdList">List of AppService Id.</param>               
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.QBusinessAndUserDS">
            <summary>
            A wrapper queryied class to get business and its supported entity data. 
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.#ctor(ewApps.AppPortal.QData.IQBusinessAndUserRepository,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Contructor to initilize local variables.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetBusinessListAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get filteredbusiness  tenant list.
            </summary>
            <param name="filter">Filter object</param>
            <returns>return list of business of login tenant.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetFilterBusinessListAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get filter business list.
            </summary>
            <param name="filter">Filter object contains filter properties.</param>
            <param name="homeAppId">Home application id.</param>
            <param name="tenantId">Filter by tenantid.</param>
            <param name="token"></param>
            <returns>return filter business list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetBusinessAppSubscriptionInfoDTOAsync(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get subscribed application list by tenantid.
            </summary>
            <param name="tenantId"></param>
            <param name="publisherTenantId"></param>
            <param name="isdeleted"></param>
            <param name="token"></param>
            <returns>return application list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetAllBusinessUsersAsync(System.Int32,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetApplicationForUserAsync(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetPaymentAllBusinessUsersAsync(System.Int32,System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetShipmenttAllBusinessUsersAsync(System.Int32,System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetCustomerAppAllBusinessUsersAsync(System.Int32,System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetVendorAppAllBusinessUsersAsync(System.Int32,System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetTenantUserDetails(System.Guid,System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetAllCustomerUserByBusinessPartnerId(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetAllVendorUserByBusinessPartnerId(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetBusinessConfigurationDetailAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Business Configuration Detail 
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>Business Configuration Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetBusinessBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get platform branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBranding Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetBusinessOnBoardDetailByAppAndBusinessAndUserIdAsync(System.String,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetBusinessSetupOnBoardDetailByAppAndBusinessAndUserIdAsync(System.String,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.GetBusinessUserNotificationGenDataAsync(System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessAndUserDS.CheckUserIsLastAdminUserAsync(System.Guid,System.Int32,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QBusinessUserSessionDS.LogOut(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QConfigurationDS.GetConfigurationDetailAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get configuration details of customer by customerid
            </summary>
            <param name="buspartnertenantid"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QConfigurationDS.GetVendorConfigurationDetailAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get configuration details of customer by customerid
            </summary>
            <param name="buspartnertenantid"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QCustomerAndUserDS.GetApplicationForCustomerUserAsync(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QCustomerAndUserDS.GetTenantUserDetails(System.Guid,System.Guid,System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QCustomerAndUserDS.GetCustomerSetupOnBoardDetailByAppAndBusinessAndUserIdAsync(System.String,System.Guid,System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QCustomerAndUserDS.CheckUserIsLastAdminUserAsync(System.Guid,System.Int32,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QCustomerAppDS.#ctor(ewApps.AppPortal.QData.IQCustomerAppRepository)">
            <summary>
            Initializing local variables.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QCustomerAppDS.GetAllCustomerApplicationsAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QCustUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.QPlatBusinessDS">
            <summary>
            Provide functionality to write bussiness logic related to business entity by creating an object to this class.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.QPlatBusinessDS.BusinessApplicationId">
            <summary>
            Its default entery for business tenant application.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPlatBusinessDS.#ctor(ewApps.AppPortal.QData.IQPlatBusinessRepository)">
            <summary>
            Dependency injection for all the required data service and services.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPlatBusinessDS.GetTenantListOnPlatformAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.QPlatformAndUserDS">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPlatformAndUserDS.#ctor(ewApps.AppPortal.QData.IQPlatformAndUserRepository,ewApps.Core.DMService.IEntityThumbnailDS)">
            <summary>
            
            </summary>
            <param name="qIPlatformRepository"></param>
            <param name="entityThumbnailDS"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPlatformAndUserDS.GetPlatformBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get platform branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PlatformBranding Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPlatformAndUserDS.GetAppDetailsAsync">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPlatformAndUserDS.GetAppDetailsByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPlatformAndUserDS.GetTenantUserDetails(System.Guid,System.Guid,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPlatformUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPubBusinessSubsPlanAppServiceDS.#ctor(ewApps.AppPortal.Data.IQPubBusinessSubsPlanAppServiceRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.QPubBusinessSubsPlanAppServiceDS"/> class.
            </summary>
            <param name="qPubBusinessSubsPlanAppServiceDS">The q pub business subs plan application service ds.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPubBusinessSubsPlanAppServiceDS.GetPlanServicesByPlanIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get subscribed services by PlanId.
            </summary>
            <param name="pubBusSubsPlanId">PubBusinessSubsPlanId</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPubBusinessSubsPlanAppServiceDS.GetSubscriptionPlanServiceAndAttributeByPlanIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.QPublisherAndUserDS">
            <summary>
            A wrapper class for publisher to provide  mulitple context data.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.#ctor(ewApps.AppPortal.QData.IQPublisherAndUserRepository,ewApps.Core.DMService.IEntityThumbnailDS)">
            <summary>
            constructor to initilize the local variables.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetPublisherBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get platform branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBranding Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetConfigurationDetailAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get platform branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBranding Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetAppDetailsAsyncFromPubAppSettingAppAndTenantIDAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get appdetail bu publisher tenant and appid.
            </summary>
            <param name="appId"></param>
            <param name="pubTenantId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetPublisherSubscribedAppSubdomainAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
             Get subscribed application list by a publisher tenant subdomain.
            </summary>
            <param name="subdomainName">Publisher tenant subdomain name</param>
            <param name="includeInactive">Include inactive application also.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetPublisherAppServiceByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get application sub services subscribed by a Tenant applications.
            </summary>
            <param name="tenantId">Id of publisher Tenant</param>
            <returns>return application sub services and Application id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetAppSubscriptionAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get publisher created subscription plan or master subscription plan.
            </summary>
            <param name="appId"></param>
            <param name="publisherTenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetAllPublishersAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetPublisherDetailByPublisherIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetPublishersBusinessSubscriptionPlanListByAppIdsAndPublisherTenantIdAsync(System.Collections.Generic.List{System.Guid},System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetPubAppSettingListByPublisherTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetPublisherDetailByBusinessIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetSubscriptionPlanListByAppAndPubTenantIdAsync(System.Guid,System.Guid,ewApps.Core.BaseService.BooleanFilterEnum,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetAppDetailsPublisherAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetAppDetailsWithServicesPublisherAsync(System.Guid,ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetAllPublisherUsersAsync(System.Int32,System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.CheckUserIsLastAdminUserAsync(System.Guid,System.Int32,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QPublisherAndUserDS.GetTenantUserDetails(System.Guid,System.Guid,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ewApps.AppPortal.DS.QPublisherUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)" -->
        <member name="M:ewApps.AppPortal.DS.QVendorAndUserDS.GetTenantUserDetails(System.Guid,System.Guid,System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QVendorAppDS.#ctor(ewApps.AppPortal.QData.IQVendorAppRepository)">
            <summary>
            Initializing local variables.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.QVendorAppDS.GetAllVendorApplicationsAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.QVendUserSessionDS.GetUserSessionAsync(System.Guid,System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.AboutUsDS">
            <summary>
            This class implements standard business logic and operations for About Us entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.AboutUsDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.Core.DMService.DMServiceSettings},Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IPlatformDS,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.IPublisherAppSettingDS)">
            <summary>
            
            </summary>     
            <param name="tenantLinkingDS"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.AboutUsDS.GetPlatformAboutUsDetailsAsync">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.AboutUsDS.GetPublisherAboutUsDetails">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.AboutUsDS.GetBusinessAboutUsDetails(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.AboutUsDS.GetVendorAboutUsDetails(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.AuthenticationDS">
            <summary>
            Data service implements all authenticate related api's
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.#ctor(ewApps.AppPortal.DS.IBusinessDS,Microsoft.Extensions.Options.IOptions{ewApps.Core.NotificationService.NotificationAppSettings},ewApps.AppPortal.DS.IPlatformDS,ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.ITokenInfoDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.Core.DMService.IEntityThumbnailDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.AuthenticationDS"/> class.
            </summary>
            <param name="businessDS">The business ds.</param>
            <param name="notificationAppSettingOption">The notification application setting option.</param>
            <param name="platformDS">The platform ds.</param>
            <param name="entityThumbnailDS">The entity thumbnail ds.</param>
            <param name="publisherDS">The publisher ds.</param>
            <param name="tokenInfoDataService">The token information data service.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.ValidateSubdomainAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.GetTokenInfoByTokenIdAsync(System.Guid,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.GetTokenInfoBySubdomainAsync(System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.GetTenantInfoBySubdomain(System.String,System.Int32)">
            <summary>
            Gets the tenant information by subdomain.
            </summary>
            <param name="subdomain">The subdomain.</param>
            <param name="uType">Type of the u.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.GetTenantInfoByTenantId(System.Guid,System.Int32)">
            <summary>
            Gets the tenant information by tenant identifier.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="uType">Type of the u.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.CheckTokenAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.DeleteTokenInfoAsync(ewApps.AppPortal.DTO.TokenInfoDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.GetPlatformLoginData(ewApps.AppPortal.DTO.TenantInfoDTO,ewApps.AppPortal.DTO.TokenDataDTO)">
            <summary>
            Gets the platform login data.
            </summary>
            <param name="tenantInfoDTO">The tenant information dto.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.GetPublisherLoginData(ewApps.AppPortal.DTO.TenantInfoDTO,ewApps.AppPortal.DTO.TokenDataDTO)">
            <summary>
            Gets the publisher login data.
            </summary>
            <param name="tenantInfoDTO">The tenant information dto.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.GetBusinessLoginData(ewApps.AppPortal.DTO.TenantInfoDTO,ewApps.AppPortal.DTO.TokenDataDTO)">
            <summary>
            Gets the business login data.
            </summary>
            <param name="tenantInfoDTO">The tenant information dto.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AuthenticationDS.GetCustomerLoginData(ewApps.AppPortal.DTO.TenantInfoDTO,ewApps.AppPortal.DTO.TokenDataDTO)">
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.GetShipAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Ship-App branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>AppPortalBrandingDQ Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.UpdateShipAppBrandingAsync(ewApps.AppPortal.DTO.AppPortalBrandingDQ)">
            <summary>
            Update Ship-App branding details
            </summary>
            <param name="appPortalBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.GetPayAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Pay-App branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBrandingDQ Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.UpdatePayAppBrandingAsync(ewApps.AppPortal.DTO.AppPortalBrandingDQ)">
            <summary>
            Update Pay-App branding details
            </summary>
            <param name="appPortalBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.GetCustAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Cust-App branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBrandingDQ Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.UpdateCustAppBrandingAsync(ewApps.AppPortal.DTO.AppPortalBrandingDQ)">
            <summary>
            Update Cust-App branding details
            </summary>
            <param name="appPortalBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.GetVendAppBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get Cust-App branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBrandingDQ Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.UpdateVendAppBrandingAsync(ewApps.AppPortal.DTO.AppPortalBrandingDQ)">
            <summary>
            Update Cust-App branding details
            </summary>
            <param name="appPortalBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.AppPortalDS.GetThemeNameAndThemeKey">
            <summary>
            Get Theme name and Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IQBACustomerDS,ewApps.AppPortal.DS.ICustomerAccountDetailDS,ewApps.AppPortal.DS.ICustomerDS,ewApps.AppPortal.Data.IUnitOfWork,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IQBusinessAppDS,ewApps.AppPortal.DS.IQBusinessAndUserDS,ewApps.AppPortal.DS.IRoleDS,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.ITenantUserAppPreferenceDS,ewApps.AppPortal.DS.IBusinessNotificationHandler,ewApps.AppPortal.DS.ICustUserPreferenceDS,ewApps.AppPortal.DS.IBusinessAddressDS,ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IQCustomerAppDS)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GetCustomerAndPaymentInfoAsync(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get customer info by business entity customer id.
            </summary>
            <param name="baCustomerId">BACustomer unique id</param>
            <param name="appId">Application id</param>
            <param name="includeAccountDetl">Include attribute account detail.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GetCustomerInfoByBusinessPartnerAsync(System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get customer info by businessPartnerTenantId.
            </summary>
            <param name="businessPartnerTenantId"></param>
            <param name="appId">Application id</param>
            <param name="includeAccountDetl">Include attribute account detail.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GetCustomerAndPaymentAppKeyInfoAsync(System.Guid,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get customer info by business entity customer id.
            </summary>
            <param name="baCustomerId">BACustomer unique id</param>
            <param name="appKey">Application id</param>
            <param name="includeAccountDetl">Include attribute account detail.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GetCustomerListByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GetCustomerListByStatusAndTenantIdAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GetCustomerDetailByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GetCustomerListForBizSetupApp(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GetCustomerDetailForBizSetupApp(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.UpdateCustomerDetailForBizSetupApp(ewApps.AppPortal.DTO.BusCustomerUpdateDTO,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.GenerateAddUserNotification(ewApps.AppPortal.DTO.TenantUserSignUpResponseDTO,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Method used to generate the add user notification.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusCustomerDS.DeleteCustomerAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete customer
            </summary>
            <param name="customerId"></param>
            <param name="businessPartnerTenantId"></param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessAddressDS">
            <summary>
            Contains supportive method for Address entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessAddressDS.#ctor(ewApps.AppPortal.Data.IBusinessAddressRepository)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="addressRepo"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessAddressDS.GetAddressListByParentEntityIdAndAddressTypeAsync(System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get address detail list by parentEntityid and addressType.
            </summary>
            <param name="tenantId"></param>
            <param name="businessId"></param>
            <param name="addressType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessAddressDS.GetAddressEntityListByParentEntityIdAndAddressTypeAsync(System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get address detail list by parent and entityid.
            </summary>
            <param name="tenantId"></param>
            <param name="parentEntityId"></param>
            <param name="addressType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessAddressDS.AddUpdateBusinessAddressListAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.BusinessAddressModelDTO},System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update business address.
            </summary>
            <param name="addressDTOList"></param>
            <param name="tenantId"></param>
            <param name="businessId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessAddressDS.AddBusinessAddressAsync(ewApps.AppPortal.DTO.BusinessAddressModelDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add business address.
            </summary>
            <param name="addressDTO"></param>
            <param name="tenantId"></param>
            <param name="businessId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessAddressDS.UpdateBusinessAddressAsync(ewApps.AppPortal.DTO.BusinessAddressModelDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update business address.
            </summary>
            <param name="addressDTO"></param>
            <param name="tenantId"></param>
            <param name="businessId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessAddressDS.AddBusinessAddressFromSAPAsync(ewApps.AppPortal.DTO.BusinessSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add business address.
            </summary>
            <param name="addressDTO"></param>
            <param name="tenantId"></param>
            <param name="businessId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessDS">
            <summary>
            This class implements standard business logic and operations for business entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.#ctor(ewApps.AppPortal.Data.IBusinessRepository,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IBusinessAccess,ewApps.AppPortal.DS.IBusinessAddressDS,ewApps.AppPortal.DS.IQBusinessAndUserDS,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.Data.IUnitOfWork,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings})">
            <summary>
            Initializing local variables
            </summary>
            <param name="businessRepository">Business data class repository.</param>        
            <param name="userSessionManager">User session class.</param>        
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.GetBusinessByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business by tenantid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.GetBusinessTenantDetailModelDTOAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business model by tenant id.
            </summary>
            <param name="tenantId">Unique tenant id.</param>
            <param name="token"></param>
            <returns>return detail business tenant model.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.GetBusinessBrandingDetailAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Branding Setting Detail
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.CheckSecurityOnAdd">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.CheckSecurityOnUpdate">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.CheckSecurityOnDelete">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.GetBusinessBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get publisher branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBrandingDQ Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.GetThemeNameAndThemeKey">
            <summary>
            Get Theme name and Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.UpdateBusinessBranding(ewApps.AppPortal.DTO.BusinessBrandingDQ)">
            <summary>
            Update Publisher branding details
            </summary>
            <param name="businessBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessDS.SyncERPBusiness(ewApps.AppPortal.DTO.BusinessSyncDTO)">
            <summary>
            Update Business From SAP
            </summary>
            <param name="businessSyncDTO"></param>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessExtDS">
            <summary>
             A business wrapper class to get busines and business tenant and related child entities.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.#ctor(ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IBusinessAddressDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.AppPortal.DS.IPublisherAppSettingDS,ewApps.AppPortal.DS.ITenantUserAppPreferenceDS,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IQPublisherAndUserDS,ewApps.AppPortal.Data.IUnitOfWork,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IBusinessAddressDS,ewApps.AppPortal.DS.IQBusinessAndUserDS)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.GetBusinessUpdateModelAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>       
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.GetBusinessPrimaryUser(System.Collections.Generic.List{ewApps.AppPortal.DTO.UserShortInfoDQ})">
            <summary>
            Get business primary user.
            </summary>
            <param name="usersList"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.DeleteBusinessAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete business and its subscription.
            </summary>
            <param name="tenantId">Business tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.TestConnectionAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Method is used to validate ERP connector connection.
            </summary>
            <param name="request">Request model</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.SyncTimeLogAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Data from Sync time log 
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.GetBusinessConfigurationDetailAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.UpdateBusinessConfigurationDetailAsync(ewApps.AppPortal.DTO.BusConfigurationDTO,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="dto"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessExtDS.UpdateBusinessConnectorConfigsAsync(System.Guid,System.Collections.Generic.List{ewApps.AppPortal.DTO.ConnectorConfigDTO},System.Threading.CancellationToken)">
            <summary>
            Adding/updating/deleting configuration for business.
            </summary>        
            <param name="tenantId">Business tenant</param>        
            <param name="connectorConfigDTO">Incoming connetor request is coming for add/update/delete.</param>
            <param name="token"></param>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessSignUpDS">
            <summary>
            A wrapper class contains method to add business with all its related entities.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessSignUpDS.#ctor(ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IBusinessAddressDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.AppPortal.DS.ITenantUserAppPreferenceDS,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IRoleDS,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.IPublisherNotificationHandler,ewApps.AppPortal.DS.IQPublisherAndUserDS,ewApps.AppPortal.DS.ITenantAppLinkingDS,ewApps.AppPortal.Data.IUnitOfWork,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IBusUserPreferenceDS)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessSignUpDS.BusinessSignUpAsync(ewApps.AppPortal.DTO.BusinessSignUpRequestDTO,System.Threading.CancellationToken)">
            <summary>
            Method is used to singup business as well as subscribe the application for business.
            </summary>
            <param name="businessSignUpDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessSignUpDS.AddBusinessConnectorConfigsAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.ConnectorConfigDTO},ewApps.AppPortal.DTO.BusinessTenantSignUpResponseDTO,System.Threading.CancellationToken)">
            <summary>
            Adding connector configuration for tenant application.
            </summary>
            <param name="connectorConfigDTO">Client connector configuration setting for a tenant.</param>
            <param name="tenant">Business tenant</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessSignUpDS.AddBusinessAndAddress(ewApps.AppPortal.DTO.BusinessSignUpRequestDTO,ewApps.AppPortal.DTO.BusinessTenantSignUpResponseDTO,System.Threading.CancellationToken)">
            <summary>
            Add tenant/tenantlinking/business.
            </summary>
            <param name="businessRegistrtionDTO"></param>
            <param name="tenant"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessSignUpDS.AddBusiness(ewApps.AppPortal.DTO.BusinessSignUpRequestDTO,ewApps.AppPortal.DTO.BusinessTenantSignUpResponseDTO,System.Threading.CancellationToken)">
            <summary>
            Generate business entity from business model.
            </summary>
            <param name="businessRegistrtionDTO"></param>
            <param name="tenant"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessSignUpDS.GetTenantPrimaryUsersByTenantIdAndAppIdAndUserTypeAsync(ewApps.AppPortal.DTO.BusinessSignUpRequestDTO,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get tenant primary user detail.
            </summary>
            <param name="busRegDto"></param>
            <param name="pubHomeAppId"></param>
            <param name="uType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusinessUpdateDS">
            <summary>
            A wrapper class contains method to add business with all its related entities.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.#ctor(ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IBusinessAddressDS,ewApps.AppPortal.DS.IRoleDS,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.ITenantUserAppPreferenceDS,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IQPublisherAndUserDS,ewApps.AppPortal.DS.ITenantAppLinkingDS,ewApps.AppPortal.Data.IUnitOfWork,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IBusUserPreferenceDS)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.UpdateBusinessAsync(ewApps.AppPortal.DTO.UpdateBusinessTenantModelDQ,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.UpdateBusinessConnectorConfigsAsync(System.Guid,System.Collections.Generic.List{ewApps.AppPortal.DTO.ConnectorConfigDTO},System.Threading.CancellationToken)">
            <summary>
            Adding/updating/deleting configuration for business.
            </summary>        
            <param name="tenantId">Business tenant</param>        
            <param name="connectorConfigDTO">Incoming connetor request is coming for add/update/delete.</param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.UpdateERPDataForNewApplicationAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            pull erp Data
            </summary>        
            <param name="tenantId">Business tenant</param>       
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.UpdateTenantAndAddressAndBusinessAsync(ewApps.AppPortal.DTO.UpdateBusinessTenantModelDQ,System.Threading.CancellationToken)">
            <summary>
            Add tenant/tenantlinking/business.
            </summary>
            <param name="businessRegistrtionDTO"></param>    
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.UpdateBusinessAddressListAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.BusinessAddressModelDTO},ewApps.AppPortal.Entity.Business,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update business address.
            </summary>
            <param name="addressDTOList"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.AddAddressAsync(ewApps.AppPortal.DTO.BusinessAddressModelDTO,ewApps.AppPortal.Entity.Business,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add business address.
            </summary>
            <param name="addressDTO"></param>
            <param name="bus">Business entity.</param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.UpdateBusinessAddressAsync(ewApps.AppPortal.DTO.BusinessAddressModelDTO,System.Guid,ewApps.AppPortal.Entity.BusinessAddress,System.Threading.CancellationToken)">
            <summary>
            Update business address.
            </summary>
            <param name="addressDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusinessUpdateDS.UpdateBusinessInfoAsync(ewApps.AppPortal.DTO.UpdateBusinessTenantModelDQ,System.Threading.CancellationToken)">
            <summary>
            Update business entity from business model.
            </summary>
            <param name="businessRegistrtionDTO"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IVendorDS,ewApps.AppPortal.Data.IUnitOfWork,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IQBusinessAppDS,ewApps.AppPortal.DS.IQBusinessAndUserDS,ewApps.AppPortal.DS.IRoleDS,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.ITenantUserAppPreferenceDS,ewApps.AppPortal.DS.IBusinessNotificationHandler,ewApps.AppPortal.DS.ICustUserPreferenceDS,ewApps.AppPortal.DS.IBusinessAddressDS,ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IQCustomerAppDS,ewApps.AppPortal.DS.IVendorNotificationHandler)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.GetVendorListByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.GetVendorListByStatusAndTenantIdAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.GetVendorDetailByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.GetVendorListForBizSetupApp(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.GetVendorDetailForBizSetupApp(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.GetBusinessVendorDetail(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get vendor detail.
            </summary>
            <param name="vendorId">Vendor Id</param>
            <param name="tenantId">Tenant Id</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.UpdateVendorDetailForBizSetupApp(ewApps.AppPortal.DTO.BusVendorUpdateDTO,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusVendorDS.GenerateAddUserNotification(ewApps.AppPortal.DTO.TenantUserSignUpResponseDTO,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Method used to generate the add user notification.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusTenantUserDS">
            <summary>
            This class implements standard business logic and operations for Business TenantUser entity.
            </summary>   
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.#ctor(ewApps.AppPortal.DS.IBizNotificationHandler,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.ITokenInfoDS,ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IQBusinessAndUserDS,ewApps.AppPortal.DS.IQBusinessAppDS,ewApps.AppPortal.DS.IBusinessNotificationHandler)">
            <summary>
            Initialinzing local variables
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetAllBusinessUsersAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetPaymentAllBusinessUsersAsync(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetShipmentAllBusinessUsersAsync(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetCustomerAppAllBusinessUsersAsync(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetVendorAppAllBusinessUsersAsync(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetAllApplicationForTenantAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetTenantUserAndAppDetails(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetApplicationForUserAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserDS.GetBusinessPermissionCountByBitMask(System.Int64)">
            <summary>
            Method returns the feature count.
            </summary>
            <param name="permissionbitmask"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserUpdateDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IBusinessNotificationHandler,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.ITenantUserAppPreferenceDS,ewApps.AppPortal.DS.IQPlatformAndUserDS,ewApps.AppPortal.DS.IRoleDS,ewApps.AppPortal.DS.ITokenInfoDS,ewApps.AppPortal.DS.IQBusinessAndUserDS,ewApps.AppPortal.DS.IBizNotificationHandler,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.IBusUserPreferenceDS,ewApps.AppPortal.DS.IQBusinessAppDS)">
            <summary>
            Initialinzing local variables
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusTenantUserUpdateDS.UpdateTenantUserAsync(ewApps.AppPortal.DTO.TenantUserUpdateRequestDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerAccountDetailDS.#ctor(ewApps.AppPortal.Data.ICustomerAccountDetailRepository,ewApps.AppPortal.Data.IUnitOfWork)">
            <summary>
            Initialinzing local variables .
            </summary>
            <param name="customeAccountDetailRepo"></param>
            <param name="unitOfWork"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ewApps.AppPortal.DS.CustomerAccountDetailDS.MaskNumber(System.String)" -->
        <member name="T:ewApps.AppPortal.DS.CustomerDS">
            <summary>
            This class implements standard business logic and operations for Customer entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.#ctor(ewApps.AppPortal.DS.ICustomerAccountDetailDS,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.Data.ICustomerRepository,ewApps.AppPortal.DS.IQConfigurationDS,ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.ICustomerAccountDetailDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings})">
            <summary>
            Initialinzing local variables .
            </summary>
            <param name="userSessionManager"></param>
            <param name="customerRepository"></param>
            <param name="qConfigurationDS"></param>
            <param name="unitOfWork"></param>
            <param name="customerAccountDetailDS"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.AddCustomerAsync(ewApps.AppPortal.DTO.CustomerSignUpReqDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.GetConfigurationDetailAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="buspartnertenantid"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.UpdatetConfigurationDetailAsync(ewApps.AppPortal.DTO.CustConfigurationUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update customer configuration
            </summary>
            <param name="custConfigurationUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.UpdateBACustomerDetail(ewApps.AppPortal.DTO.CustConfigurationUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update BA Customer Details
            </summary>
            <param name="custConfigurationUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.ValidateCreditCardDetailAsync(ewApps.AppPortal.DTO.CustCreditCardRequestDTO,System.Threading.CancellationToken)">
            <summary>
            Validate CreditCard
            </summary>
            <param name="custCreditCardRequestDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.AddCustomerAccountDetail(System.Guid,ewApps.AppPortal.DTO.CustomeAccDetailDTO,System.Threading.CancellationToken)">
            <summary>
            Save account detail.
            </summary>
            <param name="customerId"></param>
            <param name="customeAccDetail"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.GetCustomerDetailByIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerDS.GetCustomerByBusinesPartnerIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer by business partner id.
            </summary>
            <param name="busPartnerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.CustomerSignUpDS">
            <summary>
            This class implements standard business logic and operations for customer entity data from connectors to local database.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustomerSignUpDS.#ctor(ewApps.AppPortal.DS.ICustomerDS,ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.Data.IUnitOfWork,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings})">
            <summary>
            Initialinzing local variables .
            </summary>
            <param name="customerDS"></param>
            <param name="unitOfWork"></param>
            <param name="appSettings"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ewApps.AppPortal.DS.CustomerSignUpDS.CustomerSignUpAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.CustomerSignUpReqDTO},System.Threading.CancellationToken)" -->
        <member name="M:ewApps.AppPortal.DS.CustomerSignUpDS.SignUpCustomerAsync(ewApps.AppPortal.DTO.SignUpBACustomerDTO,System.Threading.CancellationToken)">
            <summary>
            Signup customer.
            Method will use in standalone case.
            </summary>
            <param name="signupCustDTO"></param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="T:ewApps.AppPortal.DS.CustTenantUserDS">
            <summary>
            Cust Tenant User class contains all add/update/delete/get methods for Tenant User On Customer.    
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserDS.#ctor(ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.ICustNotificationHandler,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IQCustomerAndUserDS,ewApps.AppPortal.DS.ITokenInfoDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IQCustomerAppDS,ewApps.AppPortal.DS.IBusinessNotificationHandler,ewApps.AppPortal.DS.IVendorNotificationHandler)">
            <summary>
            Initialize Local Variable 
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserDS.GetAllCustSetupCustomerUsersAsync(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserDS.GetTenantUserAndAppDetails(System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserDS.GetApplicationForCustomerUserAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserDS.GetPaymentAppCustomerUsers(System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserDS.GetCustomerAppCustomerUsers(System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserDS.GetAllCustomerApplicationsAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserDS.ForgotPasswordAsync(ewApps.AppPortal.DTO.ForgotPasswordDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserUpdateDS.#ctor(ewApps.AppPortal.DS.IQBusinessAndUserDS,ewApps.AppPortal.DS.IBizNotificationHandler,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IBusinessNotificationHandler,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.ITenantUserAppPreferenceDS,ewApps.AppPortal.DS.IQPlatformAndUserDS,ewApps.AppPortal.DS.IRoleDS,ewApps.AppPortal.DS.ITokenInfoDS,ewApps.AppPortal.DS.ICustNotificationHandler,ewApps.AppPortal.DS.IQCustomerAndUserDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.ICustUserPreferenceDS)">
            <summary>
            Initialinzing local variables
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustTenantUserUpdateDS.UpdateTenantUserAsync(ewApps.AppPortal.DTO.TenantUserUpdateRequestDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.FavoriteDS">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.FavoriteDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.Data.IFavoriteRepository,ewApps.AppPortal.Data.IUnitOfWork)">
            <summary>
            
            </summary>
            <param name="favoriteRepository"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.FavoriteDS.AddFavoriteMenu(ewApps.AppPortal.DTO.FavoriteAddDTO,System.Threading.CancellationToken)">
            <summary>
            Add favorite menu item
            </summary>
            <param name="favoriteAddDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.FavoriteDS.CheckFavoriteMenu(System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Check menu item favorite or not
            </summary>
            <param name="appid"></param>
            <param name="menukey"></param>
            <param name="portalkey"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.FavoriteDS.GetFavoriteMenuList(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Get favorite menu item list
            </summary>
            <param name="appid"></param>
            <param name="portalkey"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.FavoriteDS.DeleteFavoriteMenu(ewApps.AppPortal.DTO.FavoriteUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Deleted favorite menu item
            </summary>
            <param name="favoriteUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.NotesDS.AddNotesListAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.NotesAddDTO},System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Add notes.
            </summary>
            <param name="notesList"></param>
            <param name="entityId"></param>
            <param name="entityType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.NotesDS.GenerateARInviceForBusiness(System.Guid,System.Int32,System.Guid,System.String,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Generate AR Invoice Notification For Business payment
            </summary>
            <param name="entityId"></param>
            <param name="appId"></param>
            <param name="comment"></param>
            <param name="userSession"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.NotesDS.GenerateSalesQuotationForBusinessCustomer(System.Guid,System.Int32,System.Guid,System.String,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Genenrate Sales Quotation For Business Customer 
            </summary>
            <param name="entityId"></param>
            <param name="appId"></param>
            <param name="comment"></param>
            <param name="userSession"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.NotesDS.GenerateSalesOrdersForBusinessCustomer(System.Guid,System.Int32,System.Guid,System.String,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Generate Sales Order For Business Customer 
            </summary>
            <param name="entityId"></param>
            <param name="appId"></param>
            <param name="comment"></param>
            <param name="userSession"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.NotesDS.GenerateDeliveryForBusinessCustomer(System.Guid,System.Int32,System.Guid,System.String,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Generate Delivery Notfication For Business Customer 
            </summary>
            <param name="entityId"></param>
            <param name="appId"></param>
            <param name="comment"></param>
            <param name="userSession"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.NotesDS.GenerateContractForBusinessCustomer(System.Guid,System.Int32,System.Guid,System.String,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Generate Contract Notification Business Customer 
            </summary>
            <param name="entityId"></param>
            <param name="appId"></param>
            <param name="comment"></param>
            <param name="userSession"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.NotesDS.GenerateDraftDeliveryForBusinessCustomer(System.Guid,System.Int32,System.Guid,System.String,ewApps.Core.UserSessionService.UserSession)">
            <summary>
            Generate Contract Notification Business Customer 
            </summary>
            <param name="entityId"></param>
            <param name="appId"></param>
            <param name="comment"></param>
            <param name="userSession"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.PaymentAndInvoiceDS">
            <summary>
            A wrapper class contains method to get payment and invoice list.    
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.#ctor(ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IBusCustomerDS,ewApps.AppPortal.DS.ICustomerDS,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS,ewApps.Core.DMService.IEntityThumbnailDS,Microsoft.Extensions.Logging.ILogger{ewApps.AppPortal.DS.PaymentAndInvoiceDS})">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetInvoiceListByTenantAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get invoice list by tenant id. allcancelinvoices
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetCancelInvoiceListByTenantAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get cancel invoice list by tenant id. 
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetInvoiceListByCustomerAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get customer invoices by customer partner tenantid and filter by date.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns>retun list of invoices.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetQuickPayInvoicesByTenantAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get quick pay invoice list.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetCustomerPaybleinvoicesByCustomerIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer payble invoices list.
            </summary>
            <param name="customerId">customer id</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetInvoiceByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice by id.
            </summary>
            <param name="invoiceId">Unique invoice id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetInvoiceByInvoiceIdAndSyncInvoiceAsync(System.Guid,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice by id.
            </summary>
            <param name="invoiceId">Unique invoice id.</param>
            <param name="erpARInvoiceKey">ERPARInvoiceKey</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetInvoiceAndCustomerPayInfoByInvoiceIdAndSyncInvoiceAsync(ewApps.AppPortal.DTO.InvoiceCustomerRequestDTO,System.Threading.CancellationToken)">
            <summary>
            Get invoices customer and its payment info.
            </summary>
            <param name="reqDto">invoice list and customerid.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetInvoiceAttachmentListByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice attachment list.
            </summary>
            <param name="invoiceId">Unique invoiceId id.</param>
            <param name="token"></param>
            <returns>return attachment list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetPaymentDTOAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets Payment DTO given its  id and inventoryid.
            </summary>
            <param name="id">  Id, unique key</param>
            <param name="invoiceId">  invoiceId</param>
            <param name="token">Cancellation token</param>
            <returns>Found Payment DTO</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetPaymentDTOAsyncByPaymentIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get payment detail by paymentid.
            </summary>
            <param name="paymentId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetAdvancePaymentDTOAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets advance Payments detail by given Payment id.
            </summary>
            <param name="paymentId">  Id, unique key</param>        
            <param name="token">Cancellation token</param>
            <returns>Found Payment DTO</returns>        
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetInvoicesByPaymentIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get the list of invoices paid in a single transection(payment).
            </summary>  
            <param name="paymentId">PaymentId</param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetFilterTenantPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by tenant and from/todate for a invoice by partnerid.
            </summary>
            <param name="filter">filter for getting tenant payment list.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetPaymentHistoryByInvoiceAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by invoice.
            </summary>
            <param name="invoiceId">filter by invoice.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetCustomerFilterPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by tenant and from/todate for a invoice by partnerid.
            </summary>
            <param name="filter">filter for getting tenant payment list.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetVoidPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by tenant and from/todate for a invoice by partnerid.
            </summary>
            <param name="filter">filter for getting tenant payment list.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetSattledFilterTenantPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by tenant and from/todate for a invoice by partnerid.
            </summary>
            <param name="filter">filter for getting tenant payment list.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetPaymentStatusFlowListAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Get payment transection status flow.
            </summary>
            <param name="paymentId">Unique paymentId</param>
            <param name="paymentMode">Mode of payment Vericheck or card</param>
            <param name="token"></param>
            <returns>retun payment status.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetFilterTenantPreAuthPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get preauthorized payment history.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetFilterTenantAdvancePaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get advance payment list by tenantid.
            </summary>
            <param name="filter">Filter object contains filter criteria.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetCustomerAdvanceFilterPaymentHistoryAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get customer advance payment list by partnerid.
            </summary>
            <returns></returns>        
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.AddPaymentAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get invoice list by tenant id.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.AuthorizeCardPaymentAsync(ewApps.AppPortal.DTO.AddPreAuthPaymentDTO,System.Threading.CancellationToken)">
            <summary>
            Authorize/Block Amount from Credit card for future use.
            </summary>
            <param name="payments">authorized payment object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.VoidPreAuthPaymentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            UnAuthorize/UnBlock Amount from Credit card for future use.
            </summary>
            <param name="preAuthPaymentId"></param>        
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GenerateQuickPaylink(ewApps.AppPortal.DTO.AddDeepLinkDTO,System.Threading.CancellationToken)">
            <summary>
            Generate deeplink of a invoice.
            </summary>
            <param name="deepLinkRequestModel"></param>
            <param name="token">Cancellation token</param>
            <returns>return link url.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetInvoiceCustomerPaymentDetailAsyncByQuickPaylink(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get invoice detail by deeplink shorturl.
            </summary>
            <param name="shortUrlKey"></param>
            <param name="machineIPAddress"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.QuickPaymentsAsync(ewApps.AppPortal.DTO.AddPaymentDTO[],System.String,System.Threading.CancellationToken)">
            <summary>
            Add muliple invoice payment.
            </summary>
            <param name="payments">AddPaymentDTO object</param>
            <param name="shorturl">a key generated for making payment.</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.AddPaymentsAsync(ewApps.AppPortal.DTO.AddPaymentDTO[],System.Threading.CancellationToken)">
            <summary>
            Add muliple invoice payment.
            </summary>
            <param name="payments">AddPaymentDTO object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.PullInvoiceFromERPAsync(ewApps.AppPortal.DTO.AddPaymentDTO[],System.Threading.CancellationToken)">
            <summary>
            Pull invoice data after payment.
            </summary>
            <param name="e"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.PullInvoiceFromERPAsync(ewApps.AppPortal.DTO.InvoiceCustomerRequestDTO,System.Threading.CancellationToken)">
            <summary>
            Pull invoice before payment.
            </summary>
            <param name="erpARInvoiceKey"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.GetUpdatedARInvoicesAsync(ewApps.AppPortal.DTO.InvoiceCustomerRequestDTO,System.Threading.CancellationToken)">
            <summary>
            Pull invoice before payment.
            </summary>
            <param name="requestDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.AddAdvancePaymentsAsync(ewApps.AppPortal.DTO.AddPaymentDTO,System.Threading.CancellationToken)">
            <summary>
            Pay advance payment.
            </summary>
            <param name="payment">AddPaymentDTO object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.SaveAccountDetailAsync(ewApps.AppPortal.DTO.AddPaymentDTO[],System.Threading.CancellationToken)">
            <summary>
            Save customer account info.
            </summary>
            <param name="payments"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.SavePreAuthAccountDetailAsync(ewApps.AppPortal.DTO.AddPreAuthPaymentDTO,System.Threading.CancellationToken)">
            <summary>
            Save customer account info.
            </summary>
            <param name="payment"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.AddInvoiceAsync(ewApps.AppPortal.DTO.AddBAARInvoiceDTO,System.Threading.CancellationToken)">
            <summary>
            Add invoice.
            </summary>
            <param name="invoiceDTO">Add invoice object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.AddInvoiceAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add invoice.
            </summary>
            <param name="invoiceDTO">Add invoice object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.CancelInvoiceAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Cancel invoice.
            </summary>
            <param name="invoiceId">invoice id</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.RefundPaymentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Refund payment transaction.
            </summary>
            <param name="paymentId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.VoidPaymentAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Void payment transaction.
            </summary>
            <param name="paymentId"></param>
            <param name="serviceName">Name of service to pay invoice.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PaymentAndInvoiceDS.DeleteInvoiceAttachmentByDocumentIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            delete invoice attachment.
            </summary>
            <param name="invoiceId">invoiceId</param>
            <param name="documentId">Unique document id.</param>
            <param name="token"></param>
            <returns>return attachment list.</returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.PlatformAppDS">
            <summary>
            This class implements standard business logic and operations for app entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.#ctor(ewApps.AppPortal.DS.IPublisherAccess,ewApps.AppPortal.DS.IQPlatformAndUserDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IPublisherAppSettingDS,ewApps.AppPortal.Data.IUnitOfWork,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.Data.IPublisherRepository)">
            <summary>
            Initializing local variables
            </summary>
            <param name="appAccess">The application access.</param>
            <param name="qPlatformDS">The q platform ds.</param>
            <param name="appSettings">The application settings.</param>
            <param name="publisherAppSettingDS">The publisher application setting ds.</param>
            <param name="unitOfWork">The unit of work.</param>
            <param name="userSessionManager">The user session manager.</param>
            <param name="entityThumbnailDS">The entity thumbnail ds.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetAppDetailsAsync">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetAppDetailsByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetPublisherListByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetBusinessNameByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetBusinessNameAsync(System.Guid,System.Threading.CancellationToken)">
            <Inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetAppServiceNameAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetAppDetailsWithServicesAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetAppServiceByAppId(System.Guid,System.Threading.CancellationToken)">
            <Inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.GetLoginUsersAppPermission">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformAppDS.UpdateAppAsync(ewApps.AppPortal.DTO.AppAndServiceDTO)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PlatformDS">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformDS.#ctor(ewApps.AppPortal.Data.IPlatformRepository,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.DS.IPublisherDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.IQPlatformAndUserDS,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            
            </summary>
            <param name="platformRepository"></param>
            <param name="entityThumbnailDS"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformDS.GetPlatformBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get platform branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PlatformBranding Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformDS.UpdatePlatformBranding(ewApps.AppPortal.DTO.DBQuery.PlatformBrandingDQ)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformDS.GetPlatformConnectorListAsync(System.Threading.CancellationToken)">
            <summary>
            get platform connector list
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS">
            <summary>
            This class implements standard business logic and operations for PlatformSubscriptionDS.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.#ctor(ewApps.AppPortal.DS.IPlatformSubscriptionPlanAccess,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IPubBusinessSubsPlanDS)">
            <summary>
            Initializing local variables
            </summary>
            <param name="entityAccess">entity access class reference.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.GetLoginUsersAppPermission">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.CheckSecurityOnAdding">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.CheckSecurityOnUpdating">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.CheckSecurityOnDelete">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.GetAppServicesDetailWithAttributesAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.GetSubscriptionPlanListByTenantIdAsync(ewApps.Core.BaseService.BooleanFilterEnum,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.GetSubscriptionPlaninfoByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.AddSubscriptionPlanWithServiceAttributeAsync(ewApps.AppPortal.DTO.SubscriptionAddUpdateDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.UpdateSubscriptionPlanWithServiceAttributeAsync(ewApps.AppPortal.DTO.SubscriptionAddUpdateDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSubscriptionPlanDS.DeleteSubscriptionPlanWithServiceAttributeAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PlatTenantUserDS">
            <summary>
            This class implements standard business logic and operations for appUser entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.#ctor(ewApps.AppPortal.DS.IPlatformAppUserAccess,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.IPlatformNotificationHandler,ewApps.AppPortal.DS.IQPlatformAndUserDS,ewApps.AppPortal.DS.IRoleDS,ewApps.AppPortal.DS.ITokenInfoDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.IPlatformDS)">
            <summary>
            Initialinzing local variables
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.GetPlatformTenantUsers(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.GetUserInfoByIdAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.GetTenantUserAndPermissionDetails(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.UpdateTenantUserProfile(ewApps.AppPortal.DTO.TenantUserProfileDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.ReInviteTenantUserAsync(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.CancelTenantUserInvitation(ewApps.AppPortal.DTO.TenantUserIdentificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.ForgotPasswordAsync(ewApps.AppPortal.DTO.ForgotPasswordDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.GetLoginUsersAppPermission">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.CheckSecurityOnAdding">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.CheckSecurityOnUpdating">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.CheckSecurityOnDelete">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserDS.GetPlatformPermissionCountByBitMask(System.Int64)">
            <summary>
            Method returns the feature count.
            </summary>
            <param name="permissionbitmask"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserUpdateDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.IQPlatformAndUserDS,ewApps.AppPortal.DS.IRoleDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.Data.IUnitOfWork)">
            <summary>
            Initialinzing local variables
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatTenantUserUpdateDS.UpdateTenantUserAsync(ewApps.AppPortal.DTO.TenantUserDTO,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatVersionDS.#ctor(Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initialize Local Variable 
            </summary>
            <param name="appPortalAppSettings"></param>
        </member>
        <member name="T:ewApps.AppPortal.DS.PortalAppLinkingDS">
            <summary>
            This class implementes <see cref="T:ewApps.AppPortal.DS.IPortalAppLinkingDS"/> to provide standard business logic and operations for <see cref="T:ewApps.AppPortal.Entity.PortalAppLinking"/>.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PortalAppLinkingDS.#ctor(ewApps.AppPortal.Data.IPortalAppLinkingRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.PortalAppLinkingDS"/> class with its dependencies.
            </summary>
            <param name="portalAppLinkingRepository">An instance of <see cref="T:ewApps.AppPortal.Data.IPortalAppLinkingRepository"/> to communicate with storage.</param>
            <param name="cacheService">An instance of <see cref="!:ICacheService"/> to get and set data to/from Cache.</param>
        </member>
        <member name="T:ewApps.AppPortal.DS.PortalDS">
            <summary>
            This class implementes <see cref="T:ewApps.AppPortal.DS.IPortalDS"/> to provide standard business logic and operations for <see cref="T:ewApps.AppPortal.Entity.Portal"/>.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PortalDS.#ctor(ewApps.AppPortal.Data.IPortalRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.PortalDS"/> class with its dependencies.
            </summary>
            <param name="portalRepository">An instance of <see cref="T:ewApps.AppPortal.Data.IPortalAppLinkingRepository"/> to communicate with storage.</param>
            <param name="cacheService">An instance of <see cref="!:ICacheService"/> to get and set data to/from Cache.</param>
        </member>
        <member name="T:ewApps.AppPortal.DS.PubBusinessSubsPlanAppServiceDS">
            <summary>
            Class provide add/update delete tenant appservice methods, it contains the relationship between tenant and app.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.PubBusinessSubsPlanDS">
            <summary>
            This class Contain Business Login of PubBusinessSubsPlan 
            </summary>   
        </member>
        <member name="M:ewApps.AppPortal.DS.PubBusinessSubsPlanDS.#ctor(ewApps.AppPortal.Data.IPubBusinessSubsPlanRepository)">
            <summary>
            Initialinzing local variables of Contructor
            </summary>
            <param name="addressRepo"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PubBusinessSubsPlanDS.GetByPublisherTenantAndAppAndPlanIdAsync(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>   
        </member>
        <member name="T:ewApps.AppPortal.DS.PublisherAddressDS">
            <summary>
            Contains supportive method for Address entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAddressDS.#ctor(ewApps.AppPortal.Data.IPublisherAddressRepository)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="addressRepo"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAddressDS.GetAddressListByPublisherIdAndAddressTypeAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get address detail list by parentEntityid and addressType.
            </summary>
            <param name="tenantId"></param>
            <param name="publisherId"></param>
            <param name="addressType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAddressDS.GetAddressEntityListByParentEntityIdAndAddressTypeAsync(System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get address detail list by parent and entityid.
            </summary>
            <param name="tenantId"></param>
            <param name="publisherId"></param>
            <param name="addressType"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAddressDS.AddUpdatePublisherAddressListAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.PublisherAddressDTO},System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update business address.
            </summary>
            <param name="addressDTOList"></param>
            <param name="tenantId"></param>
            <param name="publisherId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAddressDS.AddPublisherAddressAsync(ewApps.AppPortal.DTO.PublisherAddressDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add business address.
            </summary>
            <param name="addressDTO"></param>
            <param name="tenantId"></param>
            <param name="publisherId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAddressDS.UpdatePublisherAddressAsync(ewApps.AppPortal.DTO.PublisherAddressDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update business address.
            </summary>
            <param name="addressDTO"></param>
            <param name="tenantId"></param>
            <param name="publisherId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.#ctor(ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.IQPublisherAndUserDS,ewApps.AppPortal.DS.IPublisherAppSettingDS,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IPubBusinessSubsPlanAppServiceDS,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.IBusinessExtDS,ewApps.AppPortal.QData.IQPublisherAndUserRepository)">
            <summary>
            Constructor to init service class.
            </summary>
            <param name="publisherDS">Publisher dataservice.</param>
            <param name="qPublisherDS"></param>
            <param name="publisherAppSettingDS">publisherAppSettingDS object</param>
            <param name="userSessionManager">User session manager.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetPublisherAppServicesAndSubscriptionDetailsAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetPublisherAppServicesAndSubscriptionDetailsOnPlatformAsync(System.String,System.Boolean,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.FilterAppServiceAndAttributeList(System.Collections.Generic.List{ewApps.AppPortal.DTO.TenantAppServiceDQ},System.Guid,System.Guid)">
            <summary>
            Filter the service and attributes by appid and return it.
            </summary>
            <param name="listService">Collection of services subscribed by a publisher.</param>
            <param name="appId"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetApplicationListAsync(System.Boolean,System.Int32)">
            <Inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetAppDetailsPublisherAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetAppDetailsWithServicesPublisherAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetServiceListAsync(System.Collections.Generic.List{ewApps.AppPortal.Entity.PubBusinessSubsPlanAppService})">
            <Inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetServiceAttributeListAsync(System.Collections.Generic.List{ewApps.AppPortal.Entity.PubBusinessSubsPlanAppService})">
            <Inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetAppServicesNameByAppIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetBusinessNameByAppIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetBusinessNameAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <Inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.GetAppNameListByPublisheIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppDS.UpdateAppAsync(ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PublisherAppSettingDS">
            <summary>
            Class provide PublisherAppSettingDS add/update/delete and supportive methods.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppSettingDS.#ctor(ewApps.AppPortal.Data.IPublisherAppSettingRepository,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.Data.IUnitOfWork)">
            <summary>
            Default constructor.
            </summary>
            <param name="publisherAppSettingRepository"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppSettingDS.GetByAppIdAndPublisherTenantIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppSettingDS.GetAppNameListByPublisherIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppSettingDS.UpdatePublisherAppSettingFromAppAsync(ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppSettingDS.UpdateAppAsync(ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherAppSettingDS.UpdatePublisherAppSettingAsync(ewApps.AppPortal.DTO.AppDetailDTO,ewApps.AppPortal.DTO.AppAndServiceDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PublisherDS">
            <summary>
            
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.#ctor(ewApps.AppPortal.DS.IQPublisherAndUserDS,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.DS.IPublisherAddressDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.Data.IPublisherRepository,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IPublisherAccess,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS)">
            <summary>
            
            </summary>
            <param name="qPublisherDS"></param>
            <param name="entityThumbnailDS"></param>
            <param name="appPortalAppSettings"></param>
            <param name="unitOfWork"></param>
            <param name="publisherRepository"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.GetPublisherBrandingAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            get publisher branding details
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="cancellationToken"></param>
            <returns>PublisherBrandingDQ Model</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.UpdatePublisherBranding(ewApps.AppPortal.DTO.DBQuery.PublisherBrandingDQ)">
            <summary>
            Update Publisher branding details
            </summary>
            <param name="publisherBrandingDQ"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.GetLoginUsersAppPermission">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.CheckSecurityOnAdding">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.CheckSecurityOnUpdating">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.CheckSecurityOnDelete">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.GetConfigurationDetailAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.UpdateConfigurationDetailAsync(ewApps.AppPortal.DTO.ConfigurationDTO)">
            <summary>
            Update configuration details
            </summary>
            <param name="configurationDTO"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.GetPublisherByPublisherTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get publisher by publisher tenantid.
            </summary>
            <param name="pubTenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.GetPublisherConnectorListAsync(System.Threading.CancellationToken)">
            <summary>
            get platform connector list
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherDS.SyncTimeLogAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Data from Sync time log 
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherExtDS.#ctor(ewApps.AppPortal.DS.IQPublisherAndUserDS,ewApps.AppPortal.DS.IPublisherAddressDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.PublisherExtDS"/> class.
            </summary>
            <param name="qPublisherDS">The q publisher ds.</param>
            <param name="publisherAddressDS">The publisher address ds.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherExtDS.GetPublisherDetailByPublisherIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PublisherSignUpDS">
            <summary>
            This class defines methods to manage Publisher signup operations.
            </summary>
            <seealso cref="T:ewApps.AppPortal.DS.IPublisherSignUpDS" />
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherSignUpDS.#ctor(ewApps.AppPortal.DS.ITenantAppLinkingDS,ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.IPlatformDS,ewApps.AppPortal.DS.IPublisherAddressDS,ewApps.AppPortal.DS.IPublisherAppSettingDS,ewApps.AppPortal.DS.IPubBusinessSubsPlanAppServiceDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IRoleDS,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.IPlatformNotificationHandler,ewApps.AppPortal.DS.ITenantUserAppPreferenceDS,ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.DS.IPubBusinessSubsPlanDS,ewApps.AppPortal.Data.IUnitOfWork)">
            <summary>
            Initializes a instance of the <see cref="T:ewApps.AppPortal.DS.PublisherSignUpDS"/> class and it's dependencies.
            </summary>
            <param name="publisherDS">The publisher data service instance.</param>
            <param name="publisherAddressDS">The publisher address data service instance.</param>
            <param name="publisherAppSettingDS">The publisher application setting data service instance.</param>
            <param name="publisherAppServiceDS">The publisher application service data service instance.</param>
            <param name="appPortalAppSettingsOptions">The application portal application settings options.</param>
            <param name="userSessionManager">The user session manager.</param>
            <param name="roleDS">The role data service instance.</param>
            <param name="roleLinkingDS">The role linking data service instance.</param>
            <param name="tenantUserAppPreferenceDS">The tenant user application preference data service instance.</param>
            <param name="entityThumbnailDS">The entity thumbnail data service instance.</param>
            <param name="pubBusinessSubsPlanDS">The publisher business subscriptoin plan data service instance.</param>
            <param name="unitOfWork">The unit of work to manage transaction.</param>
            <param name="platformDS">The platform data service instance fro notification.</param>
            <param name="platformNotificationHandler">The notification handler for platfrom.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherSignUpDS.PublisherSignUpAsync(ewApps.AppPortal.DTO.PublisherSignUpRequestDTO,System.Threading.CancellationToken)">
            <summary>
            This method generates Publisher tenant and also it's related primary user, application subscription and other system data. Also sends invites to publisher's primary user.
            </summary>
            <param name="pubRequestDTO">It contains publisher infomration to be signup.</param>
            <param name="cancellationToken">The async task cancellation token.</param>
            <returns>Returns signedup publisher tenant and primary user information.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherSignUpDS.GetSubscriptionPlanListByAppIdAsync(System.Guid,ewApps.Core.BaseService.BooleanFilterEnum,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherSignUpDS.GetServiceAndAttributeDetailByPlanId(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherUpdateDS.#ctor(ewApps.Core.DMService.IEntityThumbnailDS,ewApps.AppPortal.DS.IPublisherAddressDS,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.IPublisherAppSettingDS,ewApps.AppPortal.DS.IPubBusinessSubsPlanDS,ewApps.AppPortal.DS.IPubBusinessSubsPlanAppServiceDS,ewApps.AppPortal.Data.IUnitOfWork,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.PublisherUpdateDS"/> class.
            </summary>
            <param name="entityThumbnailDS">The entity thumbnail ds.</param>
            <param name="publisherAddressDS">The publisher address ds.</param>
            <param name="userSessionManager">The user session manager.</param>
            <param name="publisherDS">The publisher ds.</param>
            <param name="publisherAppSettingDS">The publisher application setting ds.</param>
            <param name="pubBusinessSubsPlanDS">The pub business subs plan application service ds.</param>
        </member>
        <member name="T:ewApps.AppPortal.DS.PubSubscriptionPlanDS">
            <summary>
            This class implements standard business logic and operations for Pu bSubscriptionDS.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PubSubscriptionPlanDS.#ctor(Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initializing local variables
            </summary>
            <param name="entityAccess">entity access class reference.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PubSubscriptionPlanDS.GetSubscriptionPlanListByPubTenantIdAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>       
        </member>
        <member name="M:ewApps.AppPortal.DS.PubSubscriptionPlanDS.GetPubSubscriptionPlaninfoByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PubSubscriptionPlanDS.GetSubscriptionServiceNameListBySubscriptionPlanIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PubTenantUserDS">
            <summary>
            This class implements standard business logic and operations for TenantUser entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PubTenantUserDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.ITokenInfoDS,ewApps.AppPortal.DS.IQPublisherAndUserDS,ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.IPublisherNotificationHandler)">
            <summary>
            Initialinzing local variables
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PubTenantUserDS.GetPublihserPermissionCountByBitMask(System.Int64)">
            <summary>
            Method returns the feature count.
            </summary>
            <param name="permissionbitmask"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PubTenantUserUpdateDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IRoleLinkingDS,ewApps.AppPortal.DS.IQPublisherAndUserDS,ewApps.AppPortal.DS.IRoleDS,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.Data.IUnitOfWork,ewApps.AppPortal.DS.IPublisherNotificationHandler)">
            <summary>
            Initialinzing local variables
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PubTenantUserUpdateDS.UpdateTenantUserAsync(ewApps.AppPortal.DTO.TenantUserDTO,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PurchaseOrderDS">
            <summary>
            Provide method to add/update/get PurchaseOrder.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.PurchaseOrderDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS,ewApps.AppPortal.DS.IBusinessDS,Microsoft.Extensions.Logging.ILogger{ewApps.AppPortal.DS.PurchaseOrderDS})">
            <summary>
            Default Constructor.
            </summary>
            <param name="userSessionManager"></param>
            <param name="appSetting"></param>
            <param name="notesDS"></param>
            <param name="businessDS"></param>
            <param name="log"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get purchase order list by TenantId.
            </summary>
            <param name="listDateFilterDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsyncForVend(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get purchase order list by TenantId.
            </summary>
            <param name="listDateFilterDTO"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PurchaseOrderDS.GetPurchaseOrderByPurchaseOrderIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice by id.
            </summary>
            <param name="busTenantId">Business tenantid.</param>
            <param name="purchaseorderId">Unique invoice id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PurchaseOrderDS.GetPurchaseOrderAttachmentListByOrderIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order attachment list.
            </summary>
            <param name="purchaseOrderId">Unique purchaseOrder id.</param>
            <param name="token"></param>
            <returns>return attachment list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PurchaseOrderDS.AddPurchaseOrderAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add purchase order.
            </summary>
            <param name="httpRequest">Contains request object</param>
            <param name="request">Contains PruchaseOrder json.</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="T:ewApps.AppPortal.DS.RoleDS">
            <summary>
            This class implements standard business logic and operations for role entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.RoleDS.#ctor(ewApps.AppPortal.Data.IRoleRepository,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="roleRepository"></param>
            <param name="unitOfWork"></param>
            <param name="mapper"></param>
            <param name="sessionmanager"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.RoleDS.GetAdminRoleIdByAppIdAndUserTypeAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.RoleDS.GetOrCreateRoleAsync(System.Int64,System.Guid,System.Int32,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.RoleDS.GetEntityByAppUserAndAppId">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.RoleLinkingDS">
            <summary>
             This class implements standard business logic and operations for roleLinking entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.RoleLinkingDS.#ctor(ewApps.AppPortal.Data.IRoleLinkingRepository)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="roleLinkingRep"></param>
        </member>
        <member name="T:ewApps.AppPortal.DS.LevelTransitionHistoryDS">
            <summary>
            This class implements standard business logic and operations for Level Transition History.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.LevelTransitionHistoryDS.#ctor(ewApps.AppPortal.Data.ILevelTransitionHistoryRepository)">
            <summary>
            Initializing local variables
            </summary>
            <param name="levelTransitionHistoryRepository"></param>
            <param name="cacheService"></param>
        </member>
        <member name="T:ewApps.AppPortal.DS.SupportCommentDS">
            <summary>
            This class implements standard business logic and operations for support comment.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportCommentDS.#ctor(ewApps.AppPortal.Data.ISupportCommentRepository,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.SupportCommentDS"/> class.
            </summary>
            <param name="supportCommentRepository">The support comment repository.</param>
            <param name="userSessionManager">The user session manager.</param>
            <param name="cacheService">The cache service.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportCommentDS.ManageCommentList(System.Guid,System.Collections.Generic.List{ewApps.AppPortal.DTO.SupportCommentDTO},ewApps.AppPortal.Common.SupportLevelEnum,ewApps.Core.BaseService.OperationType)">
            <summary>Adds the comment list based on operation type of each comment item.</summary>
            <param name="supportId">Parent support ticket id.</param>
            <param name="supportCommentDTOList">The updated support comment list.</param>
            /// <param name="parentOpType">If None commit all comment list changes into persistance storage like database otherwise caller method has to commit all changes.</param>
            <returns>Return true if all comment items are add or update or delete (as per operation type).</returns>
            <exception cref="T:ewApps.Core.ExceptionService.EwpSecurityException">Raise security exception if login user doesn't have permission to manage support ticket.</exception>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportCommentDS.GetCommentListBySupportId(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.SupportGroupDS">
            <summary>
            This class implements standard business logic and operations for support group.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportGroupDS.#ctor(ewApps.AppPortal.Data.ISupportGroupRepository)">
            <summary>
            Initializing local variables
            </summary>
            /// <param name="supportGroupRepository"></param>
            <param name="cacheService"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportTicketDSNew.GetSession(System.String)">
            <summary>
            Gets informtation of support user session.
            </summary>
            <returns>Returns currnet support user session information.</returns>
            <remarks>This implementation returns null and should be override by inherited class to get actual support user session information.</remarks>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportTicketDSNew.CheckStatusChangePermission(ewApps.AppPortal.Entity.SupportTicket,ewApps.AppPortal.Entity.SupportTicket)">
            <summary>
            Check status change permission based on input changed and already saved instances of <see cref="T:ewApps.AppPortal.Entity.SupportTicket"/>.
            </summary>
            <param name="changedSupportTicket">An instance of <see cref="T:ewApps.AppPortal.Entity.SupportTicket"/> with changed values.</param>
            <param name="savedSupportTicket">An instance of <see cref="T:ewApps.AppPortal.Entity.SupportTicket"/> with old saved values.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportTicketDSNew.HasPermission(ewApps.AppPortal.Common.SupportPermissionTypeEnum,ewApps.AppPortal.Entity.SupportTicket)">
            <summary>
            This method checks login user's authorization of mention permission type.
            </summary>
            <param name="permissionEnum">Permission type to be authorize.</param>
            <param name="changedSupportTicket">Support ticket enttiy, updated by user.</param>
            <returns>Returns true if login user has permission other raise security exception.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportTicketDSNew.GenerateTicketNumber">
            <summary>
            Generates a new ticket number based on previously generated ticket number.
            </summary>
            <returns>Returns newly generated ticket number.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportTicketDSNew.GetMappedSupportLevel(ewApps.Core.BaseService.UserTypeEnum)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportTicketDSNew.ValidateLevelTransition(ewApps.AppPortal.Entity.SupportTicket,ewApps.AppPortal.Entity.SupportTicket)">
            <summary>
            Validates support ticket level transition from one level to another level.
            </summary>
            <param name="changedSupportTicket">An instance of <see cref="T:ewApps.AppPortal.Entity.SupportTicket"/> with changed values.</param>
            <param name="savedSupportTicket">An instance of <see cref="T:ewApps.AppPortal.Entity.SupportTicket"/> with old saved values.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportTicketDSNew.GetNextLevel(ewApps.AppPortal.Common.SupportLevelEnum)">
            <summary>
            Gets next support level of input support level.
            </summary>
            <param name="currentLevel">Current support level.</param>
            <returns>Return next support level of input support level.</returns>  
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportTicketDSNew.GetPreviousLevel(ewApps.AppPortal.Common.SupportLevelEnum)">
            <summary>
            Gets previous support level of input support level.
            </summary>
            <param name="currentLevel">Current support level.</param>
            <returns>Return previous support level of input support level.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantAppLinkingDS.#ctor(ewApps.AppPortal.Data.ITenantAppLinkingRepository,ewApps.AppPortal.Data.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.PortalDS"/> class with its dependencies.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.Data.ITenantUserAppPreferenceRepository,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.Data.IUnitOfWork,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="userSessionManager"></param>
            <param name="tenantUserAppPreferenceRepo"></param>
            <param name="unitOfWork"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.GetPlatformPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
            <param name="appid"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.GetPublisherPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
            <param name="appid"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.GetBusSetupPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
            <param name="appid"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.GetBusCustPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
            <param name="appid"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.GetBusPayPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
            <param name="appid"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.GetCustSetupPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
            <param name="appid"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.GetCustCustAppPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
            <param name="appid"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.GetCustPayAppPreferenceListAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
            <param name="appid"></param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.UpdatePlatformPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update platform Preference list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.UpdatePublisherPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update publisher Preference list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.UpdateBusCustPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.UpdateBusPayPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update Business Payment Preference
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>        
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.UpdateCustCustPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.TenantUserAppPreferenceDS.UpdateCustPayPreferenceListAsync(ewApps.AppPortal.DTO.PreferenceDTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update Customer Payment app Preference list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>        
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.TokenInfoDS.#ctor(ewApps.AppPortal.Data.ITokenInfoRepository,ewApps.AppPortal.Data.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.PortalDS"/> class with its dependencies.
            </summary>
            <param name="tokenInfoRepository">An instance of <see cref="T:ewApps.AppPortal.Data.IPortalAppLinkingRepository"/> to communicate with storage.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.TokenInfoDS.DeleteTokenAsync(ewApps.AppPortal.DTO.TokenInfoDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.TokenInfoDS.DeleteTokenByTenantUserIdAndTokenType(System.Guid,System.Guid,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.VendorDS">
            <summary>
            This class implements standard business logic and operations for Vendor entity.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorDS.#ctor(ewApps.AppPortal.Data.IVendorRepository,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.AppPortal.DS.IQConfigurationDS)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="repository"></param>
            <param name="sessionmanager"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorDS.GetVendorConfigurationDetailAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="buspartnertenantid"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.VendorPaymentInvoiceDS">
            <summary>
            A wrapper class contains method to get payment and vendor invoice list.    
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorPaymentInvoiceDS.#ctor(ewApps.AppPortal.DS.IBusinessDS,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS,ewApps.Core.DMService.IEntityThumbnailDS,Microsoft.Extensions.Logging.ILogger{ewApps.AppPortal.DS.VendorPaymentInvoiceDS})">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorPaymentInvoiceDS.GetInvoiceListByTenantAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get invoice list by tenant id. allcancelinvoices
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorPaymentInvoiceDS.GetInvoiceByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice by id.
            </summary>
            <param name="invoiceId">Unique invoice id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorPaymentInvoiceDS.GetInvoiceListByVendorAsync(ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get customer invoices by customer partner tenantid and filter by date.
            </summary>
            <param name="filter"></param>
            <param name="token"></param>
            <returns>retun list of invoices.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorPaymentInvoiceDS.GetInvoiceAttachmentListByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice attachment list.
            </summary>
            <param name="invoiceId">Unique invoiceId id.</param>
            <param name="token"></param>
            <returns>return attachment list.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorPaymentInvoiceDS.GetPaymentHistoryByInvoiceAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets Payment history by invoice.
            </summary>
            <param name="invoiceId">filter by invoice.</param>
            <param name="token">For cancellation</param>
            <returns>IList of Payment entities</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendorSignUpDS.#ctor(ewApps.AppPortal.DS.IVendorDS,ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.Data.IUnitOfWork,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings})">
            <summary>
            Initialinzing local variables .
            </summary>
            <param name="customerDS"></param>
            <param name="unitOfWork"></param>
            <param name="appSettings"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ewApps.AppPortal.DS.VendorSignUpDS.VendorSignUpAsync(System.Collections.Generic.List{ewApps.AppPortal.DTO.VendorSignUpReqDTO},System.Threading.CancellationToken)" -->
        <member name="T:ewApps.AppPortal.DS.VendTenantUserDS">
            <summary>
            This class implements standard business logic and operations for Vendor TenantUser entity.
            </summary>   
        </member>
        <member name="M:ewApps.AppPortal.DS.VendTenantUserDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.IPublisherDS,ewApps.AppPortal.DS.IBusinessDS,ewApps.AppPortal.DS.IQVendorAndUserDS,ewApps.AppPortal.DS.IVendorNotificationHandler,ewApps.AppPortal.DS.IQVendorAppDS)">
            <summary>
            Initialinzing local variables
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendTenantUserDS.ForgotPasswordAsync(ewApps.AppPortal.DTO.ForgotPasswordDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendTenantUserDS.GetAllVendSetupVendorUsersAsync(System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.VendTenantUserDS.GetTenantUserAndAppDetails(System.Guid,System.Guid,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.ViewSettingsDS.#ctor(ewApps.AppPortal.Data.IViewSettingsRepository,ewApps.AppPortal.Data.IUnitOfWork,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.ViewSettingsDS"/> class with its dependencies.
            </summary>
            <param name="viewSettingsRepository">An instance of <see cref="T:ewApps.AppPortal.Data.IViewSettingsRepository"/> to communicate with storage.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.ViewSettingsDS.AddUpdateViewSettings(ewApps.AppPortal.DTO.ViewSettingDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.BAPurchaseOrderDS">
            <summary>
            This class defines business purchase order entity operations for business tenant.
            </summary>
            <seealso cref="T:ewApps.AppPortal.DS.IBAPurchaseOrderDS" />
        </member>
        <member name="M:ewApps.AppPortal.DS.BAPurchaseOrderDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BAPurchaseOrderDS"/> class.
            </summary>
            <param name="userSessionManager">The user session manager.</param>
            <param name="options">The app setting options.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BAPurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BAPurchaseOrderDS.GetPurchaseOrderDetailByPOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAASNDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BusBAASNDS"/> class.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAASNDS.GetASNListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAASNDS.GetASNDetailByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAASNDS.GetVendorASNListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAASNDS.GetVendorASNDetailByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusBAContractDS">
            <summary>
            This class defines contract entity operations for business tenant.
            </summary>
            <seealso cref="T:ewApps.AppPortal.DS.IBusBAContractDS" />
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAContractDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BusBAContractDS"/> class.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAContractDS.GetContractDetailByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAContractDS.GetContractListByBusinessIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBADeliveryDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BusBADeliveryDS"/> class.
            </summary>
            <param name="userSessionManager">The user session manager.</param>
            <param name="options">The app setting options.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBADeliveryDS.GetDeliveryListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBADeliveryDS.GetDeliveryItemNameListByDeliveryIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery item name list by delivery id.
            </summary>
            <param name="deliveryId">The delivery to find delivery items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of delivery item name list that matches provided delivery id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAItemMasterDS.AddItemMasterByBusinessAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add Item Master 
            </summary>
            <param name="httpRequest"></param>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBAItemMasterDS.UpdateItemMasterByBusinessPaymentAppAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update item master
            </summary>
            <param name="httpRequest"></param>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.BusBASalesOrderDS">
            <summary>
            This class defines business sales order entity operations for business tenant.
            </summary>
            <seealso cref="T:ewApps.AppPortal.DS.IBusBASalesOrderDS" />
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBASalesOrderDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BusBASalesOrderDS"/> class.
            </summary>
            <param name="userSessionManager">The user session manager.</param>
            <param name="options">The app setting options.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBASalesOrderDS.GetSalesQuotationListByBusinessTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBASalesOrderDS.GetSalesQuotationDetailBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation  by SalesQuotation id.
            </summary>
            <param name="salesQuotationId">The delivery to find SalesQuotation items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of SalesQuotation item name list that matches provided SalesQuotation id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBASalesOrderDS.GetSalesOrderDetailBySOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBASalesQuotationDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BusBASalesQuotationDS"/> class.
            </summary>
            <param name="userSessionManager">The user session manager.</param>
            <param name="options">The app setting options.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBASalesQuotationDS.GetSalesQuotationListByBusinessTenantIdAsync(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation  by SalesQuotation id.
            </summary>
            <param name="salesQuotationId">The delivery to find SalesQuotation items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of SalesQuotation item name list that matches provided SalesQuotation id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusUserPreferenceDS.AddPaymentPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the payment preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusUserPreferenceDS.AddBEPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the be preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.BusUserPreferenceDS.AddAPPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the ap preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="appId">The application identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBAASNDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.CustBAASNDS"/> class.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.CustBAContractDS">
            <summary>
            This class defines contract entity operations for business tenant.
            </summary>
            <seealso cref="T:ewApps.AppPortal.DS.IBusBAContractDS" />
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBAContractDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BusBAContractDS"/> class.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBAContractDS.GetContractDetailByContractIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBAContractDS.GetContractListByBusinessIdAsyncForCust(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBADeliveryDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BusBADeliveryDS"/> class.
            </summary>
            <param name="userSessionManager">The user session manager.</param>
            <param name="options">The app setting options.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBADeliveryDS.GetDeliveryListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.CustBASalesOrderDS">
            <summary>
            This class defines business sales order entity operations for business tenant.
            </summary>
            <seealso cref="T:ewApps.AppPortal.DS.IBusBASalesOrderDS" />
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesOrderDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.BusBASalesOrderDS"/> class.
            </summary>
            <param name="userSessionManager">The user session manager.</param>
            <param name="options">The app setting options.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesOrderDS.GetSalesQuotationListByBusinessTenantIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesOrderDS.GetSalesQuotationDetailBySalesQuotationIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation  by SalesQuotation id.
            </summary>
            <param name="salesQuotationId">The delivery to find SalesQuotation items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of SalesQuotation item name list that matches provided SalesQuotation id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesOrderDS.GetSalesOrderDetailBySOIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesOrderDS.AddSalesOrderWithItemAsync(ewApps.AppPortal.DTO.CustBASalesOrderAddDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesOrderDS.UpdateSalesOrderWithItemAsync(ewApps.AppPortal.DTO.CustBASalesOrderUpdateDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesQuotationDS.#ctor(ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Options.IOptions{ewApps.AppPortal.Common.AppPortalAppSettings},ewApps.AppPortal.DS.INotesDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.CustBASalesQuotationDS"/> class.
            </summary>
            <param name="userSessionManager">The user session manager.</param>
            <param name="options">The app setting options.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesQuotationDS.GetSalesQuotationListByPartnerTenantIdAsyncForCust(System.Guid,ewApps.AppPortal.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation  by SalesQuotation id.
            </summary>
            <param name="salesQuotationId">The delivery to find SalesQuotation items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of SalesQuotation item name list that matches provided SalesQuotation id.</returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustBASalesQuotationDS.AddSalesQuotationWithItemAsync(ewApps.AppPortal.DTO.CustBASalesQuotationAddDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustUserPreferenceDS.AddPaymentPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the payment preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustUserPreferenceDS.AddBEPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the be preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="userSessionID">The user session identifier.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.CustUserPreferenceDS.AddAPPrefValue(System.Guid,System.Guid,System.Guid,System.Guid,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Adds the ap preference value.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="appId">The application identifier.</param>
            <param name="createdBy">The created by.</param>
            <param name="emailPreference">The email preference.</param>
            <param name="smsPreference">The SMS preference.</param>
            <param name="asPreference">As preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="F:ewApps.AppPortal.DS.CustomerSupportTicketDSNew._userSessionDS">
            <summary>
            /////////////////////////////////////////////////////////////////////////////////////////////////
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerSupportTicketDSNew.AddCustomerSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerSupportTicketDSNew.UpdateCustomerSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ICustomerSupportTicketDSNew.GetCustomerMyTicketList(System.Guid,System.Guid,System.Nullable{System.Guid},System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="tenantId"></param>
            <param name="creatorId"></param>
            <param name="partnerId"></param>
            <param name="onlyDeleted"></param>
            <param name="appKey"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.SupportNotificationDTO">
            <summary>
            This DTO is collection of the data required to genarate support notifications.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.SupportNotificationDTO.SupportTicket">
            <summary>
            Support ticket.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.SupportNotificationDTO.SupportCommentDTO">
            <summary>
            Support comment.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.SupportNotificationDTO.UserSession">
            <summary>
            Support comment.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.SupportNotificationDTO.PublisherName">
            <summary>
            Support comment.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.SupportNotificationDTO.AppId">
            <summary>
            Support comment.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.SupportNotificationDTO.AppName">
            <summary>
            Support comment.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.SupportNotificationDTO.IsPublisherAssinged">
            <summary>
            Support comment.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.SupportNotificationDTO.NotificationEventData">
            <summary>
            Notifaication related data.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.DeeplinkActionParameterAndBranchKeyDTO">
            <summary>
            This DTO is collection of the data about deeplink.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.DeeplinkActionParameterAndBranchKeyDTO.BranchKey">
            <summary>
            Branch key.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.DeeplinkActionParameterAndBranchKeyDTO.DeepLinkAction">
            <summary>
            Deeplink action string to be set in deeplink.
            </summary>
        </member>
        <member name="P:ewApps.AppPortal.DS.DeeplinkActionParameterAndBranchKeyDTO.DeeplinkParametersList">
            <summary>
            Deeplink parameter string list to be set in deeplink.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.SupportNotificationEventEnum">
            <summary>
            This class provides support notification events.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.SupportNotificationEventEnum.AddLevel1Ticket">
            <summary>
            Add Level1 Tickets.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.SupportNotificationEventEnum.AddLevel2Ticket">
            <summary>
            Add level2 Tickets.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.SupportNotificationEventEnum.TicketIsAssigned">
            <summary>
            Customer Ticket Forwarded To Publisher.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.SupportNotificationEventEnum.TicketStatusChanged">
            <summary>
            Ticket status changed.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.SupportNotificationEventEnum.TicketReassigned">
            <summary>
            Ticket is reassigned.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.SupportNotificationEventEnum.TicketPriorityChanged">
            <summary>
            Ticket Priority is changed.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.SupportNotificationEventEnum.TicketNewCommentAdded">
            <summary>
            New Comment added in Ticket.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.SupportNotificationEventEnum.TicketNewAttachmentAdded">
            <summary>
            New Attachment added in Ticket.
            </summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.ISupportNotificationHandler">
            <summary>Interface exposing Support notification service</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationHandler.AddLevel1TicketAsync(ewApps.AppPortal.DS.SupportNotificationDTO)">
            <summary>
            Notification handler for adding business partner support ticket.
            </summary>
            <param name="supportNotificationDTO"> Contains all the data required for notifications.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationHandler.AddLevel2TicketAsync(ewApps.AppPortal.DS.SupportNotificationDTO)">
            <summary>
            Notification handler for adding business support ticket.
            </summary>
            <param name="supportNotificationDTO"> Contains all the data required for notifications.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationHandler.TicketIsAssingedAsync(ewApps.AppPortal.DS.SupportNotificationDTO)">
            <summary>
            Notification handler for adding business support ticket.
            </summary>
            <param name="supportNotificationDTO"> Contains all the data required for notifications.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationHandler.TicketStatusIsChangedAsync(ewApps.AppPortal.DS.SupportNotificationDTO)">
            <summary>
            Notification handler for changing the status of support ticket.
            </summary>
            <param name="supportNotificationDTO"> Contains all the data required for notifications.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationHandler.TicketIsReassingedAsync(ewApps.AppPortal.DS.SupportNotificationDTO)">
            <summary>
            Notification handler for changing the assingnee of support ticket.
            </summary>
            <param name="supportNotificationDTO"> Contains all the data required for notifications.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationHandler.TicketPriorityIsChangedAsync(ewApps.AppPortal.DS.SupportNotificationDTO)">
            <summary>
            Notification handler for changing the priority of support ticket.
            </summary>
            <param name="supportNotificationDTO"> Contains all the data required for notifications.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationHandler.CommentIsAddToTicketAsync(ewApps.AppPortal.DS.SupportNotificationDTO)">
            <summary>
            Notification handler for adding comments to the support ticket.
            </summary>
            <param name="supportNotificationDTO"> Contains all the data required for notifications.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationHandler.AttachmentIsAddedToTicketAsync(ewApps.AppPortal.DS.SupportNotificationDTO)">
            <summary>
            Notification handler for adding attachment to the support ticket.
            </summary>
            <param name="supportNotificationDTO"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService">
            <summary>Interface exposing Support notification receipent service</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService.PartnerAddTicketNotificationRecepientList(System.Guid,System.Guid)">
            <summary>
            Get all the user recepients for the partner ticket.
            </summary>   
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService.BusinessAddTicketNotificationRecepientList">
            <summary>
            Get all the user recepients for the business ticket.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService.CustomerTicketForwardedToPublisherNotificationReceipentList">
            <summary>
            Get all the user recepients for the ticket forwarded to publisher.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService.TicketStatusChangedNotificationReceipentList(System.Guid,System.Guid,System.Guid,System.Boolean,System.Int32)">
            <summary>
            Get all the user recepients for the ticket status is changed.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService.TicketPriorityChangedNotificationReceipentList(System.Guid,System.Guid,System.Guid,System.Boolean,System.Int32)">
            <summary>
            Get all the user recepients for the ticket priority is changed.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService.TicketReassingedNotificationReceipentList(System.Guid,System.Guid,System.Guid,System.Boolean,System.Int32)">
            <summary>
            Get all the user recepients for the ticket is reassigned.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService.TicketNewCommentAddedNotificationReceipentList(System.Guid,System.Guid,System.Guid,System.Boolean,System.Int32)">
            <summary>
            Get all the user recepients for the ticket new comment added.
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="isPublisherAssigned"></param>
            <param name="appUserId"></param>
            <param name="supportLevel"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.ISupportNotificationReceipentDataService.TicketNewAttachmentAddedNotificationReceipentList(System.Guid,System.Guid,System.Guid,System.Boolean,System.Int32)">
            <summary>
             Get all the user recepients for the ticket new attachment added.
            </summary>
            <param name="tenantId"></param>
            <param name="appId"></param>
            <param name="appUserId"></param>
            <param name="isPublisherAssigned"></param>
            <param name="supportLevel"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.ISupportNotificationService">
            <summary>Interface exposing Support notification service</summary>
        </member>
        <member name="T:ewApps.AppPortal.DS.SupportNotificationService">
            <summary>Support notification service implementing all the abstract methods of base notification service.</summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.#ctor(ewApps.AppPortal.DS.ISupportNotificationReceipentDataService,ewApps.Core.EmailService.IEmailService,ewApps.Core.SMSService.ISMSService,Microsoft.Extensions.Options.IOptions{ewApps.Core.NotificationService.NotificationAppSettings},Microsoft.Extensions.Logging.ILogger{ewApps.Core.NotificationService.NotificationService{ewApps.Core.NotificationService.NotificationRecipient}})">
            <summary>
            Initilize local members.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>
            Generates Deeplink payload by the data given in notification payload.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetEmailPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generates Push payload by the data given in notification payload and USerDataRow.
            </summary>
            <param name="notificationPayload"></param>
            <param name="recepientRow"></param>
            <param name="eventXMLData"></param>
            <param name="hasLinkError"></param>
            <param name="xmlArguments"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.SetDeeplinkResultInNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.DeeplinkServices.DeeplinkResultSet)">
            <summary></summary>
            <param name="notificationPayload"></param>
            <param name="deeplinkResultSet"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.AddBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <summary></summary>
            <param name="userDataRow"></param>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GenerateASNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.DateTime,System.Int64,System.Int32,System.String)">
            <summary></summary>
            <param name="recepientDataRow"></param>
            <param name="payload"></param>
            <param name="deliveryTime"></param>
            <param name="syncRowId"></param>
            <param name="badgeCount"></param>
            <param name="XMLData"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <summary></summary>
            <param name="userDataRow"></param>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetRecipientList(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>Get recepiant list</summary>
            <param name="payload">Notification payload</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetSyncRowId(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary></summary>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetXSLArgumentsForEmail(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary>Get email xml argument based on event identifier</summary>
            <param name="userDataRow"></param>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetXSLArgumentsForPush(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <summary></summary>
            <param name="userDataRow"></param>
            <param name="payload"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.ValidateNotificationData(System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Validation data about notification</summary>
            <param name="moduleId"></param>
            <param name="eventId"></param>
            <param name="eventInfo"></param>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetBranchKey(System.Object)">
            <summary>Get branch key on the basis of decision parameters.</summary>
            <param name="decisionParameters">Set of information to make decision about branch key, deeplink actions and parameters.</param>
            <returns>Returns a portal wise branch key, deeplink actions and parameters in form of <see cref="!:Dictionary&lt;System.Int32, TValue&gt;"/> Dictionary&lt;int,object&gt;. Key is portal type and value is of type <see cref="!:"/> </returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetEmailXsltFile(ewApps.AppPortal.DS.SupportNotificationEventEnum,System.String)">
            <summary>Gets the email XSLT file.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="regionLanguage">The region language.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.SupportNotificationService.GetXSLTemplateFileName(ewApps.AppPortal.DS.SupportNotificationEventEnum)">
            <summary>Gets the email file name .</summary>
            <param name="eventNumber">The event identifier.</param>
            <returns>file name of the xslt file. </returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.AddCustomerSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.UpdateCustomerSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.GetCustomerMyTicketList(System.Guid,System.Guid,System.Nullable{System.Guid},System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="tenantId"></param>
            <param name="creatorId"></param>
            <param name="partnerId"></param>
            <param name="onlyDeleted"></param>
            <param name="appKey"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.AddBusinessSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.UpdateBusinessSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.GetBusinessMyTicketList(System.Guid,System.Guid,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="tenantId"></param>
            <param name="creatorId"></param>
            <param name="onlyDeleted"></param>
            <param name="appKey"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.SupportTicketAssignedToLevel3(System.Guid,System.Int32)">
            <summary>
            
            </summary>
            <param name="supportTicketId"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.GetSupportTicketAssignedToLevel2List(System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="includeDeleted"></param>
            <param name="appKey"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.GetSupportTicketAssignedToLevel2BusinessList(System.Boolean,System.Int32,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="includeDeleted"></param>
            <param name="generationLevel"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPaymentSupportTicketDSNew.GetSupportTicketAssignedToLevel2CustomerList(System.Boolean,System.Int32,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="includeDeleted"></param>
            <param name="generationLevel"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.AppPortal.DS.PaymentNotificationEvent">
            <summary>
            enum for defining the event of the paymnet notification.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.SetPasswordBusinessUserInvitationEmail">
            <summary>
            Business User set password
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.SetPasswordPrimaryPartnerUserInvitationEmail">
            <summary>
            Primary Business partner User set password
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.SetPasswordPartnerUserInvitationEmail">
            <summary>
            Business partner User set password
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.BusinessForgotPasswordEmail">
            <summary>
            Business User forgot password
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.BusinessPartnerForgotPasswordEmail">
            <summary>
            Business partner User forgot password
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.InvoiceAdded">
            <summary>
            New invoice is added by the business user.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.InvoiceDeleted">
            <summary>
            Invoice is deleted by the business user.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.PaymentDone">
            <summary>
            Payment is done by the partner user either partial or full.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.PaymentVoid">
            <summary>
            Payment made by partner is void by business.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.PaymentRefund">
            <summary>
            Payment made by partner is refunded by business.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.SystemCancelRefundForBusiness">
            <summary>
            System cancel the refund.
            </summary>
        </member>
        <member name="F:ewApps.AppPortal.DS.PaymentNotificationEvent.SystemCancelRefundForBusinessPartner">
            <summary>
            System cancel the refund.
            </summary>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformSupportTicketDSNew.UpdatePlatformSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="supportTicketDTO"></param>
            <param name="documentModel"></param>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformSupportTicketDSNew.GetSupportTicketAssignedToLevel4List(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="includeDeleted"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.IPlatformSupportTicketDSNew.GetSupportTicketDetailById(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="supportId"></param>
            <param name="includeDeleted"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSupportTicketDSNew.#ctor(ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.AppPortal.DS.ISupportCommentDS,ewApps.AppPortal.DS.ILevelTransitionHistoryDS,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.Core.DMService.IDMDocumentDS,ewApps.AppPortal.DS.ISupportTicketAssigneeHelper,ewApps.AppPortal.Data.ISupportTicketRepository)">
            <summary>Initializes a new instance of the <see cref="!:PaymentSupportTicketDS"/> class member variables and dependencies..</summary>
            <param name="identityDS">An instance of <see cref="!:IIdentityDS"/> to generate system generated numbers..</param>
            <param name="userSessionDS">An instance of <see cref="T:ewApps.Core.UserSessionService.IUserSessionManager"/> to get requester user's information.</param>   
            <param name="supportCommentDS">An instance of <see cref="T:ewApps.AppPortal.DS.ISupportCommentDS"/> to execute support comment related operations.</param>
            <param name="levelTransitionDS">An instance of <see cref="T:ewApps.AppPortal.DS.ILevelTransitionHistoryDS"/> to execute level/status related operations.</param>
            <param name="userSessionManager">The user session manager.</param>       
            <param name="cacheService">The cache service.</param>
            <param name="documentDS">An instance of <see cref="T:ewApps.Core.DMService.IDMDocumentDS"/> to execute document related operations.</param>
            <param name="supportTicketAssigneeHelper">An instance of <see cref="T:ewApps.AppPortal.DS.ISupportTicketAssigneeHelper"/> to get support ticket assignee information.</param>
            <param name="supportTicketRepository">An instance of <see cref="T:ewApps.AppPortal.Data.ISupportTicketRepository"/> to execute support ticket related operations.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSupportTicketDSNew.UpdatePlatformSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.AppPortal.DS.PlatformSupportTicketDSNew.GetSupportTicketAssignedToLevel4List(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.AppPortal.DS.PublisherSupportTicketDSNew">
            <summary>
            This class provides all support ticket operations related to Level 3 (i.e. Publisher) application.
            </summary>
            <seealso cref="!:ewApps.AppPortal.DS.SupportTicketDS" />
            <seealso cref="!:ewApps.AppPortal.DS.IPublisherSupportTicketDS" />
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherSupportTicketDSNew.#ctor(ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.AppPortal.Data.ISupportTicketRepository,ewApps.AppPortal.DS.ISupportCommentDS,ewApps.AppPortal.DS.ILevelTransitionHistoryDS,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.Core.DMService.IDMDocumentDS,ewApps.AppPortal.DS.ISupportTicketAssigneeHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.AppPortal.DS.IPublisherSupportTicketDSNew"/> class member variables and dependencies..
            </summary>
            <param name="identityDS">An instance of <see cref="!:IIdentityDS"/> to generate system generated numbers..</param>
            <param name="userSessionDS">An instance of <see cref="T:ewApps.Core.UserSessionService.IUserSessionManager"/> to get requester user's information.</param>
            <param name="supportTicketRepository">An instance of <see cref="T:ewApps.AppPortal.Data.ISupportTicketRepository"/> to execute support ticket related operations.</param>
            <param name="supportCommentDS">An instance of <see cref="T:ewApps.AppPortal.DS.ISupportCommentDS"/> to execute support comment related operations.</param>
            <param name="levelTransitionDS">An instance of <see cref="T:ewApps.AppPortal.DS.ILevelTransitionHistoryDS"/> to execute level/status related operations.</param>
            <param name="userSessionManager">The user session manager.</param>
            <param name="cacheService">The cache service.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:ewApps.AppPortal.DS.PublisherSupportTicketDSNew.UpdatePublisherSupportTicket(ewApps.AppPortal.DTO.SupportAddUpdateDTO,ewApps.Core.DMService.AddUpdateDocumentModel,Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc/>
        </member>
    </members>
</doc>
