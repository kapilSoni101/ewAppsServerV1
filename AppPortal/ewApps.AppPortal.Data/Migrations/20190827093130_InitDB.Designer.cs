// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ewApps.AppPortal.Data;

namespace ewApps.AppPortal.Data.Migrations
{
    [DbContext(typeof(AppPortalDbContext))]
    [Migration("20190827093130_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ewApps.AppPortal.Entity.Business", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanUpdateCurrency");

                    b.Property<string>("ContactPersonDesignation")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonEmail")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonPhone")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int>("CurrencyCode");

                    b.Property<string>("DateTimeFormat");

                    b.Property<int>("DecimalPrecision");

                    b.Property<string>("DecimalSeperator")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("Deleted");

                    b.Property<string>("GroupSeperator")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("GroupValue")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Language")
                        .HasMaxLength(100);

                    b.Property<Guid>("LogoThumbnailId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PrintLabelLayout")
                        .HasMaxLength(100);

                    b.Property<string>("SizeUnit")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("ThemeId");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Website")
                        .HasMaxLength(100);

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Business","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.BusinessAddress", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressStreet1")
                        .HasMaxLength(100);

                    b.Property<string>("AddressStreet2")
                        .HasMaxLength(100);

                    b.Property<string>("AddressStreet3")
                        .HasMaxLength(100);

                    b.Property<int>("AddressType");

                    b.Property<Guid>("BusinessId");

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Label")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<string>("State")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("BusinessAddress","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BusinessPartnerTenantId");

                    b.Property<bool>("CanUpdateCurrency");

                    b.Property<bool>("Configured");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int>("CurrencyCode");

                    b.Property<string>("DateTimeFormat");

                    b.Property<int>("DecimalPrecision");

                    b.Property<string>("DecimalSeperator");

                    b.Property<bool>("Deleted");

                    b.Property<string>("GroupSeperator");

                    b.Property<string>("GroupValue");

                    b.Property<string>("Iden");

                    b.Property<string>("Language");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TimeZone");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("Customer","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.LevelTransitionHistory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppKey")
                        .IsRequired();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<int>("SourceLevel");

                    b.Property<short>("Status");

                    b.Property<Guid>("SupportId");

                    b.Property<int>("TargetLevel");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("LevelTransitionHistory","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Platform", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanUpdateCurrency");

                    b.Property<string>("Copyright")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int>("CurrencyCode");

                    b.Property<string>("DateTimeFormat")
                        .HasMaxLength(100);

                    b.Property<int>("DecimalPrecision");

                    b.Property<string>("DecimalSeperator")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("Deleted");

                    b.Property<string>("GroupSeperator")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("GroupValue")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Language")
                        .HasMaxLength(20);

                    b.Property<Guid>("LogoThumbnailId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PoweredBy")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("Platform","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Portal", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PortalKey")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("Portal","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.PortalAppLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("PortalId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("PortalAppLinking","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Publisher", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<bool>("ApplyPoweredBy");

                    b.Property<bool>("CanUpdateCopyright");

                    b.Property<bool?>("CanUpdateCurrency");

                    b.Property<string>("ContactPersonDesignation")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonEmail")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonPhone")
                        .HasMaxLength(20);

                    b.Property<string>("Copyright")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int?>("CurrencyCode");

                    b.Property<bool>("CustomizedCopyright");

                    b.Property<bool>("CustomizedLogoThumbnail");

                    b.Property<string>("DateTimeFormat")
                        .HasMaxLength(20);

                    b.Property<int?>("DecimalPrecision");

                    b.Property<string>("DecimalSeperator")
                        .HasMaxLength(20);

                    b.Property<bool>("Deleted");

                    b.Property<string>("GroupSeperator")
                        .HasMaxLength(20);

                    b.Property<string>("GroupValue")
                        .HasMaxLength(20);

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("InactiveComment")
                        .HasMaxLength(4000);

                    b.Property<string>("Language")
                        .HasMaxLength(20);

                    b.Property<Guid>("LogoThumbnailId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PoweredBy")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Website")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Publisher","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.PublisherAddress", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressStreet1")
                        .HasMaxLength(100);

                    b.Property<string>("AddressStreet2")
                        .HasMaxLength(100);

                    b.Property<string>("AddressStreet3")
                        .HasMaxLength(100);

                    b.Property<int>("AddressType");

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Label")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<Guid>("PublisherId");

                    b.Property<string>("State")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("PublisherAddress","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.PublisherAppSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("AppId");

                    b.Property<string>("CopyrightsText");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Customized");

                    b.Property<bool>("Deleted");

                    b.Property<string>("InactiveComment");

                    b.Property<string>("Name");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("ThemeId");

                    b.Property<Guid?>("ThumbnailId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("PublisherAppSetting","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.SupportComment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommentText")
                        .IsRequired();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CreatorId");

                    b.Property<short>("CreatorLevel");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("SupportId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SupportComment","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.SupportGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("AppKey")
                        .IsRequired();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<int>("Level");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SupportGroup","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.SupportTicket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppKey")
                        .IsRequired();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CreatorId");

                    b.Property<short>("CurrentLevel");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<short>("GenerationLevel");

                    b.Property<string>("IdentityNumber")
                        .IsRequired();

                    b.Property<short>("Priority");

                    b.Property<short>("Status");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SupportTicket","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.TenantUserAppPreference", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<long>("EmailPreference");

                    b.Property<long>("SMSPreference");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("TenantUserAppPreference","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.TokenInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AppId");

                    b.Property<string>("AppKey")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<string>("TokenData")
                        .HasMaxLength(4000);

                    b.Property<int>("TokenType");

                    b.HasKey("ID");

                    b.ToTable("TokenInfo","ap");
                });
#pragma warning restore 612, 618
        }
    }
}
