// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ewApps.AppPortal.Data;

namespace ewApps.AppPortal.Data.Migrations
{
    [DbContext(typeof(AppPortalDbContext))]
    [Migration("20190902120152_initapppor7")]
    partial class initapppor7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ewApps.AppPortal.Entity.Business", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanUpdateCurrency");

                    b.Property<string>("ContactPersonDesignation")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonEmail")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonPhone")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int>("CurrencyCode");

                    b.Property<string>("DateTimeFormat");

                    b.Property<int>("DecimalPrecision");

                    b.Property<string>("DecimalSeperator")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("Deleted");

                    b.Property<string>("GroupSeperator")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("GroupValue")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Language")
                        .HasMaxLength(100);

                    b.Property<Guid>("LogoThumbnailId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PrintLabelLayout")
                        .HasMaxLength(100);

                    b.Property<string>("SizeUnit")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("ThemeId");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Website")
                        .HasMaxLength(100);

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Business","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.BusinessAddress", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressStreet1")
                        .HasMaxLength(100);

                    b.Property<string>("AddressStreet2")
                        .HasMaxLength(100);

                    b.Property<string>("AddressStreet3")
                        .HasMaxLength(100);

                    b.Property<int>("AddressType");

                    b.Property<Guid>("BusinessId");

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Label")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<string>("State")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("BusinessAddress","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BusinessPartnerTenantId");

                    b.Property<bool>("CanUpdateCurrency");

                    b.Property<bool>("Configured");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int>("CurrencyCode");

                    b.Property<string>("DateTimeFormat");

                    b.Property<int>("DecimalPrecision");

                    b.Property<string>("DecimalSeperator");

                    b.Property<bool>("Deleted");

                    b.Property<string>("GroupSeperator");

                    b.Property<string>("GroupValue");

                    b.Property<string>("IdentityNumber");

                    b.Property<string>("Language");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TimeZone");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("Customer","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.LevelTransitionHistory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppKey")
                        .IsRequired();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<int>("SourceLevel");

                    b.Property<short>("Status");

                    b.Property<Guid>("SupportId");

                    b.Property<int>("TargetLevel");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("LevelTransitionHistory","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Platform", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanUpdateCurrency");

                    b.Property<string>("Copyright")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int>("CurrencyCode");

                    b.Property<string>("DateTimeFormat")
                        .HasMaxLength(100);

                    b.Property<int>("DecimalPrecision");

                    b.Property<string>("DecimalSeperator")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("Deleted");

                    b.Property<string>("GroupSeperator")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("GroupValue")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Language")
                        .HasMaxLength(20);

                    b.Property<Guid>("LogoThumbnailId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PoweredBy")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("Platform","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Portal", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PortalKey")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("Portal","ap");

                    b.HasData(
                        new { ID = new Guid("5a066e57-73c2-4fae-a7bb-0be3abdfb35c"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "Platform Portal", PortalKey = "PlatPortal", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 1 },
                        new { ID = new Guid("0ac1701b-3d90-454c-80a9-7cf062109795"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "Publisher Portal", PortalKey = "PubPortal", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 2 },
                        new { ID = new Guid("31127b13-5be1-48b5-aa85-93a28682ef20"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "Business Portal", PortalKey = "BizPortal", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 3 },
                        new { ID = new Guid("0919810e-536c-42f5-a130-1cb62605508d"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "Customer Portal", PortalKey = "CustPortal", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 4 },
                        new { ID = new Guid("929632bc-0327-4b35-bbe6-cb7a2bfbc3bd"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "Vendor Portal", PortalKey = "VendorPortal", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 5 },
                        new { ID = new Guid("0fe68284-fbc8-472a-8efc-b7914c89a5e1"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "Employee Portal", PortalKey = "EmployeePortal", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 6 }
                    );
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.PortalAppLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("PortalId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("PortalAppLinking","ap");

                    b.HasData(
                        new { ID = new Guid("8bfbd8af-5f27-4eb9-a508-be87a84c7963"), AppId = new Guid("8ded3502-01e5-469a-909b-5424d50d00d6"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("5a066e57-73c2-4fae-a7bb-0be3abdfb35c"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("7c9a4607-9410-4e61-b4ab-f1d8df7305cc"), AppId = new Guid("67d09a6f-ce95-498c-bf69-33c7d38f9041"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("0ac1701b-3d90-454c-80a9-7cf062109795"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("0a826d78-14af-469f-8f78-9a7b068c574c"), AppId = new Guid("f4952ef3-f1bd-4621-a5f9-290fd09bc81b"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("31127b13-5be1-48b5-aa85-93a28682ef20"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("7a128e85-c2e2-4650-85bd-cc433a4e532e"), AppId = new Guid("8c6fa8ce-6b94-428f-95de-5ed8859260d2"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("31127b13-5be1-48b5-aa85-93a28682ef20"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("caf59a3e-fb1e-4fb9-8129-9383230477bb"), AppId = new Guid("6118a7ff-742b-25db-a9c1-8e252c39bb73"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("31127b13-5be1-48b5-aa85-93a28682ef20"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("a4e51eea-81dc-4345-b9b1-76262b5c4f0e"), AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("31127b13-5be1-48b5-aa85-93a28682ef20"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("803ea4b6-f380-4d9f-97b0-82faa212f48b"), AppId = new Guid("8c6fa8ce-6b94-428f-95de-5ed8859260d2"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("0919810e-536c-42f5-a130-1cb62605508d"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("4af1430a-468f-4e5b-9786-9e542dc9a14a"), AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("0919810e-536c-42f5-a130-1cb62605508d"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("2657f722-c6dd-44b7-8c3b-432ecf797cdc"), AppId = new Guid("6118a7ff-742b-25db-a9c1-8e252c39bb73"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("0919810e-536c-42f5-a130-1cb62605508d"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("5d404aad-7235-41f1-b760-bd414ed9e3fa"), AppId = new Guid("71d183b4-b17b-4458-92c9-a545ff775c13"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("929632bc-0327-4b35-bbe6-cb7a2bfbc3bd"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("a8e9a7c5-57d1-43a4-afd3-e70a8ce59608"), AppId = new Guid("6118a7ff-742b-25db-a9c1-8e252c39bb73"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("929632bc-0327-4b35-bbe6-cb7a2bfbc3bd"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("e1fbd5df-69e7-48d3-92ee-40f7fd9d2c99"), AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PortalId = new Guid("929632bc-0327-4b35-bbe6-cb7a2bfbc3bd"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Publisher", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<bool>("ApplyPoweredBy");

                    b.Property<bool>("CanUpdateCopyright");

                    b.Property<bool?>("CanUpdateCurrency");

                    b.Property<string>("ContactPersonDesignation")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonEmail")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPersonPhone")
                        .HasMaxLength(20);

                    b.Property<string>("Copyright")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int?>("CurrencyCode");

                    b.Property<bool>("CustomizedCopyright");

                    b.Property<bool>("CustomizedLogoThumbnail");

                    b.Property<string>("DateTimeFormat")
                        .HasMaxLength(20);

                    b.Property<int?>("DecimalPrecision");

                    b.Property<string>("DecimalSeperator")
                        .HasMaxLength(20);

                    b.Property<bool>("Deleted");

                    b.Property<string>("GroupSeperator")
                        .HasMaxLength(20);

                    b.Property<string>("GroupValue")
                        .HasMaxLength(20);

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("InactiveComment")
                        .HasMaxLength(4000);

                    b.Property<string>("Language")
                        .HasMaxLength(20);

                    b.Property<Guid>("LogoThumbnailId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PoweredBy")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Website")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Publisher","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.PublisherAddress", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressStreet1")
                        .HasMaxLength(100);

                    b.Property<string>("AddressStreet2")
                        .HasMaxLength(100);

                    b.Property<string>("AddressStreet3")
                        .HasMaxLength(100);

                    b.Property<int>("AddressType");

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Label")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<Guid>("PublisherId");

                    b.Property<string>("State")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("PublisherAddress","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.PublisherAppService", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("AppServiceAttributeId");

                    b.Property<Guid>("AppServiceId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("PublisherAppService","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.PublisherAppSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("AppId");

                    b.Property<string>("CopyrightsText");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Customized");

                    b.Property<bool>("Deleted");

                    b.Property<string>("InactiveComment");

                    b.Property<string>("Name");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("ThemeId");

                    b.Property<Guid?>("ThumbnailId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("PublisherAppSetting","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid?>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<long>("PermissionBitMask");

                    b.Property<string>("RoleKey")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("Role","ap");

                    b.HasData(
                        new { ID = new Guid("df435b1a-7dbd-4e8f-b0f9-c07ba6e84f80"), Active = true, AppId = new Guid("8ded3502-01e5-469a-909b-5424d50d00d6"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PermissionBitMask = 511L, RoleKey = "admin", RoleName = "Admin", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 1 },
                        new { ID = new Guid("fb8be172-2c7f-4f04-b40a-487fda92e323"), Active = true, AppId = new Guid("67d09a6f-ce95-498c-bf69-33c7d38f9041"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PermissionBitMask = 4095L, RoleKey = "admin", RoleName = "Admin", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 2 },
                        new { ID = new Guid("958d4943-124b-4467-b345-395dcd37e2fe"), Active = true, AppId = new Guid("f4952ef3-f1bd-4621-a5f9-290fd09bc81b"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PermissionBitMask = 3L, RoleKey = "admin", RoleName = "Admin", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 3 },
                        new { ID = new Guid("2fb520ad-6655-44eb-ba5f-c4abe5af01da"), Active = true, AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PermissionBitMask = 63L, RoleKey = "admin", RoleName = "Admin", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 4 }
                    );
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.RoleLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("RoleLinking","ap");

                    b.HasData(
                        new { ID = new Guid("0b03bbe7-b3f7-4978-9411-2b9cb8976579"), AppId = new Guid("8ded3502-01e5-469a-909b-5424d50d00d6"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, RoleId = new Guid("df435b1a-7dbd-4e8f-b0f9-c07ba6e84f80"), TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), TenantUserId = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.Support", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("IssueDesc")
                        .IsRequired();

                    b.Property<string>("PhoneNo");

                    b.Property<int>("Portaltype");

                    b.Property<int>("Status");

                    b.Property<Guid>("SupportId");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TicketNo");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("Support","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.SupportComment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommentText")
                        .IsRequired();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CreatorId");

                    b.Property<short>("CreatorLevel");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("SupportId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SupportComment","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.SupportGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("AppKey")
                        .IsRequired();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<int>("Level");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SupportGroup","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.SupportTicket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppKey")
                        .IsRequired();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CreatorId");

                    b.Property<short>("CurrentLevel");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<short>("GenerationLevel");

                    b.Property<string>("IdentityNumber")
                        .IsRequired();

                    b.Property<short>("Priority");

                    b.Property<short>("Status");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SupportTicket","ap");
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.TenantUserAppPreference", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<long>("EmailPreference");

                    b.Property<long>("SMSPreference");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("TenantUserAppPreference","ap");

                    b.HasData(
                        new { ID = new Guid("c31433d7-107d-4fc0-b30d-baaf22112635"), AppId = new Guid("8ded3502-01e5-469a-909b-5424d50d00d6"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, EmailPreference = 31L, SMSPreference = 0L, TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), TenantUserId = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.AppPortal.Entity.TokenInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AppId");

                    b.Property<string>("AppKey")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<string>("TokenData")
                        .HasMaxLength(4000);

                    b.Property<int>("TokenType");

                    b.HasKey("ID");

                    b.ToTable("TokenInfo","ap");
                });
#pragma warning restore 612, 618
        }
    }
}
