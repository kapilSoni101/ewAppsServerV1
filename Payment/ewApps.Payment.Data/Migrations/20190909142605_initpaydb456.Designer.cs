// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ewApps.Payment.Data;

namespace ewApps.Payment.Data.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    [Migration("20190909142605_initpaydb456")]
    partial class initpaydb456
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ewApps.Payment.Entity.Payment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("AmountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("AppServiceAttributeId");

                    b.Property<Guid>("AppServiceId");

                    b.Property<Guid>("BusinessId");

                    b.Property<string>("CheckImageBack")
                        .HasMaxLength(100);

                    b.Property<string>("CheckImageFront")
                        .HasMaxLength(100);

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("CustomerAccountNumber")
                        .HasMaxLength(100);

                    b.Property<int>("CustomerAccountType");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerRoutingNumber")
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("LastStatusUpdateDate");

                    b.Property<Guid>("LastTransactionStatusId");

                    b.Property<DateTime>("OriginationDate");

                    b.Property<Guid>("PartnerId");

                    b.Property<string>("Reason")
                        .HasMaxLength(100);

                    b.Property<string>("ReturnCode")
                        .HasMaxLength(20);

                    b.Property<string>("ReturnString")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("Type")
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("Payment","pay");
                });

            modelBuilder.Entity("ewApps.Payment.Entity.PaymentInvoiceLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("AmountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid>("PaymentId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("PaymentInvoiceLinking","pay");
                });

            modelBuilder.Entity("ewApps.Payment.Entity.PaymentLog", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientBrowser");

                    b.Property<string>("ClientIP");

                    b.Property<string>("ClientOS");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("PaymentId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("PaymentLog","pay");
                });

            modelBuilder.Entity("ewApps.Payment.Entity.RecurringPayment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerAccountId");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("EndDate");

                    b.Property<decimal>("InvoiceTax")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("NextPaymentdate");

                    b.Property<string>("OrderId")
                        .HasMaxLength(100);

                    b.Property<string>("Payload")
                        .HasMaxLength(4000);

                    b.Property<int>("RecurringPeriod");

                    b.Property<int>("RecurringTerms");

                    b.Property<int>("RemainingTermCount");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TermAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("RecurringPayment","pay");
                });

            modelBuilder.Entity("ewApps.Payment.Entity.RecurringPaymentLog", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<DateTime>("ProcessingDate");

                    b.Property<Guid>("RecurringPaymentId");

                    b.Property<DateTime>("ScheduledDate");

                    b.Property<int>("Status");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("RecurringPaymentLog","pay");
                });

            modelBuilder.Entity("ewApps.Payment.Entity.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid?>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<long>("PermissionBitMask");

                    b.Property<string>("RoleKey")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("Role","pay");

                    b.HasData(
                        new { ID = new Guid("6327a668-e7d7-451c-bf86-722f027d5d79"), Active = true, AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PermissionBitMask = 511L, RoleKey = "admin", RoleName = "Admin", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 3 }
                    );
                });

            modelBuilder.Entity("ewApps.Payment.Entity.RoleLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("RoleLinking","pay");
                });

            modelBuilder.Entity("ewApps.Payment.Entity.TenantUserAppPreference", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<long>("EmailPreference");

                    b.Property<long>("SMSPreference");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("TenantUserAppPreference","pay");
                });
#pragma warning restore 612, 618
        }
    }
}
