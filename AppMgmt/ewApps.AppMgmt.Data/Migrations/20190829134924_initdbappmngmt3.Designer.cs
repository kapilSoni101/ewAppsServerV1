// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ewApps.AppMgmt.Data;

namespace ewApps.AppMgmt.Data.Migrations
{
    [DbContext(typeof(AppMgmtDbContext))]
    [Migration("20190829134924_initdbappmngmt3")]
    partial class initdbappmngmt3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ewApps.AppMgmt.Entity.App", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("AppScope");

                    b.Property<int>("AppSubscriptionMode");

                    b.Property<bool>("Constructed");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("InactiveComment")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("ThemeId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("App","am");

                    b.HasData(
                        new { ID = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), Active = true, AppKey = "Pay", AppScope = 1, AppSubscriptionMode = 2, Constructed = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100001", InactiveComment = "", Name = "iSmartPayment", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("6118a7ff-742b-25db-a9c1-8e252c39bb73"), Active = true, AppKey = "Ship", AppScope = 1, AppSubscriptionMode = 2, Constructed = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100002", InactiveComment = "", Name = "iFastShipment", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("e5080257-c602-42cd-aedb-30b33757c382"), Active = true, AppKey = "Doc", AppScope = 1, AppSubscriptionMode = 2, Constructed = false, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100003", InactiveComment = "", Name = "Document", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("f629c9e6-93d8-4e6b-8050-26fd89e9af5c"), Active = true, AppKey = "Dsd", AppScope = 1, AppSubscriptionMode = 2, Constructed = false, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100004", InactiveComment = "", Name = "DSD", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("e4ecf0e7-1bc7-49d4-a95d-1bdb1b77715e"), Active = true, AppKey = "Report", AppScope = 1, AppSubscriptionMode = 2, Constructed = false, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100005", InactiveComment = "", Name = "Report and Dashboard", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("a33315c5-fd8b-45cd-99df-fbbeb88597f6"), Active = true, AppKey = "Pos", AppScope = 1, AppSubscriptionMode = 2, Constructed = false, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100006", InactiveComment = "", Name = "POS", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("4b643cfc-26d4-41f4-abda-a656682ceb50"), Active = true, AppKey = "Fixed", AppScope = 1, AppSubscriptionMode = 2, Constructed = false, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100007", InactiveComment = "", Name = "Fixed Assets", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("74d886db-ee46-41c2-acbe-9fdc7bd182fa"), Active = true, AppKey = "Crm", AppScope = 1, AppSubscriptionMode = 2, Constructed = false, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100008", InactiveComment = "", Name = "CRM", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("8c6fa8ce-6b94-428f-95de-5ed8859260d2"), Active = true, AppKey = "Cust", AppScope = 1, AppSubscriptionMode = 2, Constructed = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100009", InactiveComment = "", Name = "Customer App", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("71d183b4-b17b-4458-92c9-a545ff775c13"), Active = true, AppKey = "Vendor", AppScope = 1, AppSubscriptionMode = 2, Constructed = false, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100010", InactiveComment = "", Name = "Vendor App", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("f4952ef3-f1bd-4621-a5f9-290fd09bc81b"), Active = true, AppKey = "Biz", AppScope = 1, AppSubscriptionMode = 1, Constructed = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100011", InactiveComment = "", Name = "BusinessSetUp App", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("67d09a6f-ce95-498c-bf69-33c7d38f9041"), Active = true, AppKey = "Pub", AppScope = 1, AppSubscriptionMode = 1, Constructed = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100012", InactiveComment = "", Name = "Publisher App", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("8ded3502-01e5-469a-909b-5424d50d00d6"), Active = true, AppKey = "Plat", AppScope = 1, AppSubscriptionMode = 1, Constructed = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100013", InactiveComment = "", Name = "Platform App", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("f6ad4bf0-c302-4eb1-ab13-35ff9a832add"), Active = true, AppKey = "BankPay", AppScope = 2, AppSubscriptionMode = 2, Constructed = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IdentityNumber = "APP100014", InactiveComment = "", Name = "BankPayment", ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.AppService", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("ServiceKey")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("AppService","am");
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.AppServiceAccountDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountJson");

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("EntityId");

                    b.Property<int>("EntityType");

                    b.Property<Guid>("ServiceAttributeId");

                    b.Property<Guid>("ServiceId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("AppServiceAccountDetail","am");
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.AppServiceAttribute", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("AppServiceId");

                    b.Property<string>("AttributeKey")
                        .HasMaxLength(20);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("AppServiceAttribute","am");
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.AppUserTypeLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<int>("PartnerType");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("AppUserTypeLinking","am");

                    b.HasData(
                        new { ID = new Guid("9974f09e-ce64-460d-b1e9-7967dcc2ee00"), AppId = new Guid("5a066e57-73c2-4fae-a7bb-0be3abdfb35c"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 1 },
                        new { ID = new Guid("6db9d8c9-2a8b-4b7c-8dba-cda7338d1424"), AppId = new Guid("0ac1701b-3d90-454c-80a9-7cf062109795"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 2 },
                        new { ID = new Guid("f62a5cb5-36c9-43e7-8dfb-af92eb114712"), AppId = new Guid("31127b13-5be1-48b5-aa85-93a28682ef20"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 3 },
                        new { ID = new Guid("b21da138-837b-483a-bb95-0a7c19f02331"), AppId = new Guid("8c6fa8ce-6b94-428f-95de-5ed8859260d2"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 3 },
                        new { ID = new Guid("87d0b552-8973-4f28-a383-532611c5db06"), AppId = new Guid("6118a7ff-742b-25db-a9c1-8e252c39bb73"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 3 },
                        new { ID = new Guid("b43d29e0-28ab-4c4b-8293-8ad90bc83f29"), AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 3 },
                        new { ID = new Guid("67f40404-084c-4170-baca-9a6868f5b6c2"), AppId = new Guid("8c6fa8ce-6b94-428f-95de-5ed8859260d2"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 4 },
                        new { ID = new Guid("c8ae2650-f7f5-44a4-ac52-851f01e8ed5d"), AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 4 },
                        new { ID = new Guid("809cc1eb-2234-46b7-9829-dd66edac9b60"), AppId = new Guid("6118a7ff-742b-25db-a9c1-8e252c39bb73"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 4 },
                        new { ID = new Guid("b9e705cd-d5a3-44a8-9672-e916871f8d38"), AppId = new Guid("71d183b4-b17b-4458-92c9-a545ff775c13"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 5 },
                        new { ID = new Guid("14a88b03-da38-422e-a58f-ed71e2243445"), AppId = new Guid("6118a7ff-742b-25db-a9c1-8e252c39bb73"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 5 },
                        new { ID = new Guid("58b5ab4b-3921-42f3-8d44-600398d7c68d"), AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PartnerType = 0, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 5 }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.CustomerAppServiceLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("ServiceAttributeId");

                    b.Property<Guid>("ServiceId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("CustomerAppServiceLinking","am");
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.SubscriptionPlan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<double>("AdditionalPerUserPrice");

                    b.Property<int>("AlertFrequency");

                    b.Property<bool>("AllowCustomization");

                    b.Property<Guid>("AppId");

                    b.Property<bool>("AutoRenewal");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<int>("FreeUserLicenseCount");

                    b.Property<int>("GracePeriodInDays");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("NumberOfUsers");

                    b.Property<int>("PaymentCycle");

                    b.Property<string>("PlanName")
                        .HasMaxLength(100);

                    b.Property<int>("PlanSchedule");

                    b.Property<decimal>("PriceInDollar")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("decimal(18,5)");

                    b.Property<bool>("System");

                    b.Property<Guid>("TenantId");

                    b.Property<int>("Term");

                    b.Property<int>("TrialPeriodInDays");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SubscriptionPlan","am");

                    b.HasData(
                        new { ID = new Guid("b37eb8b9-11bf-402e-9048-f9d0a43a426b"), Active = true, AdditionalPerUserPrice = 0.0, AlertFrequency = 1, AllowCustomization = true, AppId = new Guid("8ded3502-01e5-469a-909b-5424d50d00d6"), AutoRenewal = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, FreeUserLicenseCount = 1, GracePeriodInDays = 58, IdentityNumber = "SS#1", NumberOfUsers = 1, PaymentCycle = 1, PlanName = "Trial Plan", PlanSchedule = 1, PriceInDollar = 0m, System = false, TenantId = new Guid("00000000-0000-0000-0000-000000000000"), Term = 15, TrialPeriodInDays = 30, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("d390a264-f0db-49ce-9415-daee1ed4b445"), Active = true, AdditionalPerUserPrice = 0.0, AlertFrequency = 1, AllowCustomization = true, AppId = new Guid("67d09a6f-ce95-498c-bf69-33c7d38f9041"), AutoRenewal = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, FreeUserLicenseCount = 1, GracePeriodInDays = 58, IdentityNumber = "SS#2", NumberOfUsers = 1, PaymentCycle = 1, PlanName = "Trial Plan", PlanSchedule = 1, PriceInDollar = 0m, System = false, TenantId = new Guid("00000000-0000-0000-0000-000000000000"), Term = 15, TrialPeriodInDays = 30, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("8d5e65ca-1b62-4bc3-b0f0-9b3703aabebf"), Active = true, AdditionalPerUserPrice = 0.0, AlertFrequency = 1, AllowCustomization = true, AppId = new Guid("f4952ef3-f1bd-4621-a5f9-290fd09bc81b"), AutoRenewal = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, FreeUserLicenseCount = 1, GracePeriodInDays = 58, IdentityNumber = "SS#6", NumberOfUsers = 1, PaymentCycle = 1, PlanName = "Trial Plan", PlanSchedule = 1, PriceInDollar = 0m, System = false, TenantId = new Guid("00000000-0000-0000-0000-000000000000"), Term = 15, TrialPeriodInDays = 30, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("98276e8b-78eb-4b87-bfff-1d20d82b446f"), Active = true, AdditionalPerUserPrice = 0.0, AlertFrequency = 1, AllowCustomization = true, AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), AutoRenewal = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, FreeUserLicenseCount = 1, GracePeriodInDays = 58, IdentityNumber = "SS#4", NumberOfUsers = 1, PaymentCycle = 1, PlanName = "Trial Plan", PlanSchedule = 1, PriceInDollar = 0m, System = false, TenantId = new Guid("00000000-0000-0000-0000-000000000000"), Term = 15, TrialPeriodInDays = 30, UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("29f50252-433f-4de9-8a4b-7a2360b4ee44"), Active = true, AdditionalPerUserPrice = 0.0, AlertFrequency = 2, AllowCustomization = true, AppId = new Guid("2b031b59-5276-589c-9d75-2a7ae1c799c8"), AutoRenewal = true, CreatedBy = new Guid("dab7edb0-cd13-4089-a96e-c52d76db4ba8"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, FreeUserLicenseCount = 1, GracePeriodInDays = 58, IdentityNumber = "SS#5", NumberOfUsers = 1, PaymentCycle = 1, PlanName = "Executive Plan", PlanSchedule = 1, PriceInDollar = 0m, System = false, TenantId = new Guid("00000000-0000-0000-0000-000000000000"), Term = 90, TrialPeriodInDays = 30, UpdatedBy = new Guid("49a36f27-c493-4f1e-94b7-6f9c660bc3ec"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.Tenant", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<string>("IdentityNumber")
                        .IsRequired();

                    b.Property<Guid?>("InvitedBy");

                    b.Property<DateTime?>("InvitedOn");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LogoUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("SubDomainName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TenantType");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("VarId")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("joinedOn");

                    b.HasKey("ID");

                    b.ToTable("Tenant","am");

                    b.HasData(
                        new { ID = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), Active = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Currency = "$", Deleted = false, IdentityNumber = "0", Language = "en", LogoUrl = "", Name = "Platform", SubDomainName = "69ABE04E-E9D7-499D-A3C1-2593ABEF8959", TenantType = 1, TimeZone = "America/Los_Angeles", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), VarId = "" }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.TenantAppServiceLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("ServiceAttributeId");

                    b.Property<Guid>("ServiceId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("TenantAppServiceLinking","am");
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.TenantLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BusinessPartnerTenantId");

                    b.Property<Guid?>("BusinessTenantId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid?>("PlatformTenantId");

                    b.Property<Guid?>("PublisherTenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("TenantLinking","am");

                    b.HasData(
                        new { ID = new Guid("30b3a49f-ae51-4a67-b610-bfcb935ae77a"), CreatedBy = new Guid("d899632c-a7ee-405b-aa71-0ad0779edfd2"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), PlatformTenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.TenantSubscription", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlertFrequency");

                    b.Property<Guid>("AppId");

                    b.Property<bool>("AutoRenew")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("CustomizeSubscription")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("Deleted");

                    b.Property<int>("GracePeriodInDays");

                    b.Property<string>("InactiveComment")
                        .HasMaxLength(4000);

                    b.Property<Guid>("LogoThumbnailId");

                    b.Property<int>("PaymentCycle");

                    b.Property<int>("PlanSchedule");

                    b.Property<double>("PriceInDollar");

                    b.Property<int>("State")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("Status");

                    b.Property<Guid>("SubscriptionPlanId");

                    b.Property<DateTime>("SubscriptionStartDate");

                    b.Property<DateTime>("SubscriptionStartEnd");

                    b.Property<Guid>("SystemConfId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("ThemeId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserLicenses");

                    b.HasKey("ID");

                    b.ToTable("TenantSubscription","am");

                    b.HasData(
                        new { ID = new Guid("f524047f-1389-412f-904d-0492858c0194"), AlertFrequency = 4, AppId = new Guid("8ded3502-01e5-469a-909b-5424d50d00d6"), AutoRenew = false, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), CustomizeSubscription = false, Deleted = false, GracePeriodInDays = 58, InactiveComment = "", LogoThumbnailId = new Guid("00000000-0000-0000-0000-000000000000"), PaymentCycle = 1, PlanSchedule = 1, PriceInDollar = 0.0, State = 1, Status = 0, SubscriptionPlanId = new Guid("b37eb8b9-11bf-402e-9048-f9d0a43a426b"), SubscriptionStartDate = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), SubscriptionStartEnd = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), SystemConfId = new Guid("00000000-0000-0000-0000-000000000000"), TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), ThemeId = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserLicenses = 15 }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.TenantUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(4000);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(20);

                    b.Property<Guid>("IdentityUserId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("TenantUser","am");

                    b.HasData(
                        new { ID = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Email = "hdudani@gmail.com", FirstName = "Hari", FullName = "Hari Dudani", IdentityUserId = new Guid("d26eb1db-1c04-4a14-b922-e7cabbf1366f"), LastName = "Dudani", Phone = "+918965321451", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.TenantUserAppLastAccessInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<string>("Browser")
                        .HasMaxLength(20);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Language")
                        .HasMaxLength(20);

                    b.Property<DateTime>("LoginDateTime");

                    b.Property<string>("Region")
                        .HasMaxLength(20);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(20);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("TenantUserAppLastAccessInfo","am");
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.TenantUserAppLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("AppId");

                    b.Property<Guid?>("BusinessPartnerTenantId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid?>("InvitedBy");

                    b.Property<DateTime?>("InvitedOn");

                    b.Property<DateTime?>("JoinedDate");

                    b.Property<int>("Status");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("TenantUserAppLinking","am");

                    b.HasData(
                        new { ID = new Guid("8260b697-e605-46e2-92e2-2f27935a8547"), Active = true, AppId = new Guid("8ded3502-01e5-469a-909b-5424d50d00d6"), BusinessPartnerTenantId = new Guid("00000000-0000-0000-0000-000000000000"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, InvitedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), JoinedDate = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Status = 1, TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), TenantUserId = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 1 }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.Theme", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("PreviewImageUrl")
                        .IsRequired();

                    b.Property<string>("ThemeKey")
                        .IsRequired();

                    b.Property<string>("ThemeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("Theme","am");

                    b.HasData(
                        new { ID = new Guid("46e3cf6c-6cd6-7c12-ed0e-1e906dfe5560"), Active = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PreviewImageUrl = "1", ThemeKey = "business", ThemeName = "Business", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("5270bc92-13fe-5299-0a24-752070424bc8"), Active = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PreviewImageUrl = "1", ThemeKey = "elegant", ThemeName = "Elegant", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("2a438a5c-7ac6-41bd-66cb-9a771b60f9dd"), Active = true, CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PreviewImageUrl = "1", ThemeKey = "light", ThemeName = "Light", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.AppMgmt.Entity.UserTenantLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BusinessPartnerTenantId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<bool>("IsPrimary");

                    b.Property<int?>("PartnerType");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("UserTenantLinking","am");

                    b.HasData(
                        new { ID = new Guid("601622f9-9e52-4dd7-acaa-b8d44087b486"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, IsPrimary = true, TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), TenantUserId = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 1 }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
