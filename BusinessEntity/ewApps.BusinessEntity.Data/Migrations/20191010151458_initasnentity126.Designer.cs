// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ewApps.BusinessEntity.Data;

namespace ewApps.BusinessEntity.Data.Migrations
{
    [DbContext(typeof(BusinessEntityDbContext))]
    [Migration("20191010151458_initasnentity126")]
    partial class initasnentity126
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAARInvoice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AppliedAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("AppliedAmountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("BalanceDue")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("BalanceDueFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("BillToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("ERPARInvoiceKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPBillToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPCustomerKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("FreightFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("LocalCurrency")
                        .HasMaxLength(100);

                    b.Property<string>("Owner")
                        .HasMaxLength(100);

                    b.Property<DateTime>("PostingDate");

                    b.Property<string>("Remarks")
                        .HasMaxLength(4000);

                    b.Property<string>("SalesEmployee")
                        .HasMaxLength(100);

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipFromAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<int>("ShippingType");

                    b.Property<string>("ShippingTypeText")
                        .HasMaxLength(100);

                    b.Property<int>("Status");

                    b.Property<string>("StatusText")
                        .HasMaxLength(100);

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TaxFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalBeforeDiscount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalBeforeDiscountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalPaymentDue")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalPaymentDueFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("TrackingNo")
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAARInvoice","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAARInvoiceItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ARInvoiceID");

                    b.Property<string>("BillToAddress")
                        .HasMaxLength(4000);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountAmountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("ERPARInvoiceItemKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPARInvoiceKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPBillToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPItemKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<Guid>("ItemId");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100);

                    b.Property<string>("ItemType")
                        .HasMaxLength(100);

                    b.Property<string>("LotNo")
                        .HasMaxLength(20);

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("QuantityUnit")
                        .HasMaxLength(100);

                    b.Property<string>("SerialOrBatchNo")
                        .HasMaxLength(100);

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipFromAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("TaxCode")
                        .HasMaxLength(100);

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalLC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalLCFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Unit")
                        .HasMaxLength(100);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("UnitPriceFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAARInvoiceItem","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAASN", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<string>("DeliveryNo");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("ERPASNKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPCustomerKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("ExpectedDate");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("PackagingSlipNo");

                    b.Property<DateTime>("ShipDate");

                    b.Property<string>("ShipmentPlan");

                    b.Property<int>("ShipmentType");

                    b.Property<string>("ShipmentTypeText");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal (18,5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("TrackingNo");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAASN","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAASNItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ASNId");

                    b.Property<string>("BillToAddress");

                    b.Property<string>("BlanketAgreementNo");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("ERPASNKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPItemKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal (18,9)");

                    b.Property<decimal>("FreightFC")
                        .HasColumnType("decimal (18,9)");

                    b.Property<decimal?>("GLAmount")
                        .HasColumnType("decimal (18,9)");

                    b.Property<Guid>("ItemID");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("QuantityUnit")
                        .HasMaxLength(20);

                    b.Property<string>("SerialOrBatchNo");

                    b.Property<string>("ShipFromAddress");

                    b.Property<string>("ShipToAddress");

                    b.Property<string>("TaxCode");

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal (18,5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalLC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal>("TotalLCFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("Unit")
                        .HasMaxLength(20);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal>("UnitPriceFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Whse");

                    b.HasKey("ID");

                    b.ToTable("BAASNItem","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAContract", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AgreementMethod");

                    b.Property<string>("AgreementType");

                    b.Property<string>("BPCurrency")
                        .HasMaxLength(50);

                    b.Property<string>("BPProject");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description");

                    b.Property<int>("DocumentNo");

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPContractKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPCustomerKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("Owner");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("PaymentTerms");

                    b.Property<string>("Remarks");

                    b.Property<int>("ShippingType");

                    b.Property<string>("ShippingTypeText");

                    b.Property<DateTime?>("SigningDate");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int>("Status");

                    b.Property<string>("StatusText");

                    b.Property<string>("TelephoneNo")
                        .HasMaxLength(50);

                    b.Property<Guid>("TenantId");

                    b.Property<DateTime?>("TerminationDate");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAContract","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAContractAttachment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AttachmentDate");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("FreeText")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAContractAttachment","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAContractItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ContractId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<decimal>("CumulativeAmountLC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("CumulativeCommittedAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int>("CumulativeCommittedQuantity");

                    b.Property<int>("CumulativeQuantity");

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPContractKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPItemKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EndOfWarranty");

                    b.Property<string>("FreeText");

                    b.Property<string>("ItemDescription");

                    b.Property<string>("ItemGroup");

                    b.Property<Guid>("ItemId");

                    b.Property<int>("ItemNo");

                    b.Property<int>("ItemRowStatus");

                    b.Property<string>("ItemRowStatusText");

                    b.Property<decimal>("ItemsPerUnit")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("OpenAmountLC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int>("OpenQuantity");

                    b.Property<int>("PlannedQuantity");

                    b.Property<string>("PortionofReturnsPerc");

                    b.Property<string>("Project");

                    b.Property<int>("ShippingType");

                    b.Property<string>("ShippingTypeText");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("UoMCode");

                    b.Property<string>("UoMGroup");

                    b.Property<string>("UoMName");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAContractItem","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BACustomer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100);

                    b.Property<Guid>("BusinessPartnerTenantId");

                    b.Property<string>("City")
                        .HasMaxLength(20);

                    b.Property<string>("Country")
                        .HasMaxLength(20);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Currency")
                        .HasMaxLength(20);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPCustomerKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasMaxLength(20);

                    b.Property<string>("FederalTaxID")
                        .HasMaxLength(100);

                    b.Property<string>("Group")
                        .HasMaxLength(20);

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasMaxLength(100);

                    b.Property<int?>("ShippingType");

                    b.Property<string>("ShippingTypeText")
                        .HasMaxLength(20);

                    b.Property<string>("State")
                        .HasMaxLength(20);

                    b.Property<int?>("Status");

                    b.Property<string>("StatusText")
                        .HasMaxLength(20);

                    b.Property<string>("Street")
                        .HasMaxLength(20);

                    b.Property<string>("StreetNo")
                        .HasMaxLength(20);

                    b.Property<string>("Tel1")
                        .HasMaxLength(20);

                    b.Property<string>("Tel2")
                        .HasMaxLength(20);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Website")
                        .HasMaxLength(50);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.ToTable("BACustomer","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BACustomerAddress", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressName")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasMaxLength(20);

                    b.Property<string>("Country")
                        .HasMaxLength(20);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPCustomerKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Label")
                        .HasMaxLength(100);

                    b.Property<string>("Line1")
                        .HasMaxLength(100);

                    b.Property<string>("Line2")
                        .HasMaxLength(100);

                    b.Property<string>("Line3")
                        .HasMaxLength(100);

                    b.Property<int>("ObjectType");

                    b.Property<string>("ObjectTypeText")
                        .HasMaxLength(20);

                    b.Property<string>("State")
                        .HasMaxLength(20);

                    b.Property<string>("Street")
                        .HasMaxLength(100);

                    b.Property<string>("StreetNo")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.ToTable("BACustomerAddress","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BACustomerContact", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("Default");

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPContactKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPCustomerKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasMaxLength(100);

                    b.Property<string>("Position")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone")
                        .HasMaxLength(50);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BACustomerContact","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BACustomerPaymentDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ABARouteNumber")
                        .HasMaxLength(20);

                    b.Property<string>("Account")
                        .HasMaxLength(200);

                    b.Property<int>("AccountType");

                    b.Property<string>("AccountTypeText")
                        .HasMaxLength(100);

                    b.Property<string>("BICSWIFTCode")
                        .HasMaxLength(200);

                    b.Property<string>("BankAccountName")
                        .HasMaxLength(200);

                    b.Property<string>("BankCode")
                        .HasMaxLength(100);

                    b.Property<string>("BankCountry")
                        .HasMaxLength(200);

                    b.Property<string>("BankName")
                        .HasMaxLength(200);

                    b.Property<string>("Branch")
                        .HasMaxLength(200);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("CreditCardNo")
                        .HasMaxLength(100);

                    b.Property<int>("CreditCardType");

                    b.Property<string>("CreditCardTypeText")
                        .HasMaxLength(100);

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("Default");

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPCustomerKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ExpirationDate");

                    b.Property<int>("IDNumber");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BACustomerPaymentDetail","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BADelivery", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerID")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeliveryDate");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal?>("DiscountFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<DateTime?>("DocumentDate");

                    b.Property<string>("ERPBillToAddressKey")
                        .HasMaxLength(20);

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPCustomerKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPDeliveryKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal?>("FreightFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("LocalCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("Owner")
                        .HasMaxLength(100);

                    b.Property<string>("PickAndPackRemarks")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostingDate");

                    b.Property<string>("Remarks")
                        .HasMaxLength(4000);

                    b.Property<string>("SalesEmployee")
                        .HasMaxLength(100);

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipFromAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<int>("ShippingType");

                    b.Property<string>("ShippingTypeText")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("StampNo")
                        .HasMaxLength(100);

                    b.Property<int>("Status");

                    b.Property<string>("StatusText")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal?>("TaxFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal?>("TotalBeforeDiscount")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal?>("TotalBeforeDiscountFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal?>("TotalPaymentDue")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal?>("TotalPaymentDueFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("TrackingNo")
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BADelivery","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BADeliveryItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlanketAgreementNo")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("DeliveryID");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPDeliveryKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ERPItemKey")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal (18,9)");

                    b.Property<decimal>("FreightFC")
                        .HasColumnType("decimal (18,9)");

                    b.Property<Guid>("ItemID");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("ItemType");

                    b.Property<string>("ItemTypeText")
                        .HasMaxLength(20);

                    b.Property<string>("LotNo")
                        .HasMaxLength(20);

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal (18,5)");

                    b.Property<string>("SerialOrBatchNo")
                        .HasMaxLength(100);

                    b.Property<string>("TaxCode")
                        .HasMaxLength(20);

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal (18,5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalLC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal>("TotalLCFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal>("UnitPriceFC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BADeliveryItem","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAItemMaster", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Active")
                        .HasMaxLength(20);

                    b.Property<string>("BarCode")
                        .HasMaxLength(20);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPConnectorKey")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ERPItemKey")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ItemName")
                        .HasMaxLength(100);

                    b.Property<string>("ItemType")
                        .HasMaxLength(20);

                    b.Property<string>("ManagedItem")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("PriceFC")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("PriceUniText")
                        .HasMaxLength(20);

                    b.Property<int>("PriceUnit");

                    b.Property<decimal>("PurchaseHeight")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("PurchaseHeightUnit");

                    b.Property<string>("PurchaseHeightUnitText")
                        .HasMaxLength(20);

                    b.Property<decimal>("PurchaseLength")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("PurchaseLengthUnit");

                    b.Property<string>("PurchaseLengthUnitText")
                        .HasMaxLength(20);

                    b.Property<decimal>("PurchaseVolume")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("PurchaseVolumeUnit");

                    b.Property<string>("PurchaseVolumeUnitText")
                        .HasMaxLength(20);

                    b.Property<decimal>("PurchaseWeight")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("PurchaseWeightUnit");

                    b.Property<string>("PurchaseWeightUnitText")
                        .HasMaxLength(20);

                    b.Property<decimal>("PurchaseWidth")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("PurchaseWidthUnit");

                    b.Property<string>("PurchaseWidthUnitText")
                        .HasMaxLength(20);

                    b.Property<string>("Remarks")
                        .HasMaxLength(100);

                    b.Property<decimal>("SalesHeight")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("SalesHeightUnit");

                    b.Property<string>("SalesHeightUnitText")
                        .HasMaxLength(20);

                    b.Property<decimal>("SalesLength")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("SalesLengthUnit");

                    b.Property<string>("SalesLengthUnitText")
                        .HasMaxLength(20);

                    b.Property<decimal>("SalesVolume")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("SalesVolumeUnit");

                    b.Property<string>("SalesVolumeUnitText")
                        .HasMaxLength(20);

                    b.Property<decimal>("SalesWeight")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("SalesWeightUnit");

                    b.Property<string>("SalesWeightUnitText")
                        .HasMaxLength(20);

                    b.Property<decimal>("SalesWidth")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("SalesWidthUnit");

                    b.Property<string>("SalesWidthUnitText")
                        .HasMaxLength(20);

                    b.Property<int>("ShippingType");

                    b.Property<string>("ShippingTypeText")
                        .HasMaxLength(20);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAItemMaster","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAPurchaseInquiry", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("ERPCustomerKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPPayToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("PayToAddress")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("PostingDate");

                    b.Property<string>("Remarks")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShippingText");

                    b.Property<int>("ShippingType");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("StatusText");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<DateTime>("ValidUntil");

                    b.HasKey("ID");

                    b.ToTable("BAPurchaseInquiry","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAPurchaseInquiryItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPPayToAddressKey")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("ERPPurchaseEnquiryItemKey")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("ERPShipToAddressKey")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<Guid>("ItemID");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PayToAddress")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("PriceSource")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PurchaseEnquiryID")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("Quantity");

                    b.Property<string>("QuantityUnit")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("ShipToAddress")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalLC")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal>("Unit")
                        .HasColumnType("decimal (18,5)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal (18,5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAPurchaseInquiryItem","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAPurchaseOrder", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerID");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("ERPBillToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPCustomerKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPSalesOrderKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("LocalCurrency")
                        .HasMaxLength(100);

                    b.Property<string>("Owner")
                        .HasMaxLength(100);

                    b.Property<string>("PickAndPackRemarks")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("PostingDate");

                    b.Property<string>("Remarks")
                        .HasMaxLength(4000);

                    b.Property<string>("SalesEmployee")
                        .HasMaxLength(100);

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipFromAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShippingText");

                    b.Property<int>("ShippingType");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("StatusText");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalBeforeDiscount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalPaymentDue")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BAPurchaseOrder","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BAPurchaseOrderItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlanketAgreementNo")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(20);

                    b.Property<string>("ERPItemKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPPayToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPPurchaseOrderItemKey")
                        .HasMaxLength(20);

                    b.Property<string>("ERPPurchaseOrderKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ItemID")
                        .HasMaxLength(100);

                    b.Property<string>("ItemName")
                        .HasMaxLength(100);

                    b.Property<int>("ItemType");

                    b.Property<string>("LotNo")
                        .HasMaxLength(20);

                    b.Property<string>("PayToAddress")
                        .HasMaxLength(4000);

                    b.Property<Guid>("PurchaseOrderId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("QuantityUnit")
                        .HasMaxLength(100);

                    b.Property<string>("SerialOrBatchNo");

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("TaxCode")
                        .HasMaxLength(20);

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalLC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Unit")
                        .HasMaxLength(100);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Whse")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("BAPurchaseOrderItem","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BASalesOrder", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerID");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("ERPBillToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPCustomerKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPSalesOrderKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("FreightFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("LocalCurrency")
                        .HasMaxLength(100);

                    b.Property<string>("Owner")
                        .HasMaxLength(100);

                    b.Property<string>("PickAndPackRemarks")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("PostingDate");

                    b.Property<string>("Remarks")
                        .HasMaxLength(40000);

                    b.Property<string>("SalesEmployee")
                        .HasMaxLength(100);

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipFromAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<int>("ShippingType");

                    b.Property<string>("ShippingTypeText")
                        .HasMaxLength(100);

                    b.Property<int>("Status");

                    b.Property<string>("StatusText")
                        .HasMaxLength(100);

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TaxFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalBeforeDiscount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalBeforeDiscountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalPaymentDue")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalPaymentDueFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BASalesOrder","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BASalesOrderItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("BlanketAgreementNo")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountAmountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("ERPBillToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPItemKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPSalesOrderItemKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPSalesOrderKey");

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<Guid>("ItemId");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100);

                    b.Property<string>("LotNo")
                        .HasMaxLength(20);

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("QuantityUnit")
                        .HasMaxLength(100);

                    b.Property<Guid>("SalesOrderId");

                    b.Property<string>("SerialOrBatchNo")
                        .HasMaxLength(100);

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipFromAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("TaxCode")
                        .HasMaxLength(100);

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalLC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalLCFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Unit")
                        .HasMaxLength(100);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("UnitPriceFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Whse")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("BASalesOrderItem","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BASalesQuotation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(100);

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<string>("ERPBillToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPCustomerKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPSalesQuotationKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("FreightFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("LocalCurrency")
                        .HasMaxLength(100);

                    b.Property<string>("Owner")
                        .HasMaxLength(100);

                    b.Property<DateTime>("PostingDate");

                    b.Property<string>("Remarks")
                        .HasMaxLength(4000);

                    b.Property<string>("SalesEmployee")
                        .HasMaxLength(100);

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipFromAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<int>("ShippingType");

                    b.Property<string>("ShippingTypeText");

                    b.Property<int>("Status");

                    b.Property<string>("StatusText")
                        .HasMaxLength(100);

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TaxFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalBeforeDiscount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalBeforeDiscountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalPaymentDue")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalPaymentDueFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<DateTime>("ValidUntil");

                    b.HasKey("ID");

                    b.ToTable("BASalesQuotation","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.BASalesQuotationItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("BlanketAgreementNo")
                        .HasMaxLength(100);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountAmountFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("ERPBillToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPItemKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPSalesQuotationItemKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPSalesQuotationKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPShipToAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("GLAccount")
                        .HasMaxLength(100);

                    b.Property<Guid>("ItemId");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100);

                    b.Property<string>("LotNo")
                        .HasMaxLength(20);

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("QuantityUnit")
                        .HasMaxLength(100);

                    b.Property<Guid>("SalesQuotationId");

                    b.Property<string>("SerialOrBatchNo")
                        .HasMaxLength(100);

                    b.Property<string>("ShipFromAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("ShipFromAddressKey")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("TaxCode")
                        .HasMaxLength(100);

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("TenantId");

                    b.Property<decimal>("TotalLC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("TotalLCFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Unit")
                        .HasMaxLength(100);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("UnitPriceFC")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("BASalesQuotationItem","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.ERPConnector", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("ConnectorKey")
                        .HasMaxLength(20);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("ERPConnector","be");

                    b.HasData(
                        new { ID = new Guid("aaea4427-53f8-4ef8-b821-caff358cbd92"), Active = true, ConnectorKey = "sap", CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "SAP Business One", TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("706200a5-bdaa-482e-ad17-8fc6fc39c8b3"), Active = false, ConnectorKey = "acumatica", CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "Acumatica", TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("7d43c277-2d8a-4e68-aace-6cc8af26bf9b"), Active = false, ConnectorKey = "batchmaster", CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "BatchMaster", TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) },
                        new { ID = new Guid("a140ddc9-2bbf-477c-9052-c285118c2326"), Active = false, ConnectorKey = "optiproeRP", CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, Name = "OptiPro ERP", TenantId = new Guid("18571765-24b5-4c36-a957-416eaec38fda"), UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc) }
                    );
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.ERPConnectorConfig", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("ConnectorKey")
                        .HasMaxLength(20);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Message")
                        .HasMaxLength(4000);

                    b.Property<string>("SettingJson")
                        .HasMaxLength(4000);

                    b.Property<string>("Status")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("ERPConnectorConfig","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid?>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<long>("PermissionBitMask");

                    b.Property<string>("RoleKey")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("Role","be");

                    b.HasData(
                        new { ID = new Guid("da5421d7-dfc6-425a-93e9-a3272e740727"), Active = true, AppId = new Guid("8c6fa8ce-6b94-428f-95de-5ed8859260d2"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PermissionBitMask = 511L, RoleKey = "admin", RoleName = "Admin", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 3 },
                        new { ID = new Guid("8cecec11-2352-431d-86bc-ba78322649a7"), Active = true, AppId = new Guid("8c6fa8ce-6b94-428f-95de-5ed8859260d2"), CreatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), CreatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), Deleted = false, PermissionBitMask = 4095L, RoleKey = "admin", RoleName = "Admin", UpdatedBy = new Guid("54b675f2-afdf-400f-a4fe-335ca6adbc40"), UpdatedOn = new DateTime(2019, 2, 4, 9, 40, 36, 503, DateTimeKind.Utc), UserType = 4 }
                    );
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.RoleLinking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("TenantUserId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("RoleLinking","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.SyncHistory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActionEndTime");

                    b.Property<DateTime>("ActionStartTime");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(50);

                    b.Property<string>("ERPEntityKey")
                        .HasMaxLength(50);

                    b.Property<int>("ExecutionTimeInMS");

                    b.Property<int>("NumItems");

                    b.Property<DateTime>("ReqFromSyncTime");

                    b.Property<DateTime>("ReqToSyncTime");

                    b.Property<int>("ResponseChunkSize");

                    b.Property<int>("StatusCode");

                    b.Property<string>("StatusMessage");

                    b.Property<string>("SyncReplyData");

                    b.Property<string>("SyncRequestData")
                        .HasMaxLength(100);

                    b.Property<Guid>("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(100);

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SyncHistory","be");
                });

            modelBuilder.Entity("ewApps.BusinessEntity.Entity.SyncTimeLog", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("ERPConnectorKey")
                        .HasMaxLength(100);

                    b.Property<string>("ERPEntityKey")
                        .HasMaxLength(100);

                    b.Property<string>("LastReceiveRowId")
                        .HasMaxLength(100);

                    b.Property<string>("LastSendRowId")
                        .HasMaxLength(100);

                    b.Property<int>("LastSyncStatus");

                    b.Property<string>("LastSyncStatusText");

                    b.Property<DateTime>("ReceiveFromTime");

                    b.Property<DateTime>("ReceiveToTime");

                    b.Property<DateTime>("SendSyncFromTime");

                    b.Property<DateTime>("SendSyncToTime");

                    b.Property<Guid>("TenantId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("ID");

                    b.ToTable("SyncTimeLog","be");
                });
#pragma warning restore 612, 618
        }
    }
}
