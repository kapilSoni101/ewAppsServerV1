<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ewApps.BusinessEntity.DS</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:ewApps.BusinessEntity.DS.IBAAPInvoiceAttachmentDS" -->
        <!-- Badly formed XML comment ignored for member "T:ewApps.BusinessEntity.DS.IBAAPInvoiceDS" -->
        <member name="T:ewApps.BusinessEntity.DS.IBAAPInvoiceItemDS">
            <summary>
            </summary>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAARInvoiceAttachmentDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BAARinvoiceAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceAttachmentDS.AddARInvoiceAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAARInvoiceAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add invoice item list.
            </summary>
            <param name="invoiceItemList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAARInvoiceDS">
            <summary>
            This interface provides the CRUD operations related methods for invoice item entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.IsInvoiceExistAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Whether invoice exists.
            </summary>
            <param name="erpARInvoiceKey">ERP invoice unique key.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.GetInvoiceByERPInvoiceKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get invoice.
            </summary>
            <param name="erpARInvoiceKey">ERP invoice unique key.</param>        
            <returns>return invoice.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.GetInvoiceAttachmentListByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice attachment list.
            </summary>
            <param name="invoiceId">Invoice id.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.GetInvoiceByTenant(ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice list.
            Invoice list will be filter by Tenant and from-todate.
            </summary>
            <param name="filter">Contains filter clause to get filter invoice list.</param>
            <param name="tenatId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.AddInvoiceListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAARInvoiceSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            add invoice list.
            </summary>
            <param name="invoiceList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.AddInvoiceAsync(ewApps.BusinessEntity.DTO.AddBAARInvoiceDTO,System.Threading.CancellationToken)">
            <summary>
            Add invoice when application run in standalone.
            </summary>
            <param name="invoiceDTO">Invoice add object.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.AddInvoiceAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add invoice.
            </summary>
            <param name="httpRequest">httpRequest object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.UpdateInvoiceAmountAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAARInvoiceEntityDTO},System.Threading.CancellationToken)">
            <summary>
            Update invoice when make payment in standalone.
            </summary>
            <param name="listinvoiceDTO">Invoice object.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.IsInvoiceExistsAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Invoice exist for customer.
            </summary>
            <param name="customerId">CustomerId</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.DeleteInvoiceAttachment(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes document with file.
            </summary>
            <param name="documentId"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceDS.CancelInvoiceAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Cancel invoice by invoice id.
            </summary>
            <param name="invoiceId">Invoiceid</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAARInvoiceItemDS">
            <summary>
            This interface provides the CRUD operations related methods for delviery entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceItemDS.GetInvoiceItemListByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice items by invoice id.
            </summary>
            <param name="invoiceId">InvoiceID</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceItemDS.AddInvoiceItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAARInvoiceItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add invoice item list.
            </summary>
            <param name="invoiceItemList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAARInvoiceItemDS.AddBAARInvoiceItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.AddBAARInvoiceItemDTO},System.Guid,System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Add invoice items on adding invoice.
            </summary>
            <param name="invoiceItemList">Invoice items list.</param>
            <param name="tenantId">Tenant id</param>
            <param name="tenantUserId">tenant user id.</param>
            <param name="invoiceId">added invoice id</param>
            <param name="erpArInvoiceKey">invoice key.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAASNAttachmentDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BAASNAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAASNAttachmentDS.AddASNAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAASNAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add ASN Attachment list.
            </summary>
            <param name="asnAttachmentList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAASNAttachmentDS.GetASNAttachmentListByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            get ASN Attachment List
            </summary>
            <param name="asnId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAASNAttachmentDS.GetASNAttachmentListByASNIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="asnId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAASNDS.GetASNListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the asn list by business tenant id and provided filter.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="listDateFilterDTO">The list date filter dto.</param>
            <param name="asnType">ASN type</param>
            <param name="cancellationToken">The cancellation token to cancel async task.</param>
            <returns>Returns list of ASN list that matches provided </returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAASNDS.GetASNDetailByASNIdAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the asn detail by asn identifier.
            </summary>
            <param name="asnId">The asn identifier.</param>
            <param name="asnType">ASN Type</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns ASN detail with line items that matches provided asn id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAASNDS.GetASNDetailByASNIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the asn detail by asn identifier.
            </summary>
            <param name="asnId">The asn identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns ASN detail with line items that matches provided asn id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAASNItemDS.GetASNItemListByASNId(System.Guid)">
            <summary>
            Gets the asn item list by asn id.
            </summary>
            <param name="asnId">The asn identifier.</param>
            <returns>Returns ASN Items list that matches provided ASN id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAContractAttachmentDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BAContractAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAContractAttachmentDS.AddContractAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAContractAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add contract item list.
            </summary>
            <param name="contractAttachmentList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAContractAttachmentDS.GetContractAttachmentListByContractIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
             get contract item list.
            </summary>
            <param name="contractId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAContractAttachmentDS.GetContractAttachmentListByContractIdForCustAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="contractId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAContractDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BAContract entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAContractDS.GetContractListByTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the contract list by tenant id.
            </summary>
            <param name="tenantId">The tenant id to filter contract list.</param>
            <param name="listDateFilterDTO">The DTO to filter contract list.</param>
            <param name="cancellationToken">The token to cancel async operation.</param>
            <returns>Returns contract list that matches given tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAContractDS.GetContractDetailByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAContractItemDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BAContractItem entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAContractItemDS.GetContractItemListByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract item list by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contarct item list that matches the provided business tenant id and contract  id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAVendorContractDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BAVendorContract entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAVendorContractDS.GetContractListByTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the contract list by tenant id.
            </summary>
            <param name="tenantId">The tenant id to filter contract list.</param>
            <param name="listDateFilterDTO">The DTO to filter contract list.</param>
            <param name="cancellationToken">The token to cancel async operation.</param>
            <returns>Returns contract list that matches given tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAVendorContractDS.GetContractDetailByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBACustomerAddressDS">
            <summary>
             Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to BACustomerAddress entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerAddressDS.AddCustomerAddressListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerAddressSyncDTO},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add customer address list.
            </summary>
            <param name="customerAddressList"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerAddressDS.GetCustomerAddressListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Customer List.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerAddressDS.GetCustomerAddressEntityListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer address entity list.
            </summary>
            <param name="customerId">CustomerId</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerAddressDS.DeleteCustomerAddressAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            To delete customer address associated with Customer.
            </summary>
            <param name="customerId"></param>
            <param name="commit"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBACustomerContactDS">
            <summary>
             Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to BACustomerContact entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerContactDS.AddCustomerContactListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerContactSyncDTO},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add customer contact detail list.
            </summary>
            <param name="customerContactList"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerContactDS.GetCustomerContactListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Customer List.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerContactDS.GetCustomerContactListByCustomerIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Customer contact List by customerid.
            </summary>
            <param name="customerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerContactDS.DeleteCustomerAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            To delete customer contact associated with Customer.
            </summary>
            <param name="customerId"></param>
            <param name="commit"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBACustomerDS">
            <summary>
             Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to BACustomer entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerDS.GetCustomerListByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Customer List.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerDS.GetCustomerListByStatusAndTenantIdAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="tenantId"></param>
            <param name="status">Status of customer</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerDS.BACustomerUpdateAsync(ewApps.BusinessEntity.DTO.CustConfigurationUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update BA Customer
            </summary>
            <param name="custConfigurationUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerDS.UpdateCustomerAndContactDetailAsync(ewApps.BusinessEntity.DTO.BusBACustomerDetailDTO,System.Threading.CancellationToken)">
            <summary>
            Update customer and customercontact list.
            </summary>
            <param name="custContactDetailDTO">Detail object of customer and contact list.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerDS.DeleteCustomerAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method will delete customer and its associated data.
            </summary>
            <param name="baCustomerId">BACustomer Id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBACustomerPaymentDetailDS">
            <summary>
             Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to BACustomerPaymentDetail entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBACustomerPaymentDetailDS.AddCustomerPaymentDetailListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerPaymentDetailSyncDTO},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add Customer payment detail list .
            </summary>
            <param name="customerPaymentDetailList"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBADeliveryAttachmentDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BADeliveryAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBADeliveryAttachmentDS.AddDeliveryAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BADeliveryAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add invoice item list.
            </summary>
            <param name="invoiceItemList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBADeliveryAttachmentDS.GetDeliveryAttachmentListByDeliveryIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery item list by delivery identifier.
            </summary>
            <param name="deliveryId">The delivery identifier to find items.</param>
            <param name="cancellationToken">The async task cancellation token.</param>
            <returns>Returns list of delivery items that matches provided delivery id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBADeliveryDS">
            <summary>
            This interface provides the CRUD operations related methods for delviery entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBADeliveryDS.AddDeliveryListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BADeliverySyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Add delivery list .
            </summary>
            <param name="deliveryList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBADeliveryDS.GetDeliveryListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.BusinessEntity.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBADeliveryDS.GetDeliveryDetailByDeliveryIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery detail by delivery identifier.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="deliveryId">The delivery identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns delivery detail that matches provided delivery id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBADeliveryItemDS">
            <summary>
            This interface provides the CRUD operations related methods for delviery entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBADeliveryItemDS.AddDeliveryItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BADeliveryItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add delivery item list .
            </summary>
            <param name="deliveryItemList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBADeliveryItemDS.GetDeliveryItemNameListByDeliveryIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery item name list by delivery id.
            </summary>
            <param name="deliveryId">The delivery to find delivery items.</param>
            <param name="cancellationToken">The async task cancellation token.</param>
            <returns>Returns list of delivery item name list that matches provided delivery id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBADeliveryItemDS.GetDeliveryItemListByDeliveryId(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery item list by delivery identifier.
            </summary>
            <param name="deliveryId">The delivery identifier to find items.</param>
            <param name="cancellationToken">The async task cancellation token.</param>
            <returns>Returns list of delivery items that matches provided delivery id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAItemAttachmentDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BAItemMasterAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAItemAttachmentDS.AddItemAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAItemMasterAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add  item attachmnetlist.
            </summary>
            <param name="itemAttachmentList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAItemMasterDS">
            <summary>
             Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to BAItemMaster entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAItemMasterDS.AdditemMasterListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAItemMasterSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Add customer list.
            </summary>
            <param name="itemMasterList"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAItemMasterDS.GetItemMasterListByBusTenantIdAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAItemMasterDS.GetItemMasterByBusTenantIdAndItemIdAsync(System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier and item identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="itemId">The item identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAItemMasterDS.AddItemMasterByBusinessAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add business Payment App Item Master
            </summary>
            <param name="httpRequest"></param>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAItemMasterDS.AddItemMasterByBusinessPayAppWithoutAttchAsync(ewApps.BusinessEntity.DTO.BusBAItemMasterViewDTO,System.Threading.CancellationToken)">
            <summary>
            Add Item Master without attachment
            </summary>
            <param name="busBAItemMasterViewDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAItemMasterDS.GetItemMasterListByBusTenantIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAItemMasterDS.GetItemMasterByBusTenantIdAndItemIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier and item identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="itemId">The item identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAPurchaseInquiryItemDS">
            <summary>
            This interface provides the CRUD operations related methods for delviery entity.
            </summary>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBAPurchaseOrderAttachmentDS">
            <summary>
            Contains purchase order methods.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAPurchaseOrderAttachmentDS.GetPurchaseOrderAttachmentListByOrderIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order attachment list.
            </summary>
            <param name="pOrderId">Purchase orderid.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAPurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsync(ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get purchase order list by tenantid.
            </summary>
            <param name="listDateFilterDTO">filter object</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAPurchaseOrderDS.GetPurcahseDetailByPOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order detail by purcheid and tenant id.
            </summary>
            <param name="businessTenantId">Business tenantid</param>
            <param name="poId">purchase order id.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAPurchaseOrderDS.GetPurchaseOrderAttachmentListByOrderIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order attachment list.
            </summary>
            <param name="pOrderId">Purchase orderid.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAPurchaseOrderDS.AddPurchaseOrder(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add purchaseOrder, order items and attachment.
            </summary>
            <param name="httpRequest">Contains purchase order attachment</param>
            <param name="request">AddBAPurchaseOrderDTO model in json string.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAPurchaseOrderItemDS.AddPurchaseOrderItemLiast(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAPurchaseOrderItemDTO},ewApps.BusinessEntity.Entity.BAPurchaseOrder,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Add purchaseorder item list.
            </summary>
            <param name="OrderItemList">Purchase OrderItemList</param>
            <param name="pOrder">Added purchase order entity.</param>
            <param name="commit">Commit changes.</param>
            <param name="token">Cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBASalesOrderAttachmentDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BASalesOrderAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderAttachmentDS.AddSalesOrderAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesOrderAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add salesOrder Attachment list.
            </summary>
            <param name="salesOrderAttachmentList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderAttachmentDS.GetSalesOrderAttachmentListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            get salesOrder Attachment list.
            </summary>
            <param name="salesOrdertId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderAttachmentDS.GetSalesOrderAttachmentListByIdForCustAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            get salesOrder Attachment list for cust.
            </summary>
            <param name="salesOrderId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBASalesOrderDS">
            <summary>
            Contains all required sales order methods.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderDS.GetSalesOrderListByTenantIdAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales order item list by teanntid.
            </summary>
            <param name="tenantId">Tenant unique id.</param>
            <param name="includeDeleted">return sales order with deleted items.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the sales order list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns sales order list that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderDS.GetSalesOrderDetailBySOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets sales order detail that matches the provided business tenant id and sales order id.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="soId">The sales order identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns <see cref="T:ewApps.BusinessEntity.DTO.BusBASalesOrderViewDTO"/> that matches provided business tenant and sales order id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderItemDS.GetSalesOrderItemsListBySalesOrderIdAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales order item list by teanntid.
            </summary>
            <param name="salesOrderId">salesOrderId unique id.</param>
            <param name="includeDeleted">return all sales order item with deleted items if flag is true.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderItemDS.GetSalesOrderItemsListByERPSalesOrderKeyAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales order item list by ERP sales order key.
            </summary>
            <param name="erpSalesOrderKey">salesOrderKey unique key of connector.</param>
            <param name="includeDeleted">return all sales order item with deleted items if flag is true.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesOrderItemDS.GetSalesOrderItemListBySOIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the sales order item list by sales order identifier.
            </summary>
            <param name="soId">The so identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of sales order item that matches provieded sales order id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBASalesQuotationAttachmentDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to BASalesQuotationAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationAttachmentDS.AddSalesQuotationAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesQuotationAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add salesQuotation attachment list.
            </summary>
            <param name="#endregion Add#endregionAdd"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationAttachmentDS.GetSalesQuotationAttachmentListBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
             get salesQuotation attachment list.
            </summary>
            <param name="salesQuotationId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationAttachmentDS.GetSalesQuotationAttachmentListBySalesQuotationIdForCustAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            get salesQuotation attachment list For Cust.
            </summary>
            <param name="salesQuotationId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBASalesQuotationDS">
            <summary>
            Contains all required sales order methods.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationDS.GetSalesQuotationListByTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get BASales Quotation list by teanntid.
            </summary>
            <param name="tenantId">Tenant unique id.</param>
            <param name="includeDeleted">return BASalesQuotation with deleted items.</param>        
            <returns>return list of BASalesQuotation entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationDS.GetSalesQuotationByERPKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get BASales Quotation by ERP unique key.
            </summary>
            <param name="erpSalesQuotationKey">SalesQuotationKey is a ERP unique key.</param>
            <param name="token"></param>
            <returns>return BASalesQuotation entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationDS.GetSalesQuotationListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="listDateFilterDTO">The date filter values to filter sales quatation data on Document Date.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.BusinessEntity.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the salesQuotation detail with items by salesQuotation identifier.
            </summary>
            <param name="salesQuotationId">The delivery identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns salesQuotation detail with items that matches provided salesQuotationId .</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationDS.GetSalesQuotationListByPartnerTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation list by business tenant identifier.
            </summary>
            <param name="businessPartnerTenantId">The business tenant identifier.</param>
            <param name="listDateFilterDTO">The date filter values to filter sales quatation data on Document Date.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.BusinessEntity.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationDS.AddSalesQuotationListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesQuotationSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            add sales quotation list.
            </summary>
            <param name="salesQuotationList"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationItemDS.GetSalesQuotationItemsListBySalesOrderIdAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales quotration item list by teanntid.
            </summary>
            <param name="salesQuotationId">salesQuotationId unique id.</param>
            <param name="includeDeleted">return all sales quotation item with deleted items if flag is true.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBASalesQuotationItemDS.GetSalesQuotationItemsListByERPSalesOrderKeyAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales quotation item list by ERP sales quotation key.
            </summary>
            <param name="erpSalesQuotationKey">erpSalesQuotationKey unique key of connector.</param>
            <param name="includeDeleted">return all sales order item with deleted items if flag is true.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ewApps.BusinessEntity.DS.IBAVendorAddressDS" -->
        <!-- Badly formed XML comment ignored for member "T:ewApps.BusinessEntity.DS.IBAVendorContactDS" -->
        <member name="M:ewApps.BusinessEntity.DS.IBAVendorContactDS.GetVendorContactListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Customer List.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBAVendorContactDS.GetVendorContactListByVendorIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Customer contact List by customerid.
            </summary>
            <param name="customerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ewApps.BusinessEntity.DS.IBAVendorDS" -->
        <member name="T:ewApps.BusinessEntity.DS.IAppMgmtDS">
            <summary>
            This interface provides method to manage app management operations.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IAppMgmtDS.GetTenantPrimaryUserAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            get tanant primary user .
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IAppPortalDS.GetTenantSuscribedApplicationKeyAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            get tanantsubscribed application key .
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IASNotificationDS.GetASNotificationList(System.Guid,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="AppId"></param>
            <param name="fromCount"></param>
            <param name="toCount"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IASNotificationDS.ReadASNotification(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IASNotificationDS.GetUnreadASNotificationList(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="AppId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ICustomerSignupDS">
            <summary>
            Contains all required customer SignUp methods.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustomerSignupDS.AddCustomerListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            SignUp customer
            </summary>
            <param name="customerSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustomerSignupDS.SignUpCustomerAsync(ewApps.BusinessEntity.DTO.SignUpBACustomerDTO,System.Threading.CancellationToken)">
            <summary>
            Signs up customer.
            </summary>
            <param name="customerSyncDTO">customer dto.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IERPConfigDS.GetBusinessAppConnectorConfigByBusinessIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get all the Application list subscribed by a business tenant.
            </summary>
            <param name="businessId">Id of Business Tenant</param>
            <param name="token"></param>
            <returns>return list of application.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IERPConfigDS.GetConnectorConfigByTenantIdAndAppIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business detail by tenantId And AppId.
            </summary>
            <param name="tenantId">Id of Business Tenant</param>
            <param name="appId">Id of Business Application</param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IERPConfigDS.AddBusinessConnectorConfigsAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.ERPConnectorConfigDTO},System.Threading.CancellationToken)">
            <summary>
            Adding configuration for tenant application.
            </summary>
            <param name="connectorConfigDTO">Client connector configuration setting for a tenant.</param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IERPConfigDS.UpdateBusinessConnectorConfigsAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.ERPConnectorConfigDTO},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Adding/updating/deleting configuration for business.
            </summary>                
            <param name="connectorConfigDTO">Incoming connetor request is coming for add/update/delete.</param>
            <param name="token"></param>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IERPConnectorDS">
            <summary>
            Provide functionality to write bussiness logic on connector entity by creating an object to this class.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IERPConnectorDS.GetConnctorListAsync">
            <summary>
            Get Connector list
            </summary>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IRoleDS">
            <summary>
            Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to Role entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IRoleDS.GetAdminRoleIdByAppIdAndUserTypeAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get admin rol by application id.
            </summary>
            <param name="appId">Unique application id.</param>
            <param name="userType">UserType</param>
            <param name="token">Async token</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IRoleDS.GetOrCreateRoleAsync(System.Int64,System.Guid,System.Int32,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Creates the role if not exists else retuen the existinf roleId.
            </summary>
            <param name="userPermissionbitMask">permission bit mask of the user</param>
            <param name="appId">appliation identitfier of the user</param>
            <param name="userType">User tyep of the user</param>
            <param name="loginTenantUserId">Login user tenantUser id to identitify the user</param>
            <param name="token">canclation token for the async methods</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IRoleDS.GetEntityByAppUserAndAppId">
            <summary>
            Gets the role entity by appid and userid.
            </summary>
            <returns>Role entity.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IRoleLinkingDS">
            <summary>
            Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to RoleLinking entity.
            </summary>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ITenantUserAppPreferenceDS">
            <summary>
            Responsible for exposing all the methods that are intrecting with the DB for retriving the data related to TenantUserAppPreference entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ITenantUserAppPreferenceDS.AddBEAppPreferenceListAsync(ewApps.BusinessEntity.DTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Add customer portal business entity app preference list
            </summary>
            <param name="preferenceUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAASNDS.GetASNListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the asn list by business tenant id and provided filter.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="listDateFilterDTO">The list date filter dto.</param>
            <param name="cancellationToken">The cancellation token to cancel async task.</param>
            <returns>Returns list of ASN list that matches provided </returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAASNDS.GetASNDetailByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the asn detail by asn identifier.
            </summary>
            <param name="asnId">The asn identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns ASN detail with line items that matches provided asn id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAASNDS.GetVendorASNListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the vendor asn list by business tenant id and provided filter.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="listDateFilterDTO">The list date filter dto.</param>
            <param name="cancellationToken">The cancellation token to cancel async task.</param>
            <returns>Returns list of ASN list that matches provided </returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAASNDS.GetVendorASNDetailByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the vendor asn detail by asn identifier.
            </summary>
            <param name="asnId">The asn identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns ASN detail with line items that matches provided asn id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBusBAContractDS">
            <summary>
            This interface defines contract operations for business tenant.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAContractDS.GetContractListByBusinessIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the contract list by business tenant id.
            </summary>
            <param name="businessTenantId">The business tenant id to filter contract list.</param>
            <param name="listDateFilterDTO">The DTO to filter contract list.</param>
            <param name="cancellationToken">The token to cancel async operation.</param>
            <returns>Returns contract list that matches given business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAContractDS.GetContractDetailByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBusBADeliveryDS">
            <summary>
            This interface defines <see cref="T:ewApps.BusinessEntity.Entity.BADelivery"/> entity operations for business.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBADeliveryDS.GetDeliveryListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.BusinessEntity.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBADeliveryDS.GetDeliveryItemNameListByDeliveryIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery item name list by delivery id.
            </summary>
            <param name="deliveryId">The delivery to find delivery items.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of delivery item name list that matches provided delivery id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBADeliveryDS.GetDeliveryDetailByDeliveryIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery detail with items by delivery identifier.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="deliveryId">The delivery identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns delivery detail with items that matches provided delivery id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAItemMasterDS.GetItemMasterListByBusTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAItemMasterDS.GetItemMasterByBusTenantIdAndItemIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier and item identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="itemId">The item identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAItemMasterDS.AddItemMasterByBusinessAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add Item Master.
            </summary>
            <param name="httpRequest">httpRequest object</param>
            <param name="request"></param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAItemMasterDS.AddItemMasterByBusinessPayAppWithoutAttchAsync(ewApps.BusinessEntity.DTO.BusBAItemMasterViewDTO,System.Threading.CancellationToken)">
            <summary>
            Add item Master Without Attechment
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAItemMasterDS.GetVendorsItemMasterListByBusTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBAItemMasterDS.GetVendorsItemMasterByBusTenantIdAndItemIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier and item identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="itemId">The item identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBusBASalesOrderDS">
            <summary>
            This interface defines <see cref="T:ewApps.BusinessEntity.Entity.BASalesOrder"/> entity operations for business.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the sales order list by business tenant identifier asynchronous.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns sales order list that matches the provided business tenatn id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBASalesOrderDS.GetSalesOrderDetailBySOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets sales order detail that matches the provided business tenant id and sales order id.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="soId">The sales order identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns <see cref="T:ewApps.BusinessEntity.DTO.BusBASalesOrderViewDTO"/> that matches provided business tenant and sales order id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IBusBASalesQuotationDS">
            <summary>
            This interface defines <see cref="!:BASalesQuotation"/> entity operations for business.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBASalesQuotationDS.GetSalesQuotationListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="listDateFilterDTO">The date filter values to filter sales quatation data on Document Date.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.BusinessEntity.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Quatation Detail By Sales Quotation Id 
            </summary>
            <param name="salesQuotationId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IBusBASalesQuotationItemDS.GetSalesQuotationItemListBySalesQuotationId(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the salesQuotation item list by salesQuotation identifier.
            </summary>
            <param name="salesQuotationId">The sales Quotation identifier to find items.</param>
            <param name="cancellationToken">The async task cancellation token.</param>
            <returns>Returns list of salesQuotation items that matches provided salesQuotation id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ICustBAContractDS">
            <summary>
            This interface defines contract operations for business tenant.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBAContractDS.GetContractListByBusinessIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the contract list by business tenant id.
            </summary>
            <param name="businessTenantId">The business tenant id to filter contract list.</param>
            <param name="listDateFilterDTO">The DTO to filter contract list.</param>
            <param name="cancellationToken">The token to cancel async operation.</param>
            <returns>Returns contract list that matches given business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBAContractDS.GetContractDetailByContractIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ICustBADeliveryDS">
            <summary>
            This interface defines <see cref="T:ewApps.BusinessEntity.Entity.BADelivery"/> entity operations for business.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBADeliveryDS.GetDeliveryListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery list by business tenant identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.BusinessEntity.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBADeliveryDS.GetDeliveryDetailByDeliveryIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery detail with items by delivery identifier.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="deliveryId">The delivery identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns delivery detail with items that matches provided delivery id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBAItemMasterDS.GetItemMasterListByBusTenantIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBAItemMasterDS.GetItemMasterByBusTenantIdAndItemIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier and item identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="itemId">The item identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ICustBASalesOrderDS">
            <summary>
            This interface defines <see cref="T:ewApps.BusinessEntity.Entity.BASalesOrder"/> entity operations for business.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the sales order list by business tenant identifier asynchronous.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns sales order list that matches the provided business tenatn id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBASalesOrderDS.GetSalesOrderDetailBySOIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets sales order detail that matches the provided business tenant id and sales order id.
            </summary>
            <param name="businessTenantId">The business tenant id.</param>
            <param name="soId">The sales order identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns <see cref="T:ewApps.BusinessEntity.DTO.CustBASalesOrderViewDTO"/> that matches provided business tenant and sales order id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ICustBASalesQuotationDS">
            <summary>
            This interface defines <see cref="!:BASalesQuotation"/> entity operations for business.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBASalesQuotationDS.GetSalesQuotationListByPartnerTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Gets the SalesQuotation list by business tenant identifier.
            </summary>
            <param name="businessPartnerTenantId">The business tenant identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns list of <see cref="T:ewApps.BusinessEntity.DTO.BusBADeliveryDTO"/> that matches provided business tenant id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ICustBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Quatation Detail By Sales Quotation Id 
            </summary>
            <param name="salesQuotationId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IVendBAPurchaseOrderDS">
            <summary>
            This interface defines <see cref="T:ewApps.BusinessEntity.Entity.BASalesOrder"/> entity operations for business.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IVendBAPurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsync(ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get purchase order list by tenantid.
            </summary>
            <param name="listDateFilterDTO">filter object</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IVendBAPurchaseOrderDS.GetPurcahseDetailByPOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order detail by purcheid and tenant id.
            </summary>
            <param name="businessTenantId">Business tenantid</param>
            <param name="poId">purchase order id.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IVendorBAContractDS.GetContractDetailByContractIdForVendorAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS.#ctor(ewApps.BusinessEntity.QData.IBusinessEntityNotificationRecipientRepository,ewApps.BusinessEntity.QData.IQNotificationData)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS"/> class.
            </summary>
            <param name="businessEntityNotificationRecipientRepository">The business entity notification recipient repository.</param>
            <param name="qNotificationData">The q notification data.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS.GetAddARInvoiceNotificationBizRecipientAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS.GetAddCustomerNotificationRecipientAsync(System.Guid,System.Guid,System.Guid,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS.GetUpdateCustomerNotificationRecipientAsync(System.Guid,System.Guid,System.Guid,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS.GetAddSalesOrderNotificationRecipientAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS.GetARInvoiceNotificationCustomerUserRecipientAsync(System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS.GetNotificationBizRecipientAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationRecipientDS.GetAddSalesQuotationNotificationRecipientAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.#ctor(Microsoft.Extensions.Logging.ILogger{ewApps.BusinessEntity.DS.BusinessEntityNotificationService},ewApps.Core.EmailService.IEmailService,ewApps.Core.SMSService.ISMSService,ewApps.Core.NotificationService.IASNotificationService,ewApps.BusinessEntity.DS.IASNotificationDS,ewApps.BusinessEntity.DS.IBusinessEntityNotificationRecipientDS,Microsoft.Extensions.Options.IOptions{ewApps.BusinessEntity.Common.BusinessEntityAppSettings},Microsoft.Extensions.Options.IOptions{ewApps.Core.NotificationService.NotificationAppSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusinessEntityNotificationService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="emailService">The email service.</param>
            <param name="smsService">The SMS service.</param>
            <param name="asNotificationService">As notification service.</param>
            <param name="asNotificationDS">As notification ds.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.ValidateNotificationData(System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetRecipientList(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetXSLArgumentsForEmail(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetEmailPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetSMSPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetXSLArgumentsForSMS(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetXSLArgumentsForASNotification(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetASNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.AddASNotification(ewApps.Core.NotificationService.ASNotificationDTO,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetDeeplinkPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.SetDeeplinkResultInNotificationPayload(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.DeeplinkServices.DeeplinkResultSet)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetBranchKey(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetSupportedNotificationType(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.AddBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetBadgeCount(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GenerateASNotification(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient},ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.ASNotificationDTO)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetSyncRowId(ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusinessEntityNotificationService.GetXSLArgumentsForPush(ewApps.Core.NotificationService.NotificationRecipient,ewApps.Core.NotificationService.NotificationPayload{ewApps.Core.NotificationService.NotificationRecipient})">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.AppMgmtDS">
            <summary>
            This class defines methods to manage app management operations.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppMgmtDS.#ctor(Microsoft.Extensions.Options.IOptions{ewApps.BusinessEntity.Common.BusinessEntityAppSettings},ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            initilize constructor
            </summary>
            <param name="appSettings"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppMgmtDS.GetTenantPrimaryUserAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppPortalDS.#ctor(Microsoft.Extensions.Options.IOptions{ewApps.BusinessEntity.Common.BusinessEntityAppSettings},ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            initilize constructor
            </summary>
            <param name="appSettings"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppPortalDS.GetTenantSuscribedApplicationKeyAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAAPInvoiceAttachmentDS">
            <summary>
            This class implements standard business logic and operations for BAAPinvoiceAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAAPInvoiceAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBAAPInvoiceAttachmentRepository)">
            <summary>
            
            </summary>
            <param name="invoiceAttachmentRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAAPInvoiceAttachmentDS.AddAPInvoiceAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAAPInvoiceAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAAPInvoiceDS">
            <summary>
            This class implements standard business logic and operations for BAAPInvoice entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAAPInvoiceDS.#ctor(ewApps.BusinessEntity.IQNotificationDS,ewApps.BusinessEntity.Data.IBAAPInvoiceRepository,ewApps.BusinessEntity.DS.IBAAPInvoiceItemDS,ewApps.BusinessEntity.DS.IBAAPInvoiceAttachmentDS,ewApps.BusinessEntity.DS.IBAVendorDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.Core.DMService.IDMDocumentDS,ewApps.BusinessEntity.QData.IQBAInvoiceRepository,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Logging.ILogger{ewApps.BusinessEntity.DS.BAAPInvoiceDS})">
            <summary>
            Default constructor with APInvoice respository parameter.
            </summary>
            <param name="apInvoiceRepo"></param>
            <param name="invoiceItemDS"></param>
            <param name="identityDataService"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAAPInvoiceDS.AddAPInvoiceListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAAPInvoiceSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAAPInvoiceDS.AddInvoiceAsync(ewApps.BusinessEntity.DTO.BAAPInvoiceSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add invoice and its child data .
            </summary>
            <param name="invoiceSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAAPInvoiceItemDS">
            <summary>
            This class implements standard business logic and operations for BAAPInvoiceItem entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAAPInvoiceItemDS.#ctor(ewApps.BusinessEntity.Data.IBAAPInvoiceItemRepository,ewApps.BusinessEntity.DS.IBAItemMasterDS)">
            <summary>
            Constructor 
            </summary>
            <param name="arInvoiceItemRepo">Invoiceitem data repo class.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAAPInvoiceItemDS.AddInvoiceItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAAPInvoiceItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAAPInvoiceItemDS.AddInvocieItemAsync(ewApps.BusinessEntity.DTO.BAAPInvoiceItemSyncDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add invice item .
            </summary>
            <param name="invoiceItemSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAARInvoiceAttachmentDS">
            <summary>
             This class implements standard business logic and operations for BAARinvoiceAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBAARInvoiceAttachmentRepository)">
            <summary>
            
            </summary>
            <param name="invoiceAttachmentRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceAttachmentDS.AddARInvoiceAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAARInvoiceAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAARInvoiceDS">
            <summary>
            Class contains invoice supportive methods.
            1) Conatins required get invoice methods.
            2) Conatins add/update/delete methods.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.#ctor(ewApps.BusinessEntity.IQNotificationDS,ewApps.BusinessEntity.Data.IBAARInvoiceRepository,ewApps.BusinessEntity.DS.IBAARInvoiceItemDS,ewApps.BusinessEntity.DS.IBAARInvoiceAttachmentDS,ewApps.BusinessEntity.DS.IBACustomerDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.Core.DMService.IDMDocumentDS,ewApps.BusinessEntity.QData.IQBAInvoiceRepository,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler,ewApps.Core.UserSessionService.IUserSessionManager,Microsoft.Extensions.Logging.ILogger{ewApps.BusinessEntity.DS.BAARInvoiceDS})">
            <summary>
            Default constructor with ARInvoice respository parameter.
            </summary>
            <param name="arInvoiceRepo"></param>
            <param name="invoiceItemDS"></param>
            <param name="identityDataService"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.IsInvoiceExistAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Whether invoice exists.
            </summary>
            <param name="erpARInvoiceKey">ERP invoice unique key.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.GetInvoiceAttachmentListByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice attachment list.
            </summary>
            <param name="invoiceId">Invoice id.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.AddInvoiceListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAARInvoiceSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.AddInvoiceAsync(ewApps.BusinessEntity.DTO.BAARInvoiceSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add invoice and its child data .
            </summary>
            <param name="invoiceSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.AddInvoiceAsync(ewApps.BusinessEntity.DTO.AddBAARInvoiceDTO,System.Threading.CancellationToken)">
            <summary>
            Add invoice when application run in standalone.
            </summary>
            <param name="invoiceDTO">Invoice add object.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.AddInvoiceAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add invoice.
            </summary>
            <param name="httpRequest">httpRequest object</param>
            <param name="token">Cancellation token for async operations</param>   
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.UpdateInvoiceAmountAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAARInvoiceEntityDTO},System.Threading.CancellationToken)">
            <summary>
            Update invoice when make payment in standalone.
            </summary>
            <param name="listinvoiceDTO">Invoice object.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.CancelInvoiceAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Cancel invoice by invoice id.
            </summary>
            <param name="invoiceId">Invoiceid</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.DeleteInvoiceAttachment(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes document with all child reference like Thumbnail, Comment etc.
            </summary>
            <param name="documentId"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.UpdateInvoiceAsync(ewApps.BusinessEntity.DTO.BAARInvoiceSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add invoice and its child data .
            </summary>
            <param name="invoiceSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.IsInvoiceExistsAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Invoice exist for customer.
            </summary>
            <param name="customerId">CustomerId</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.GetInvoiceByERPInvoiceKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get invoice.
            </summary>
            <param name="erpARInvoiceKey">ERP invoice unique key.</param>        
            <returns>return invoice entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceDS.GetInvoiceByTenant(ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice list.
            Invoice list will be filter by Tenant and from/todate.
            </summary>
            <param name="filter">Contains filter clause to get filter invoice list.</param>
            <param name="tenatId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAARInvoiceItemDS">
            <summary>
            Class contains invoice item supportive methods.
            1) Conatins required get invoice itemmethods.
            2) Conatins add/update/delete methods.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceItemDS.#ctor(ewApps.BusinessEntity.Data.IBAARInvoiceItemRepository,ewApps.BusinessEntity.DS.IBAItemMasterDS)">
            <summary>
            Constructor 
            </summary>
            <param name="arInvoiceItemRepo">Invoiceitem data repo class.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceItemDS.GetInvoiceItemListByInvoiceIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice items by invoice id.
            </summary>
            <param name="invoiceId">InvoiceID</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceItemDS.AddInvoiceItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAARInvoiceItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceItemDS.AddInvocieItemAsync(ewApps.BusinessEntity.DTO.BAARInvoiceItemSyncDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add invice item .
            </summary>
            <param name="invoiceItemSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceItemDS.AddBAARInvoiceItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.AddBAARInvoiceItemDTO},System.Guid,System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAARInvoiceItemDS.AddBAARInvocieItemAsync(ewApps.BusinessEntity.DTO.AddBAARInvoiceItemDTO,System.Guid,System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            add invice item .
            </summary>
            <param name="invoiceItemDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBAASNAttachmentRepository)">
            <summary>
            
            </summary>
            <param name="asnAttachmentRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNAttachmentDS.AddASNAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAASNAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNAttachmentDS.GetASNAttachmentListByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNAttachmentDS.GetASNAttachmentListByASNIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNDS.#ctor(ewApps.BusinessEntity.Data.IBAASNRepositorty,ewApps.BusinessEntity.DS.IBAASNItemDS,ewApps.BusinessEntity.DS.IBACustomerDS,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.IQNotificationDS,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler)">
            <summary>
            
            </summary>
            <param name="contractRepositorty"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNDS.AddASNListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAASNSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNDS.AddASNAsync(ewApps.BusinessEntity.DTO.BAASNSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation and its child data .
            </summary>
            <param name="contractSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNDS.UpdateASNAsync(ewApps.BusinessEntity.DTO.BAASNSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation and its child data .
            </summary>
            <param name="asnSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNDS.GetASNListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.String,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNDS.GetASNDetailByASNIdAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNDS.GetASNListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNDS.GetASNDetailByASNIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNItemDS.#ctor(ewApps.BusinessEntity.Data.IBAASNItemRepositorty,ewApps.BusinessEntity.DS.IBAItemMasterDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BAContractItemDS"/> class.
            </summary>
            <param name="contractItemRepo">The contract item repo.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNItemDS.AddASNItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAASNItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAASNItemDS.AddASNItemAsync(ewApps.BusinessEntity.DTO.BAASNItemSyncDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation item data .
            </summary>
            <param name="asnItemSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="asnId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAContractAttachmentDS">
            <summary>
             This class implements standard business logic and operations for BAContractAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBAContractAttachmentRepository)">
            <summary>
            
            </summary>
            <param name="contractAttachmentRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractAttachmentDS.AddContractAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAContractAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractAttachmentDS.GetContractAttachmentListByContractIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractAttachmentDS.GetContractAttachmentListByContractIdForCustAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAContractDS">
            <summary>
             This class implements standard business logic and operations for BAContract entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractDS.#ctor(ewApps.BusinessEntity.Data.IBAContractRepository,ewApps.BusinessEntity.DS.IBAContractItemDS,ewApps.BusinessEntity.DS.IBAContractAttachmentDS,ewApps.BusinessEntity.DS.IBACustomerDS,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.IQNotificationDS,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler)">
            <summary>
            
            </summary>
            <param name="contractRepositorty"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractDS.GetContractListByTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractDS.GetContractDetailByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractDS.GetContractListByTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractDS.GetContractDetailByContractIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractDS.AddContractListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAContractSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractDS.AddContractAsync(ewApps.BusinessEntity.DTO.BAContractSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation and its child data .
            </summary>
            <param name="contractSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractDS.UpdateContractAsync(ewApps.BusinessEntity.DTO.BAContractSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update Draft Delivery and its child data .
            </summary>
            <param name="contractSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAContractItemDS">
            <summary>
             This class implements standard business logic and operations for BAContractItem entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractItemDS.#ctor(ewApps.BusinessEntity.Data.IBAContractItemRepository,ewApps.BusinessEntity.DS.IBAItemMasterDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BAContractItemDS"/> class.
            </summary>
            <param name="contractItemRepo">The contract item repo.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractItemDS.GetContractItemListByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractItemDS.GetContractItemListByContractIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractItemDS.AddContractItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAContractItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAContractItemDS.AddContractItemAsync(ewApps.BusinessEntity.DTO.BAContractItemSyncDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation item data .
            </summary>
            <param name="contractItemSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="contractId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAVendorContractDS">
            <summary>
             This class implements standard business logic and operations for BAVendorContract entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContractDS.#ctor(ewApps.BusinessEntity.Data.IBAVendorContractRepository,ewApps.BusinessEntity.DS.IBAContractItemDS,ewApps.BusinessEntity.DS.IBAContractAttachmentDS,ewApps.BusinessEntity.DS.IBAVendorDS,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.IQNotificationDS,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler)">
            <summary>
            
            </summary>
            <param name="contractRepositorty"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContractDS.GetContractListByTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContractDS.GetContractDetailByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the contract detail by business tenant id and contract identifier.
            </summary>
            <param name="businessTenantId">The business tenant identifier.</param>
            <param name="contractId">The contract identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns contract detail that matches given business tenant  and contract id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContractDS.GetContractListByTenantIdAsyncForVendor(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContractDS.GetContractDetailByContractIdForVendorAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContractDS.AddContractListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAVendorContractSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContractDS.AddContractAsync(ewApps.BusinessEntity.DTO.BAVendorContractSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation and its child data .
            </summary>
            <param name="contractSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContractDS.UpdateContractAsync(ewApps.BusinessEntity.DTO.BAVendorContractSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update Draft Delivery and its child data .
            </summary>
            <param name="contractSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BACustomerAddressDS">
            <summary>
            This class implements standard business logic and operations for BACustomerAddress entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerAddressDS.#ctor(ewApps.BusinessEntity.Data.IBACustomerAddressRepository,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            Initialinzing local variables .
            </summary>
            <param name="customerAddressRepo"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerAddressDS.AddCustomerAddressListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerAddressSyncDTO},System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerAddressDS.GetCustomerAddressListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="customerId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerAddressDS.GetCustomerAddressEntityListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer address entity list.
            </summary>
            <param name="customerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerAddressDS.DeleteCustomerAddressAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            To delete customer address associated with Customer.
            </summary>
            <param name="customerId"></param>
            <param name="commit"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BACustomerContactDS">
            <summary>
            This class implements standard business logic and operations for BACustomerContactDS entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerContactDS.#ctor(ewApps.BusinessEntity.Data.IBACustomerContactRepository,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="customerContactRepo"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerContactDS.AddCustomerContactListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerContactSyncDTO},System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerContactDS.GetCustomerContactListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="customerId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerContactDS.GetCustomerContactListByCustomerIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerContactDS.DeleteCustomerAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            To delete customer contact associated with Customer.
            </summary>
            <param name="customerId"></param>
            <param name="commit"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BACustomerDS">
            <summary>
            This class implements standard business logic and operations for BACustomer entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.#ctor(ewApps.BusinessEntity.Data.IBACustomerRepository,ewApps.BusinessEntity.DS.IBACustomerAddressDS,ewApps.BusinessEntity.DS.IBACustomerContactDS,ewApps.BusinessEntity.DS.IBACustomerPaymentDetailDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.IQNotificationDS,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler)">
            <summary>
            Initialinzing local variables .
            </summary>
            <param name="customerRepo"></param>
            <param name="customerAddressDS"></param>
            <param name="customerContactDS"></param>
            <param name="customerPaymentDetailDS"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.GetCustomerListByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="tenantId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.GetCustomerListByStatusAndTenantIdAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="tenantId">TenantId</param>
            <param name="status">Status of customer</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.GetCustomerDetailByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="CustomerId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.GetCustomerListForBizSetupApp(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="tenantId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.GetCustomerDetailForBizSetupApp(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="CustomerId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.GetCustomerDetailByIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.UpdateCustomerAndContactDetailAsync(ewApps.BusinessEntity.DTO.BusBACustomerDetailDTO,System.Threading.CancellationToken)">
            <summary>
            Update customer and customercontact list.
            </summary>
            <param name="custContactDetailDTO">Detail object of customer and contact list.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.AddUpdateCustomerAddressAsync(ewApps.BusinessEntity.DTO.BusBACustomerDetailDTO,ewApps.BusinessEntity.Entity.BACustomer,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add/Update customer address list.
            </summary>
            <param name="custDetailDTO"></param>
            <param name="customer"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.UpdateCustomerContactAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.CustomerContactDTO},ewApps.BusinessEntity.Entity.BACustomer,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update customer contact list.
            </summary>
            <param name="CustomerContactList"></param>
            <param name="customer"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.AddUpdateCustomerSetupAddressAsync(ewApps.BusinessEntity.DTO.BusCustomerUpdateDTO,ewApps.BusinessEntity.Entity.BACustomer,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add/Update customer address list.
            </summary>
            <param name="custDetailDTO"></param>
            <param name="customer"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.BACustomerUpdateAsync(ewApps.BusinessEntity.DTO.CustConfigurationUpdateDTO,System.Threading.CancellationToken)">
            <summary>
            Update Customer Details
            </summary>
            <param name="custConfigurationUpdateDTO"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.ManageCustomerSetupAddressAsync(ewApps.BusinessEntity.DTO.CustConfigurationUpdateDTO,ewApps.BusinessEntity.Entity.BACustomer,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add/Update customer address list.
            </summary>
            <param name="custDetailDTO"></param>
            <param name="customer"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerDS.DeleteCustomerAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Method will delete customer and its associated data.
            </summary>
            <param name="baCustomerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BACustomerPaymentDetailDS">
            <summary>
            This class implements standard business logic and operations for BACustomerPaymentDetailDS entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerPaymentDetailDS.#ctor(ewApps.BusinessEntity.Data.IBACustomerPaymentDetailRepository)">
            <summary>
            Initialinzing local variables .
            </summary>
            <param name="customerPaymentDetailRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BACustomerPaymentDetailDS.AddCustomerPaymentDetailListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerPaymentDetailSyncDTO},System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BADeliveryAttachmentDS">
            <summary>
             This class implements standard business logic and operations for BADeliveryAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBADeliveryAttachmentRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BADeliveryAttachmentDS"/> class.
            </summary>
            <param name="deliveryAttachmentRepo">The delivery attachment repo.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryAttachmentDS.AddDeliveryAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BADeliveryAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryAttachmentDS.GetDeliveryAttachmentListByDeliveryIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BADeliveryDS">
            <summary>
            This class manages the CRUD operations related methods and business logics for delviery entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryDS.#ctor(ewApps.BusinessEntity.Data.IBADeliveryRepository,ewApps.BusinessEntity.DS.IBADeliveryItemDS,ewApps.BusinessEntity.DS.IBADeliveryAttachmentDS,ewApps.BusinessEntity.DS.IBACustomerDS,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.IQNotificationDS,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler)">
            <summary>
            Public constructor for deliveryDS class.
            </summary>
            <param name="deliveryRepo">Repository class dependancy for delviery.</param>
            <param name="deliveryItemDS">data class dependancy for delviery item.</param>
            <param name="customerDS">data class dependancy for customer.</param>
            <param name="unitOfWork"> dependancy for IUnitOfWork.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryDS.AddDeliveryListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BADeliverySyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryDS.AddDeliveryListAsync(ewApps.BusinessEntity.DTO.BADeliverySyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add delivery and its child data .
            </summary>
            <param name="deliverySyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryDS.UpdateDeliveryListAsync(ewApps.BusinessEntity.DTO.BADeliverySyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update delivery and its child data .
            </summary>
            <param name="deliverySyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryDS.GetDeliveryListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryDS.GetDeliveryDetailByDeliveryIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery detail with items by delivery identifier.
            </summary>
            <param name="deliveryId">The delivery identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns delivery detail with items that matches provided delivery id.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryDS.GetDeliveryListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryDS.GetDeliveryDetailByDeliveryIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the delivery detail with items by delivery identifier.
            </summary>
            <param name="deliveryId">The delivery identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Returns delivery detail with items that matches provided delivery id.</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BADeliveryItemDS">
            <summary>
            This class manages the CRUD operations related methods and business logics for deliveryItemR entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryItemDS.#ctor(ewApps.BusinessEntity.Data.IBADeliveryItemRepository,ewApps.BusinessEntity.DS.IBAItemMasterDS)">
            <summary>
            Public constructor for DeliveryItemDS class.
            </summary>
            <param name="deliveryItemRepo">Repository class dependancy for delviery item.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryItemDS.AddDeliveryItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BADeliveryItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryItemDS.AddDeliveryItemAsync(ewApps.BusinessEntity.DTO.BADeliveryItemSyncDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add delivery item.
            </summary>
            <param name="deliveryItemSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryItemDS.GetDeliveryItemNameListByDeliveryIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryItemDS.GetDeliveryItemListByDeliveryId(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BADeliveryItemDS.GetDeliveryItemListByDeliveryIdForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBAItemAttachmentRepository)">
            <summary>
            
            </summary>
            <param name="itemAttachmentRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterAttachmentDS.AddItemAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAItemMasterAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterAttachmentDS.GetItemAttachmentListByItemIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAItemMasterDS">
            <summary>
            This class implements standard business logic and operations for BAItemMaster entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.#ctor(ewApps.BusinessEntity.Data.IBAItemMasterRepository,ewApps.BusinessEntity.QData.IQBAItemMasterRepository,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.Core.DMService.IDMDocumentDS,ewApps.BusinessEntity.DS.IBAItemAttachmentDS,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            Initialinzing local variables .
            </summary>
            <param name="itemMasterRepo"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.AdditemMasterListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAItemMasterSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.AddItemMasterAsync(ewApps.BusinessEntity.DTO.BAItemMasterSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add item master data.
            </summary>
            <param name="itemMasterSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.UpdateItemMasterAsync(ewApps.BusinessEntity.DTO.BAItemMasterSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add item master data.
            </summary>
            <param name="itemMasterSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.GetItemMasterListByBusTenantIdAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.GetItemMasterByBusTenantIdAndItemIdAsync(System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.AddItemMasterByBusinessAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add item master business portal payment application
            </summary>
            <param name="httpRequest"></param>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.GetItemMasterListByBusTenantIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAItemMasterDS.GetItemMasterByBusTenantIdAndItemIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="itemId">item id identifier</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAPurchaseInquiryDS">
            <summary>
            Contains purchase inquiry required methods to add/update/delete operation.
            Also contains method for getting purchase inquiry.
            </summary>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAPurchaseInquiryItemDS">
            <summary>
            This class manages the CRUD operations related methods and business logics for PurchaseInquiryItem entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseInquiryItemDS.#ctor(ewApps.BusinessEntity.Data.IBAPurchaseInquiryItemRepository)">
            <summary>
            Public constructor for PurchaseInquiryItemDS class.
            </summary>
            <param name="purchaseInquiryItemRepo">Repository class dependancy for enquiry item.</param>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAPurchaseOrderAttachmentDS">
            <summary>
            This class implements standard business logic and operations for BAPurchaseOrderAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBAPurchaseOrderAttachmentRepository,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="repository"></param>
            <param name="sessionmanager"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderAttachmentDS.GetPurchaseOrderAttachmentListByOrderIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order attachment list.
            </summary>
            <param name="pOrderId">Purchase orderid.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderAttachmentDS.AddPurchaseOrderAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAPurchaseOrderAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAPurchaseOrderDS">
            <summary>
            Contains purchase Order required methods to add/update/delete operation.
            Also contains method for getting purchase Order.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.#ctor(ewApps.BusinessEntity.Data.IBAPurchaseOrderRepository,ewApps.BusinessEntity.DS.IBAPurchaseOrderItemDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.BusinessEntity.DS.IBAPurchaseOrderAttachmentDS,ewApps.Core.DMService.IDMDocumentDS,ewApps.BusinessEntity.DS.IBAVendorDS,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            Pucrahse order.
            </summary>
            <param name="purchaseOrderRepo">Purchorder repository class to interact with database.</param>
            <param name="identityDataService"></param>
            <param name="purchaseOrderItemDS">PurchaseOrderItemService.</param>
            <param name="purchaseOrderAttachmentDS">PurchaseOrderAttachmentDS</param>
            <param name="documentDS"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsync(ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get purchase order list by tenantid.
            </summary>
            <param name="listDateFilterDTO">filter object</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.GetPurcahseDetailByPOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order detail by purcheid and tenant id.
            </summary>
            <param name="businessTenantId">Business tenantid</param>
            <param name="poId">purchase order id.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.GetPurchaseOrderAttachmentListByOrderIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order attachment list.
            </summary>
            <param name="pOrderId">Purchase orderid.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.AddPurchaseOrderListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAPurchaseOrderSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.AddPurchaseOrderAsync(ewApps.BusinessEntity.DTO.BAPurchaseOrderSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add Purchase order and its child data .
            </summary>
            <param name="PurchaseOrderSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.UpdatePurchaseOrderAsync(ewApps.BusinessEntity.DTO.BAPurchaseOrderSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add Purchase order and its child data .
            </summary>
            <param name="PurchaseOrderSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.AddPurchaseOrder(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Add purchaseOrder, order items and attachments.
            </summary>
            <param name="httpRequest">Contains purchase order attachment</param>
            <param name="request">AddBAPurchaseOrderDTO model in json string.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderDS.AddPurchaseOrderAttachmentAsync(System.Guid,ewApps.BusinessEntity.Entity.BAPurchaseOrder,Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            Add purchase ordr attachment.
            </summary>
            <param name="attachmentId"></param>
            <param name="purchaseOrder"></param>
            <param name="file"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderItemDS.#ctor(ewApps.BusinessEntity.Data.IBAPurchaseOrderItemRepository,ewApps.BusinessEntity.DS.IBAItemMasterDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            BAPurchaseOrderItemDS
            </summary>
            <param name="bAPurchaseOrderItemRepository"></param>
            <param name="identityDataService"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderItemDS.AddPurchaseOrderItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAPurchaseOrderItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAPurchaseOrderItemDS.AddPurchaseOrderItemLiast(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAPurchaseOrderItemDTO},ewApps.BusinessEntity.Entity.BAPurchaseOrder,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Add purchaseorder item list.
            </summary>
            <param name="OrderItemList">Purchase OrderItemList</param>
            <param name="pOrder"></param>
            <param name="commit">Commit changes.</param>
            <param name="token">Cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BASalesOrderAttachmentDS">
            <summary>
             This class implements standard business logic and operations for BASalesOrderAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBASalesOrderAttachmentRepository)">
            <summary>
            
            </summary>
            <param name="salesOrderAttachmentRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderAttachmentDS.AddSalesOrderAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesOrderAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderAttachmentDS.GetSalesOrderAttachmentListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderAttachmentDS.GetSalesOrderAttachmentListByIdForCustAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BASalesOrderDS">
            <summary>
            Contains sales order required methods to add/update/delete operation.
            Also contains method for getting sales order.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.#ctor(ewApps.BusinessEntity.IQNotificationDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.BusinessEntity.Data.IBASalesOrderRepository,ewApps.BusinessEntity.DS.IBASalesOrderItemDS,ewApps.BusinessEntity.DS.IBACustomerDS,ewApps.BusinessEntity.DS.IBASalesOrderAttachmentDS,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler)">
            <summary>
            default constructor.
            </summary>
            <param name="baSalesOrderRepository"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.GetSalesOrderListByTenantIdAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales order item list by teanntid.
            </summary>
            <param name="tenantId">Tenant unique id.</param>
            <param name="includeDeleted">return sales order with deleted items.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.GetSalesOrderDetailBySOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.GetSalesOrderDetailBySOIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.AddSalesOrderListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesOrderSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.AddSalesOrderAsync(ewApps.BusinessEntity.DTO.BASalesOrderSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales order and its child data .
            </summary>
            <param name="salesOrderSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.AddUpdateSalesOrderAsync(ewApps.BusinessEntity.DTO.BASalesOrderSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales order and its child data .
            </summary>
            <param name="salesOrderSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderDS.UpdateSalesOrderAsync(ewApps.BusinessEntity.DTO.BASalesOrderSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales order and its child data .
            </summary>
            <param name="salesOrderSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BASalesOrderItemDS">
            <summary>
            Contains sales order items required methods to add/update/delete operation.
            Also contains method for getting sales order items.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.#ctor(ewApps.BusinessEntity.Data.IBASalesOrderItemRepository,ewApps.BusinessEntity.DS.IBAItemMasterDS)">
            <summary>
            default constructor.
            </summary>
            <param name="baSalesOrderItemRepository"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.GetSalesOrderItemsListBySalesOrderIdAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales order item list by teanntid.
            </summary>
            <param name="salesOrderId">salesOrderId unique id.</param>
            <param name="includeDeleted">return all sales order item with deleted items if flag is true.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.GetSalesOrderItemsListByERPSalesOrderKeyAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales order item list by ERP sales order key.
            </summary>
            <param name="erpSalesOrderKey">salesOrderKey unique key of connector.</param>
            <param name="includeDeleted">return all sales order item with deleted items if flag is true.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.GetSalesOrderItemListBySOIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.AddSalesOrderItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesOrderItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.AddSalesOrderItemListAsyncForCust(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.CustBASalesOrderItemDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.AddSalesOrderItemAsyncForCust(ewApps.BusinessEntity.DTO.CustBASalesOrderItemDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.UpdateSalesOrderItemListAsyncForCust(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.CustBASalesOrderItemDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesOrderItemDS.DeleteSalesOrderItemsByOrderIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BASalesQuotationAttachmentDS">
            <summary>
             This class implements standard business logic and operations for BASalesQuotationAttachment entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationAttachmentDS.#ctor(ewApps.BusinessEntity.Data.IBASalesQuotationAttachmentRepository)">
            <summary>
            
            </summary>
            <param name="salesQuotationAttachmentRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationAttachmentDS.AddSalesQuotationAttachmentListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesQuotationAttachmentSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationAttachmentDS.GetSalesQuotationAttachmentListBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationAttachmentDS.GetSalesQuotationAttachmentListBySalesQuotationIdForCustAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BASalesQuotationDS">
            <summary>
            Contains sales quotation required methods to add/update/delete operation.
            Also contains method for getting sales quotation.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.#ctor(ewApps.BusinessEntity.Data.IBASalesQuotationRepository,ewApps.BusinessEntity.DS.IBASalesQuotationItemDS,ewApps.BusinessEntity.DS.IBASalesQuotationAttachmentDS,ewApps.BusinessEntity.DS.IBACustomerDS,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            default constructor.
            </summary>
            <param name="baSalesQuotationRepository"></param>
            <param name="salesQuotationItemDS"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.GetSalesQuotationListByTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get BASales Quotation list by teanntid.
            </summary>
            <param name="tenantId">Tenant unique id.</param>
            <param name="includeDeleted">return BASalesQuotation with deleted items.</param>        
            <returns>return list of BASalesQuotation entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.GetSalesQuotationByERPKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get BASales Quotation by ERP unique key.
            </summary>
            <param name="erpSalesQuotationKey">SalesQuotationKey is a ERP unique key.</param>
            <param name="token"></param>
            <returns>return BASalesQuotation entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.GetSalesQuotationListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.GetSalesQuotationListByPartnerTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.AddSalesQuotationListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesQuotationSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.AddSalesQuotationAsync(ewApps.BusinessEntity.DTO.BASalesQuotationSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation and its child data .
            </summary>
            <param name="salesQuotationSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationDS.UpdateSalesQuotationAsync(ewApps.BusinessEntity.DTO.BASalesQuotationSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation and its child data .
            </summary>
            <param name="salesQuotationSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BASalesQuotationItemDS">
            <summary>
            Contains sales quotation required methods to add/update/delete operation.
            Also contains method for getting sales quotation.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationItemDS.#ctor(ewApps.BusinessEntity.Data.IBASalesQuotationItemRepository,ewApps.BusinessEntity.DS.IBAItemMasterDS)">
            <summary>
            default constructor.
            </summary>
            <param name="baSalesQuotationRepository"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationItemDS.GetSalesQuotationItemsListBySalesOrderIdAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales quotration item list by teanntid.
            </summary>
            <param name="salesQuotationId">salesQuotationId unique id.</param>
            <param name="includeDeleted">return all sales quotation item with deleted items if flag is true.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationItemDS.GetSalesQuotationItemsListByERPSalesOrderKeyAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get sales quotation item list by ERP sales quotation key.
            </summary>
            <param name="erpSalesQuotationKey">erpSalesQuotationKey unique key of connector.</param>
            <param name="includeDeleted">return all sales order item with deleted items if flag is true.</param>        
            <returns>return list of sales order entity.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationItemDS.GetSalesQuotationItemListBySalesQuotationId(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationItemDS.GetSalesQuotationItemListBySalesQuotationIdForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationItemDS.GetSalesQuotationItemListBySalesQuotationId(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationItemDS.AddSalesQuotationItemListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BASalesQuotationItemSyncDTO},System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BASalesQuotationItemDS.AddSalesQuotationItemAsync(ewApps.BusinessEntity.DTO.BASalesQuotationItemSyncDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add sales quotation item data .
            </summary>
            <param name="salesQuotationItemSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAVendorAddressDS">
            <summary>
            This class implements standard business logic and operations for BAVendorAddress entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorAddressDS.#ctor(ewApps.BusinessEntity.Data.IBAVendorAddressRepository,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="repository"></param>
            <param name="sessionmanager"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorAddressDS.GetVendorAddressListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get vendorId list.
            </summary>
            <param name="vendorId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorAddressDS.GetVendorAddressEntityListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get vendorId address entity list.
            </summary>
            <param name="vendorId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAVendorContactDS">
            <summary>
            This class implements standard business logic and operations for BAVendorContact entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContactDS.#ctor(ewApps.BusinessEntity.Data.IBAVendorContactRepository,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="repository"></param>
            <param name="sessionmanager"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContactDS.GetVendorContactListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get vendorId list.
            </summary>
            <param name="customerId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorContactDS.GetVendorContactListByVendorIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BAVendorDS">
            <summary>
            This class implements standard business logic and operations for BAVendor entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.#ctor(ewApps.BusinessEntity.Data.IBAVendorRepository,ewApps.BusinessEntity.DS.IBAVendorAddressDS,ewApps.BusinessEntity.DS.IBAVendorContactDS,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,Microsoft.Extensions.Options.IOptions{ewApps.BusinessEntity.Common.BusinessEntityAppSettings})">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="repository"></param>
            <param name="sessionmanager"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.GetVendorListByTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="tenantId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.GetVendorListByStatusAndTenantIdAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="tenantId">TenantId</param>
            <param name="status">Status of customer</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.GetVendorDetailByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="vendorId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.GetVendorListForBizSetupApp(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="tenantId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.GetVendorDetailForBizSetupApp(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer list.
            </summary>
            <param name="CustomerId">Tenant id.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.AddVendorListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BAVendorSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.AddVendorAsync(ewApps.BusinessEntity.DTO.BAVendorSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Signs up.
            </summary>
            <param name="customerSyncDTO">The customer synchronize dto.</param>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.UpdateVendorAsync(ewApps.BusinessEntity.DTO.BAVendorSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Signs up.
            </summary>
            <param name="customerSyncDTO">The customer synchronize dto.</param>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.AddUpdateVendorSetupAddressAsync(ewApps.BusinessEntity.DTO.BusVendorUpdateDTO,ewApps.BusinessEntity.Entity.BAVendor,System.Guid,System.Threading.CancellationToken)">
            <summary>
            add/Update customer address list.
            </summary>
            <param name="vendDetailDTO"></param>
            <param name="vendor"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BAVendorDS.UpdateVendorContactAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.VendorContactDTO},ewApps.BusinessEntity.Entity.BAVendor,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update customer contact list.
            </summary>
            <param name="vendorContactList"></param>
            <param name="vendor"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.CustomerSignupDS">
            <summary>
            This class implements standard business logic and operations for customer entity data from connectors to local database.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustomerSignupDS.#ctor(ewApps.BusinessEntity.DS.IBACustomerDS,ewApps.BusinessEntity.DS.IBACustomerAddressDS,ewApps.BusinessEntity.DS.IBACustomerContactDS,ewApps.BusinessEntity.DS.IBACustomerPaymentDetailDS,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.BusinessEntity.IQNotificationDS,ewApps.BusinessEntity.DS.IBusinessEntityNotificationHandler,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,Microsoft.Extensions.Options.IOptions{ewApps.BusinessEntity.Common.BusinessEntityAppSettings})">
            <summary>
            initilize constructor
            </summary>
            <param name="customerDs"></param>
            <param name="custAddressDS"></param>
            <param name="custContactDS"></param>
            <param name="custPayDetDS"></param>
            <param name="unitOfWork"></param>
            <param name="appSettings"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustomerSignupDS.AddCustomerListAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerSyncDTO},System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustomerSignupDS.SignUp(ewApps.BusinessEntity.DTO.BACustomerSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Signs up.
            </summary>
            <param name="customerSyncDTO">The customer synchronize dto.</param>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustomerSignupDS.AddUpdateCustomerAddresAsync(ewApps.BusinessEntity.DTO.BACustomerAddressSyncDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add Update Customer Address 
            </summary>
            <param name="customerAddSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="customerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustomerSignupDS.AddUpdateCustomerContactAsync(ewApps.BusinessEntity.DTO.BACustomerContactSyncDTO,System.Guid,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Add Update Customer Contact
            </summary>
            <param name="customerContactSyncDTO"></param>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <param name="customerId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustomerSignupDS.UpdateCustomerAsync(ewApps.BusinessEntity.DTO.BACustomerSyncDTO,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Signs up.
            </summary>
            <param name="customerSyncDTO">The customer synchronize dto.</param>
            <param name="tenantId">The tenant identifier.</param>
            <param name="tenantUserId">The tenant user identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustomerSignupDS.SignUpCustomerAsync(ewApps.BusinessEntity.DTO.SignUpBACustomerDTO,System.Threading.CancellationToken)">
            <summary>
            Signs up customer.
            </summary>
            <param name="customerSyncDTO">customer dto.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ERPConfigDS.#ctor(ewApps.BusinessEntity.Data.IERPConnectorConfigRepository,ewApps.Core.UserSessionService.IUserSessionManager,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            default constructor.
            </summary>
            <param name="systemConfigRep"></param>
            <param name="userSessionManager"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ERPConfigDS.GetBusinessAppConnectorConfigByBusinessIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get all the Application list subscribed by a business tenant.
            </summary>
            <param name="businessId">Id of Business Tenant</param>
            <param name="token"></param>
            <returns>return list of application.</returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ERPConfigDS.GetConnectorConfigByTenantIdAndAppIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get business detail by tenantId And AppId.
            </summary>
            <param name="tenantId">Id of Business Tenant</param>
            <param name="appId">Id of Business Application</param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ERPConfigDS.AddBusinessConnectorConfigsAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.ERPConnectorConfigDTO},System.Threading.CancellationToken)">
            <summary>
            Adding configuration for tenant application.
            </summary>
            <param name="connectorConfigDTO">Client connector configuration setting for a tenant.</param>
            <param name="token"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ERPConfigDS.UpdateBusinessConnectorConfigsAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.ERPConnectorConfigDTO},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Adding/updating/deleting configuration for business.
            </summary>                
            <param name="connectorConfigDTO">Incoming connetor request is coming for add/update/delete.</param>
            <param name="token"></param>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ERPConnectorDS">
            <summary>
            This class implements standard business logic and operations for connector entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ERPConnectorDS.#ctor(ewApps.BusinessEntity.Data.IERPConnectorRepository)">
            <summary>
            Initializing local variables
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ERPConnectorDS.GetConnctorListAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.RoleDS">
            <summary>
            This class implements standard business logic and operations for role entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.RoleDS.#ctor(ewApps.BusinessEntity.Data.IRoleRepository,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="roleRepository"></param>
            <param name="unitOfWork"></param>
            <param name="mapper"></param>
            <param name="sessionmanager"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.RoleDS.GetAdminRoleIdByAppIdAndUserTypeAsync(System.Guid,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.RoleDS.GetOrCreateRoleAsync(System.Int64,System.Guid,System.Int32,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.RoleDS.GetEntityByAppUserAndAppId">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.RoleLinkingDS">
            <summary>
             This class implements standard business logic and operations for roleLinking entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.RoleLinkingDS.#ctor(ewApps.BusinessEntity.Data.IRoleLinkingRepository)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="roleLinkingRep"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.TenantUserAppPreferenceDS">
            <summary>
            This class implements standard business logic and operations for TenantUserAppPreference entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.TenantUserAppPreferenceDS.#ctor(ewApps.BusinessEntity.Data.ITenantUserAppPreferenceRepository,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            Initialinzing local variables
            </summary>
            <param name="tenantUserAppPreferenceRep"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.TenantUserAppPreferenceDS.GetUserPreferenceListByAppIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.TenantUserAppPreferenceDS.UpdatePreferenceListAsync(ewApps.BusinessEntity.DTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.TenantUserAppPreferenceDS.AddBEAppPreferenceListAsync(ewApps.BusinessEntity.DTO.PreferenceUpdateDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAASNDS.#ctor(ewApps.BusinessEntity.DS.IBAASNDS,ewApps.BusinessEntity.DS.IBAASNItemDS,ewApps.BusinessEntity.DS.IBAASNAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBAASNDS"/> class.
            </summary>
            <param name="bAASNDS">The ASN data service.</param>
            <param name="bAASNItemDS">The ASN item data service.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAASNDS.GetASNListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAASNDS.GetASNDetailByASNIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BusBAContractDS">
            <summary>
            This class defines contract entity operations for business tenant.
            </summary>
            <seealso cref="T:ewApps.BusinessEntity.DS.IBusBAContractDS" />
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAContractDS.#ctor(ewApps.BusinessEntity.DS.IBAContractDS,ewApps.BusinessEntity.DS.IBAContractItemDS,ewApps.BusinessEntity.DS.IBAContractAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBAContractDS"/> class.
            </summary>
            <param name="bAContractDS">The contract data service.</param>
            <param name="bAContractItemDS">The contract item data service instance.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAContractDS.GetContractListByBusinessIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAContractDS.GetContractDetailByContractIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BusBADeliveryDS">
            <summary>
            This class implements <see cref="T:ewApps.BusinessEntity.Entity.BADelivery"/> entity operations for business.
            </summary>
            <seealso cref="T:ewApps.BusinessEntity.DS.IBusBADeliveryDS" />
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBADeliveryDS.#ctor(ewApps.BusinessEntity.DS.IBADeliveryDS,ewApps.BusinessEntity.DS.IBADeliveryItemDS,ewApps.BusinessEntity.DS.IBADeliveryAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBADeliveryDS"/> class.
            </summary>
            <param name="bADeliveryDS">The delivery data service instance.</param>
            <param name="bADeliveryItemDS">The delivery item data service instance.</param>
            <param name="bADeliveryAttachmentDS">The dleivery attachment data service instace.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBADeliveryDS.GetDeliveryListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBADeliveryDS.GetDeliveryItemNameListByDeliveryIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBADeliveryDS.GetDeliveryDetailByDeliveryIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAItemMasterDS.GetItemMasterListByBusTenantIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAItemMasterDS.GetItemMasterByBusTenantIdAndItemIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBAItemMasterDS.AddItemMasterByBusinessAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="httpRequest"></param>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.BusBASalesOrderDS">
            <summary>
            This class implements <see cref="T:ewApps.BusinessEntity.Entity.BASalesOrder"/> entity operations for business.
            </summary>
            <seealso cref="T:ewApps.BusinessEntity.DS.IBusBASalesOrderDS" />
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBASalesOrderDS.#ctor(ewApps.BusinessEntity.DS.IBASalesOrderDS,ewApps.BusinessEntity.DS.IBASalesOrderItemDS,ewApps.BusinessEntity.DS.IBASalesOrderAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBASalesOrderDS"/> class.
            </summary>
            <param name="bASODS">The sales order data service instance.</param>
            <param name="bASalesOrderItemDS">The sales order item data service instance.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBASalesOrderDS.GetSalesOrderDetailBySOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBASalesQuotationDS.#ctor(ewApps.BusinessEntity.DS.IBASalesQuotationDS,ewApps.BusinessEntity.DS.IBASalesQuotationItemDS,ewApps.BusinessEntity.DS.IBASalesQuotationAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBASalesQuotationDS"/> class.
            </summary>
            <param name="bASalesQuotationDS">The delivery data service instance.</param>       
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBASalesQuotationDS.GetSalesQuotationListByBusinessTenantIdAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBASalesQuotationItemDS.#ctor(ewApps.BusinessEntity.Data.IBASalesQuotationItemRepository)">
            <summary>
            Public constructor for DeliveryItemDS class.
            </summary>
            <param name="bASalesQuotationItemRepository">Repository class dependancy for delviery item.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BusBASalesQuotationItemDS.GetSalesQuotationItemListBySalesQuotationId(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBAASNDS.#ctor(ewApps.BusinessEntity.DS.IBAASNDS,ewApps.BusinessEntity.DS.IBAASNItemDS,ewApps.BusinessEntity.DS.IBAASNAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBAASNDS"/> class.
            </summary>
            <param name="bAASNDS">The ASN data service.</param>
            <param name="bAASNItemDS">The ASN item data service.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBAASNDS.GetASNListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBAASNDS.GetASNDetailByASNIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inhritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.CustBAContractDS">
            <summary>
            This class defines contract entity operations for business tenant.
            </summary>
            <seealso cref="T:ewApps.BusinessEntity.DS.IBusBAContractDS" />
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBAContractDS.#ctor(ewApps.BusinessEntity.DS.IBAContractDS,ewApps.BusinessEntity.DS.IBAContractItemDS,ewApps.BusinessEntity.DS.IBAContractAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBAContractDS"/> class.
            </summary>
            <param name="bAContractDS">The contract data service.</param>
            <param name="bAContractItemDS">The contract item data service instance.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBAContractDS.GetContractListByBusinessIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBAContractDS.GetContractDetailByContractIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.CustBADeliveryDS">
            <summary>
            This class implements <see cref="T:ewApps.BusinessEntity.Entity.BADelivery"/> entity operations for business.
            </summary>
            <seealso cref="T:ewApps.BusinessEntity.DS.IBusBADeliveryDS" />
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBADeliveryDS.#ctor(ewApps.BusinessEntity.DS.IBADeliveryDS,ewApps.BusinessEntity.DS.IBADeliveryItemDS,ewApps.BusinessEntity.DS.IBADeliveryAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBADeliveryDS"/> class.
            </summary>
            <param name="bADeliveryDS">The delivery data service instance.</param>
            <param name="bADeliveryItemDS">The delivery item data service instance.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBADeliveryDS.GetDeliveryListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBADeliveryDS.GetDeliveryDetailByDeliveryIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBAItemMasterDS.GetItemMasterListByBusTenantIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBAItemMasterDS.GetItemMasterByBusTenantIdAndItemIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the item master list by bus tenant identifier asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.CustBASalesOrderDS">
            <summary>
            This class implements <see cref="T:ewApps.BusinessEntity.Entity.BASalesOrder"/> entity operations for business.
            </summary>
            <seealso cref="T:ewApps.BusinessEntity.DS.IBusBASalesOrderDS" />
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBASalesOrderDS.#ctor(ewApps.BusinessEntity.DS.IAppSyncServiceDS,ewApps.BusinessEntity.DS.IBASalesOrderDS,ewApps.BusinessEntity.DS.IBASalesOrderItemDS,ewApps.BusinessEntity.DS.IBASalesOrderAttachmentDS,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBASalesOrderDS"/> class.
            </summary>
            <param name="bASODS">The sales order data service instance.</param>
            <param name="bASalesOrderItemDS">The sales order item data service instance.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBASalesOrderDS.GetSalesOrderListByBusinessTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBASalesOrderDS.GetSalesOrderDetailBySOIdAsyncForCust(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBASalesQuotationDS.#ctor(ewApps.BusinessEntity.DS.IBASalesQuotationDS,ewApps.BusinessEntity.DS.IBASalesQuotationItemDS,ewApps.BusinessEntity.DS.IBASalesQuotationAttachmentDS,ewApps.BusinessEntity.DS.IAppSyncServiceDS,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBASalesQuotationDS"/> class.
            </summary>
            <param name="bASalesQuotationDS">The delivery data service instance.</param>       
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBASalesQuotationDS.GetSalesQuotationListByPartnerTenantIdAsyncForCust(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBASalesQuotationDS.GetSalesQuotationDetailBySalesQuotationIdAsyncForCust(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.CustBASalesQuotationDS.AddSalesQuotationWithItem(ewApps.BusinessEntity.DTO.CustBASalesQuotationAddDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.VendorBAContractDS.#ctor(ewApps.BusinessEntity.DS.IBAVendorContractDS,ewApps.BusinessEntity.DS.IBAContractItemDS,ewApps.BusinessEntity.DS.IBAContractAttachmentDS)">
            <summary>
            Initializes a new instance of the <see cref="T:ewApps.BusinessEntity.DS.BusBAContractDS"/> class.
            </summary>
            <param name="bAContractDS">The contract data service.</param>
            <param name="bAContractItemDS">The contract item data service instance.</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.VendorBAContractDS.GetContractListByBusinessIdAsyncForVendorAsync(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.VendorBAContractDS.GetContractDetailByContractIdForVendorAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.VendorBAPurchaseOrderDS.#ctor(ewApps.BusinessEntity.Data.IBAPurchaseOrderRepository,ewApps.BusinessEntity.DS.IBAPurchaseOrderItemDS,ewApps.Core.UniqueIdentityGeneratorService.IUniqueIdentityGeneratorDS,ewApps.BusinessEntity.DS.IBAPurchaseOrderAttachmentDS,ewApps.Core.DMService.IDMDocumentDS,ewApps.BusinessEntity.DS.IBAVendorDS,ewApps.BusinessEntity.Data.IUnitOfWork)">
            <summary>
            Pucrahse order.
            </summary>
            <param name="purchaseOrderRepo">Purchorder repository class to interact with database.</param>
            <param name="identityDataService"></param>
            <param name="purchaseOrderItemDS">PurchaseOrderItemService.</param>
            <param name="purchaseOrderAttachmentDS">PurchaseOrderAttachmentDS</param>
            <param name="documentDS"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.VendorBAPurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsync(ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <summary>
            Get purchase order list by tenantid.
            </summary>
            <param name="listDateFilterDTO">filter object</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.VendorBAPurchaseOrderDS.GetPurchaseOrderListByBusinessTenantIdAsyncForVend(System.Guid,ewApps.BusinessEntity.DTO.ListDateFilterDTO,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.VendorBAPurchaseOrderDS.GetPurcahseDetailByPOIdAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order detail by purcheid and tenant id.
            </summary>
            <param name="businessTenantId">Business tenantid</param>
            <param name="poId">purchase order id.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceFactory.Register(System.String,ewApps.BusinessEntity.DS.ISyncServiceDS)">
            <summary>
            Register the Quote Data Service
            </summary>
            <param name="name">Name of the carrier</param>
            <param name="carrier">Data service class for the carrier</param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceFactory.Resolve(System.String)">
            <summary>
            Gets the Quote Data Service for given carrier
            </summary>
            <param name="name">Carrier Name</param>
            <returns>Carrier Data Service class</returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.SyncServiceFactory">
            <summary>
            Factory class to provide carrier based class for Rate/Quotation based on Carrier code
            </summary>
        </member>
        <member name="F:ewApps.BusinessEntity.DS.SyncServiceFactory._services">
            <summary>
            Dictionary to provide carrier based Data services for Rate service
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SyncServiceFactory.Register(System.String,ewApps.BusinessEntity.DS.ISyncServiceDS)">
            <inheritdoc/>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SyncServiceFactory.Resolve(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.IAppSyncServiceDS">
            <summary>
            Contains all required all methods which comunicate to v1 connector.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IAppSyncServiceDS.TestConnectionAsync(ewApps.BusinessEntity.DTO.BATestConnectionReqDTO,System.Threading.CancellationToken)">
            <summary>
            Test connection to V1 connector.
            </summary>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IAppSyncServiceDS.DeleteConnectionAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the connection asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="connectorKey">The connector key.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IAppSyncServiceDS.AddUpdateConnectionAsync(ewApps.BusinessEntity.DTO.BAAddConnectionReqDTO,System.Threading.CancellationToken)">
            <summary>
            Establish connection to V1 connector.
            </summary>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IAppSyncServiceDS.PullERPDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.IAppSyncServiceDS.ManageConnectorConfigsAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.ERPConnectorConfigDTO},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Adding/updating/deleting configuration for business.
            </summary>                
            <param name="connectorConfigDTO">Incoming connetor request is coming for add/update/delete.</param>
            <param name="tenantId"></param>
            <param name="token"></param>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ISyncHistoryDS">
            <summary>
            Responsible for exposing all the methods that are intrecting 
            with the DB for retriving the data related to SyncHistory entity.
            </summary>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ISyncServiceDS">
            <summary>
            Contains all required all methods which comunicate to v1 connector.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.TestConnectionAsync(ewApps.BusinessEntity.DTO.ConTestConnectionReqDTO,System.Threading.CancellationToken)">
            <summary>
            Test connection to V1 connector.
            </summary>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.AddConnectionAsync(ewApps.BusinessEntity.DTO.ConAddConnectionReqDTO,System.Threading.CancellationToken)">
            <summary>
            Establish connection to V1 connector.
            </summary>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.DeleteConnectionAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the connection asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="connectorKey">The connector key.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitBusinessDataAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitCustomerDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitItemMasterDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitSalesOrderDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitInvoiceDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitAPInvoiceDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitSalesQuotationDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitDeliveryDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitContractDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitVendorContractDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetInitASNDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetItemMasterAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get item Master Attachment by id .
            </summary>
            <param name="itemId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetSalesOrderAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Order Attachment by id .
            </summary>
            <param name="salesOrderId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetSalesQuotationAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Quotation Attachment by id .
            </summary>
            <param name="salesQuotationId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetDeliveryAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Delivery Attachment by id .
            </summary>
            <param name="deliveryId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetContractAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Contract Attachment by id .
            </summary>
            <param name="contractId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetASNAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get ASN Attachment by id .
            </summary>
            <param name="asnId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncServiceDS.GetARInvoiceAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice Attachment by id .
            </summary>
            <param name="invoiceId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.ISyncTimeLogDS">
            <summary>
            Responsible for exposing all the methods that are intrecting with 
            the DB for retriving the data related to SyncTimeLog entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncTimeLogDS.AddSyncTimeLogByStatus(System.Guid,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Add Sync Time log 
            </summary>
            <param name="ErpConnectorKey"></param>
            <param name="ErpCustomerKey"></param>
            <param name="Error"></param>
            <param name="Status"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.ISyncTimeLogDS.GetSyncTimeLogAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get SyncTimeLog
            </summary>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.AppSyncServiceDS">
            <summary>
            This class implements standard business logic and operations for Sync BA entity data from connectors to local database.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.#ctor(ewApps.BusinessEntity.DS.IBAItemMasterDS,ewApps.BusinessEntity.DS.ICustomerSignupDS,ewApps.BusinessEntity.DS.IBAVendorDS,ewApps.BusinessEntity.DS.IBASalesOrderDS,ewApps.BusinessEntity.DS.IBAARInvoiceDS,ewApps.BusinessEntity.DS.IBAAPInvoiceDS,ewApps.BusinessEntity.DS.IBASalesQuotationDS,ewApps.BusinessEntity.DS.IBADeliveryDS,ewApps.BusinessEntity.DS.IBAContractDS,ewApps.BusinessEntity.DS.IBAASNDS,ewApps.BusinessEntity.DS.IBAPurchaseOrderDS,ewApps.BusinessEntity.DS.IBAVendorContractDS,ewApps.BusinessEntity.DS.IAppMgmtDS,ewApps.BusinessEntity.DS.IAppPortalDS,ewApps.BusinessEntity.DS.IERPConfigDS,Microsoft.Extensions.Options.IOptions{ewApps.BusinessEntity.Common.BusinessEntityAppSettings},ewApps.BusinessEntity.DS.ISyncServiceFactory,ewApps.BusinessEntity.Data.IUnitOfWork,ewApps.BusinessEntity.DS.ISyncTimeLogDS,ewApps.Core.UserSessionService.IUserSessionManager)">
            <summary>
            Initilize constructor
            </summary>
            <param name="itemMasterDS"></param>
            <param name="customerSignupDS"></param>
            <param name="salesOrderDS"></param>
            <param name="invoiceDS"></param>
            <param name="salesQuotationDS"></param>
            <param name="deliveryDS"></param>
            <param name="contractDS"></param>
            <param name="eRPConfigDS"></param>
            <param name="appMgmtDS"></param> 
            <param name="appSetting"></param>
            <param name="syncServiceFactory"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.TestConnectionAsync(ewApps.BusinessEntity.DTO.BATestConnectionReqDTO,System.Threading.CancellationToken)">
            <summary>
            Test connection to V1 connector.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.AddUpdateConnectionAsync(ewApps.BusinessEntity.DTO.BAAddConnectionReqDTO,System.Threading.CancellationToken)">
            <summary>
            Establish connection to V1 connector.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullBusinessDataAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Busines from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPCustomerDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPVendorDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPItemMasterDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get itemmaster from connector and add in local database.
            </summary>
            <param name="request"></param> 
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPSalesOrderDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get sales order  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPPurchaseOrderDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get sales order  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPARInvoiceDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Invoice  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPAPInvoiceDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Invoice  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPSalesQuotationDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get sales Quotation  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPDeliveryDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Delivery  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPContractDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Contract  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPVendorContractDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Contract  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullERPASNDataAsync(ewApps.BusinessEntity.DTO.PullERPDataReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get ASN  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PullItemPriceAsync(ewApps.BusinessEntity.DTO.PullItemPriceReqDTO,System.Threading.CancellationToken)">
            <summary>
            Get item  from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PushSalesOrderDataInERPAsync(ewApps.BusinessEntity.DTO.BASalesOrderSyncDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Sync data from V1 connector to application
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PushSalesQuotationDataInERPAsync(ewApps.BusinessEntity.DTO.BASalesQuotationSyncDTO,System.Guid,System.Threading.CancellationToken)" -->
        <member name="M:ewApps.BusinessEntity.DS.AppSyncServiceDS.PostERPCustomerDataAsync(System.Collections.Generic.List{ewApps.BusinessEntity.DTO.BACustomerSyncDTO},System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer from connector and add in local database.
            </summary>
            <param name="request"></param>
            <param name="tenantUserId"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BMSyncServiceDS.GetItemMasterAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get item Master Attachment by id .
            </summary>
            <param name="itemId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BMSyncServiceDS.GetSalesOrderAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Order Attachment by id .
            </summary>
            <param name="salesOrderId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BMSyncServiceDS.GetSalesQuotationAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Quotation Attachment by id .
            </summary>
            <param name="salesQuotationId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BMSyncServiceDS.GetDeliveryAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Delivery Attachment by id .
            </summary>
            <param name="deliveryId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BMSyncServiceDS.GetContractAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Contract Attachment by id .
            </summary>
            <param name="contractId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BMSyncServiceDS.GetASNAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get ASN Attachment by id .
            </summary>
            <param name="asnId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.BMSyncServiceDS.GetARInvoiceAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice Attachment by id .
            </summary>
            <param name="invoiceId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.SAPSyncServiceDS">
            <summary>
            This class is responsible to manage connection and sync data from SAP ERP
            </summary>
            <seealso cref="T:ewApps.BusinessEntity.DS.ISyncServiceDS" />
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)">
            <summary>
            Initilize constructor
            </summary>   
            <param name="appSetting"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.TestConnectionAsync(ewApps.BusinessEntity.DTO.ConTestConnectionReqDTO,System.Threading.CancellationToken)">
            <summary>
            Test connection to SAP connector.
            </summary>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.AddConnectionAsync(ewApps.BusinessEntity.DTO.ConAddConnectionReqDTO,System.Threading.CancellationToken)">
            <summary>
            Establish connection to SAP connector.
            </summary>
            <param name="request"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.DeleteConnectionAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the connection asynchronous.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="connectorKey">The connector key.</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitBusinessDataAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitCustomerDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitVendorDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get customer from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitItemMasterDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get itemmaster from connector and add in local database.
            </summary>
            <param name="tenantId"></param> 
            <param name="token"></param>    
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitSalesOrderDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get sales order  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitInvoiceDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Invoice  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitInvoiceDataByIdAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Invoice  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitAPInvoiceDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Invoice  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitSalesOrderDataByIdAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get salesorder  from connector and add in local database.
            </summary>
            <param name="ERPSalesOrderKey"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitSalesQuotationDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Invoice  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitSalesQuotationDataByIdAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get salesorder  from connector and add in local database.
            </summary>
            <param name="ERPSalesOrderKey"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitDeliveryDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Delivery  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitContractDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Contract  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>  
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitVendorContractDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Contract  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>  
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitASNDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get ASN  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetItemPriceAsync(ewApps.BusinessEntity.DTO.PullItemPriceReqDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get item price  from connector.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetInitPurchaseOrderDataAsync(ewApps.BusinessEntity.DTO.ConTransRequestDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get purchase order  from connector and add in local database.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetItemMasterAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Order Attachment by id .
            </summary>
            <param name="itemId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetSalesOrderAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Order Attachment by id .
            </summary>
            <param name="salesOrderId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetSalesQuotationAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Quotation Attachment by id .
            </summary>
            <param name="salesQuotationId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetDeliveryAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Delivery Attachment by id .
            </summary>
            <param name="deliveryId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetContractAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Order Attachment by id .
            </summary>
            <param name="contractId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetASNAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sales Order Attachment by id .
            </summary>
            <param name="asnId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.GetARInvoiceAttachmentAsync(System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get invoice Attachment by id .
            </summary>
            <param name="invoiceId"></param>
            <param name="line"></param>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.PushSalesOrderDataInERPAsync(ewApps.BusinessEntity.DTO.BASalesOrderSyncDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Push sales order  to connector.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SAPSyncServiceDS.PushSalesQuotationDataInERPAsync(ewApps.BusinessEntity.DTO.BASalesQuotationSyncDTO,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Push sales order  to connector.
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.SyncHistoryDS">
            <summary>
             This class implements standard business logic and operations for SyncHistory entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SyncHistoryDS.#ctor(ewApps.BusinessEntity.Data.ISyncHistoryRepository)">
            <summary>
            
            </summary>
            <param name="syncHistoryRepo"></param>
        </member>
        <member name="T:ewApps.BusinessEntity.DS.SyncTimeLogDS">
            <summary>
             This class implements standard business logic and operations for SyncTimeLog entity.
            </summary>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SyncTimeLogDS.#ctor(ewApps.BusinessEntity.Data.ISyncTimeLogRepository)">
            <summary>
            
            </summary>
            <param name="syncTimeLogRepo"></param>
        </member>
        <member name="M:ewApps.BusinessEntity.DS.SyncTimeLogDS.GetSyncTimeLogAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Sync Time Log details
            </summary>
            <param name="tenantId"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
    </members>
</doc>
